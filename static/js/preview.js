var Dl=Object.defineProperty;var Xl=(t,e,s)=>e in t?Dl(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var R=(t,e,s)=>(Xl(t,typeof e!="symbol"?e+"":e,s),s);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const h of o.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&n(h)}).observe(document,{childList:!0,subtree:!0});function s(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=s(i);fetch(i.href,o)}})();function W(){}function nl(t,e){for(const s in e)t[s]=e[s];return t}function Tl(t){return t()}function al(){return Object.create(null)}function ie(t){t.forEach(Tl)}function Bl(t){return typeof t=="function"}function ve(t,e){return t!=t?e==e:t!==e||t&&typeof t=="object"||typeof t=="function"}function Yl(t){return Object.keys(t).length===0}function Gl(t){const e={};for(const s in t)s[0]!=="$"&&(e[s]=t[s]);return e}function fl(t,e){const s={};e=new Set(e);for(const n in t)!e.has(n)&&n[0]!=="$"&&(s[n]=t[n]);return s}function c(t,e){t.appendChild(e)}function Hl(t,e,s){const n=Jl(t);if(!n.getElementById(e)){const i=C("style");i.id=e,i.textContent=s,Kl(n,i)}}function Jl(t){if(!t)return document;const e=t.getRootNode?t.getRootNode():t.ownerDocument;return e&&e.host?e:t.ownerDocument}function Kl(t,e){return c(t.head||t,e),e.sheet}function B(t,e,s){t.insertBefore(e,s||null)}function S(t){t.parentNode&&t.parentNode.removeChild(t)}function x(t,e){for(let s=0;s<t.length;s+=1)t[s]&&t[s].d(e)}function C(t){return document.createElement(t)}function r(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function de(t){return document.createTextNode(t)}function Z(){return de(" ")}function cl(){return de("")}function pe(t,e,s,n){return t.addEventListener(e,s,n),()=>t.removeEventListener(e,s,n)}function l(t,e,s){s==null?t.removeAttribute(e):t.getAttribute(e)!==s&&t.setAttribute(e,s)}const Ul=["width","height"];function ul(t,e){const s=Object.getOwnPropertyDescriptors(t.__proto__);for(const n in e)e[n]==null?t.removeAttribute(n):n==="style"?t.style.cssText=e[n]:n==="__value"?t.value=t[n]=e[n]:s[n]&&s[n].set&&Ul.indexOf(n)===-1?t[n]=e[n]:l(t,n,e[n])}function dl(t,e){for(const s in e)l(t,s,e[s])}function Ql(t){return Array.from(t.childNodes)}function Rl(t,e){e=""+e,t.data!==e&&(t.data=e)}let tl;function xl(){if(tl===void 0){tl=!1;try{typeof window<"u"&&window.parent&&window.parent.document}catch{tl=!0}}return tl}function e1(t,e){getComputedStyle(t).position==="static"&&(t.style.position="relative");const n=C("iframe");n.setAttribute("style","display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;"),n.setAttribute("aria-hidden","true"),n.tabIndex=-1;const i=xl();let o;return i?(n.src="data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}<\/script>",o=pe(window,"message",h=>{h.source===n.contentWindow&&e()})):(n.src="about:blank",n.onload=()=>{o=pe(n.contentWindow,"resize",e),e()}),c(t,n),()=>{(i||o&&n.contentWindow)&&o(),S(n)}}function N(t,e,s){t.classList.toggle(e,!!s)}class t1{constructor(e=!1){R(this,"is_svg",!1);R(this,"e");R(this,"n");R(this,"t");R(this,"a");this.is_svg=e,this.e=this.n=null}c(e){this.h(e)}m(e,s,n=null){this.e||(this.is_svg?this.e=r(s.nodeName):this.e=C(s.nodeType===11?"TEMPLATE":s.nodeName),this.t=s.tagName!=="TEMPLATE"?s:s.content,this.c(e)),this.i(n)}h(e){this.e.innerHTML=e,this.n=Array.from(this.e.nodeName==="TEMPLATE"?this.e.content.childNodes:this.e.childNodes)}i(e){for(let s=0;s<this.n.length;s+=1)B(this.t,this.n[s],e)}p(e){this.d(),this.h(e),this.i(this.a)}d(){this.n.forEach(S)}}function l1(t){const e={};return t.childNodes.forEach(s=>{e[s.slot||"default"]=!0}),e}function pl(t,e){return new t(e)}let rl;function _e(t){rl=t}const re=[],te=[];let fe=[];const gl=[],s1=Promise.resolve();let ol=!1;function n1(){ol||(ol=!0,s1.then(F))}function il(t){fe.push(t)}const hl=new Set;let ce=0;function F(){if(ce!==0)return;const t=rl;do{try{for(;ce<re.length;){const e=re[ce];ce++,_e(e),i1(e.$$)}}catch(e){throw re.length=0,ce=0,e}for(_e(null),re.length=0,ce=0;te.length;)te.pop()();for(let e=0;e<fe.length;e+=1){const s=fe[e];hl.has(s)||(hl.add(s),s())}fe.length=0}while(re.length);for(;gl.length;)gl.pop()();ol=!1,hl.clear(),_e(t)}function i1(t){if(t.fragment!==null){t.update(),ie(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(il)}}function h1(t){const e=[],s=[];fe.forEach(n=>t.indexOf(n)===-1?e.push(n):s.push(n)),s.forEach(n=>n()),fe=e}const ll=new Set;let le;function K(){le={r:0,c:[],p:le}}function U(){le.r||ie(le.c),le=le.p}function A(t,e){t&&t.i&&(ll.delete(t),t.i(e))}function j(t,e,s,n){if(t&&t.o){if(ll.has(t))return;ll.add(t),le.c.push(()=>{ll.delete(t),n&&(s&&t.d(1),n())}),t.o(e)}else n&&n()}function H(t){return(t==null?void 0:t.length)!==void 0?t:Array.from(t)}function Vl(t,e){const s={},n={},i={$$scope:1};let o=t.length;for(;o--;){const h=t[o],f=e[o];if(f){for(const a in h)a in f||(n[a]=1);for(const a in f)i[a]||(s[a]=f[a],i[a]=1);t[o]=f}else for(const a in h)i[a]=1}for(const h in n)h in s||(s[h]=void 0);return s}function ge(t){t&&t.c()}function se(t,e,s){const{fragment:n,after_update:i}=t.$$;n&&n.m(e,s),il(()=>{const o=t.$$.on_mount.map(Tl).filter(Bl);t.$$.on_destroy?t.$$.on_destroy.push(...o):ie(o),t.$$.on_mount=[]}),i.forEach(il)}function ne(t,e){const s=t.$$;s.fragment!==null&&(h1(s.after_update),ie(s.on_destroy),s.fragment&&s.fragment.d(e),s.on_destroy=s.fragment=null,s.ctx=[])}function o1(t,e){t.$$.dirty[0]===-1&&(re.push(t),n1(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function $e(t,e,s,n,i,o,h,f=[-1]){const a=rl;_e(t);const d=t.$$={fragment:null,ctx:[],props:o,update:W,not_equal:i,bound:al(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(a?a.$$.context:[])),callbacks:al(),dirty:f,skip_bound:!1,root:e.target||a.$$.root};h&&h(d.root);let g=!1;if(d.ctx=s?s(t,e.props||{},(m,u,..._)=>{const q=_.length?_[0]:u;return d.ctx&&i(d.ctx[m],d.ctx[m]=q)&&(!d.skip_bound&&d.bound[m]&&d.bound[m](q),g&&o1(t,m)),u}):[],d.update(),g=!0,ie(d.before_update),d.fragment=n?n(d.ctx):!1,e.target){if(e.hydrate){const m=Ql(e.target);d.fragment&&d.fragment.l(m),m.forEach(S)}else d.fragment&&d.fragment.c();e.intro&&A(t.$$.fragment),se(t,e.target,e.anchor),F()}_e(a)}let Il;typeof HTMLElement=="function"&&(Il=class extends HTMLElement{constructor(e,s,n){super();R(this,"$$ctor");R(this,"$$s");R(this,"$$c");R(this,"$$cn",!1);R(this,"$$d",{});R(this,"$$r",!1);R(this,"$$p_d",{});R(this,"$$l",{});R(this,"$$l_u",new Map);this.$$ctor=e,this.$$s=s,n&&this.attachShadow({mode:"open"})}addEventListener(e,s,n){if(this.$$l[e]=this.$$l[e]||[],this.$$l[e].push(s),this.$$c){const i=this.$$c.$on(e,s);this.$$l_u.set(s,i)}super.addEventListener(e,s,n)}removeEventListener(e,s,n){if(super.removeEventListener(e,s,n),this.$$c){const i=this.$$l_u.get(s);i&&(i(),this.$$l_u.delete(s))}}async connectedCallback(){if(this.$$cn=!0,!this.$$c){let s=function(h){return()=>{let f;return{c:function(){f=C("slot"),h!=="default"&&l(f,"name",h)},m:function(g,m){B(g,f,m)},d:function(g){g&&S(f)}}}};var e=s;if(await Promise.resolve(),!this.$$cn)return;const n={},i=l1(this);for(const h of this.$$s)h in i&&(n[h]=[s(h)]);for(const h of this.attributes){const f=this.$$g_p(h.name);f in this.$$d||(this.$$d[f]=sl(f,h.value,this.$$p_d,"toProp"))}this.$$c=new this.$$ctor({target:this.shadowRoot||this,props:{...this.$$d,$$slots:n,$$scope:{ctx:[]}}});const o=()=>{this.$$r=!0;for(const h in this.$$p_d)if(this.$$d[h]=this.$$c.$$.ctx[this.$$c.$$.props[h]],this.$$p_d[h].reflect){const f=sl(h,this.$$d[h],this.$$p_d,"toAttribute");f==null?this.removeAttribute(h):this.setAttribute(this.$$p_d[h].attribute||h,f)}this.$$r=!1};this.$$c.$$.after_update.push(o),o();for(const h in this.$$l)for(const f of this.$$l[h]){const a=this.$$c.$on(h,f);this.$$l_u.set(f,a)}this.$$l={}}}attributeChangedCallback(e,s,n){var i;this.$$r||(e=this.$$g_p(e),this.$$d[e]=sl(e,n,this.$$p_d,"toProp"),(i=this.$$c)==null||i.$set({[e]:this.$$d[e]}))}disconnectedCallback(){this.$$cn=!1,Promise.resolve().then(()=>{this.$$cn||(this.$$c.$destroy(),this.$$c=void 0)})}$$g_p(e){return Object.keys(this.$$p_d).find(s=>this.$$p_d[s].attribute===e||!this.$$p_d[s].attribute&&s.toLowerCase()===e)||e}});function sl(t,e,s,n){var o;const i=(o=s[t])==null?void 0:o.type;if(e=i==="Boolean"&&typeof e!="boolean"?e!=null:e,!n||!s[t])return e;if(n==="toAttribute")switch(i){case"Object":case"Array":return e==null?null:JSON.stringify(e);case"Boolean":return e?"":null;case"Number":return e??null;default:return e}else switch(i){case"Object":case"Array":return e&&JSON.parse(e);case"Boolean":return e;case"Number":return e!=null?+e:e;default:return e}}function ze(t,e,s,n,i){const o=class extends Il{constructor(){super(t,s,i),this.$$p_d=e}static get observedAttributes(){return Object.keys(e).map(h=>(e[h].attribute||h).toLowerCase())}};return Object.keys(e).forEach(h=>{Object.defineProperty(o.prototype,h,{get(){return this.$$c&&h in this.$$c?this.$$c[h]:this.$$d[h]},set(f){var a;f=sl(h,f,e),this.$$d[h]=f,(a=this.$$c)==null||a.$set({[h]:f})}})}),n.forEach(h=>{Object.defineProperty(o.prototype,h,{get(){var f;return(f=this.$$c)==null?void 0:f[h]}})}),t.element=o,o}class we{constructor(){R(this,"$$");R(this,"$$set")}$destroy(){ne(this,1),this.$destroy=W}$on(e,s){if(!Bl(s))return W;const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(s),()=>{const i=n.indexOf(s);i!==-1&&n.splice(i,1)}}$set(e){this.$$set&&!Yl(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const c1="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(c1);function r1(t){Hl(t,"svelte-14o9oqk",".line.svelte-14o9oqk{padding-right:0.5rem}.inline.svelte-14o9oqk{display:inline}.key.svelte-14o9oqk{color:var(--key-color)}.string.svelte-14o9oqk{color:var(--string-color)}.number.svelte-14o9oqk{color:var(--number-color)}.boolean.svelte-14o9oqk{color:var(--boolean-color)}")}function ml(t,e,s){const n=t.slice();return n[2]=e[s][0],n[8]=e[s][1],n[4]=s,n}function _l(t,e,s){const n=t.slice();return n[3]=e[s],n}function bl(t){let e,s=Array(t[0]*2-1).fill("&nbsp;").join("")+"",n;return{c(){e=new t1(!1),n=cl(),e.a=n},m(i,o){e.m(s,i,o),B(i,n,o)},p(i,o){o&1&&s!==(s=Array(i[0]*2-1).fill("&nbsp;").join("")+"")&&e.p(s)},d(i){i&&(S(n),e.d())}}}function a1(t){let e;return{c(){e=C("span"),e.textContent="-",l(e,"class","symbol")},m(s,n){B(s,e,n)},p:W,d(s){s&&S(e)}}}function f1(t){let e,s,n;return{c(){e=C("span"),s=de(t[2]),n=de(":"),l(e,"class","key svelte-14o9oqk")},m(i,o){B(i,e,o),c(e,s),c(e,n)},p(i,o){o&4&&Rl(s,i[2])},d(i){i&&S(e)}}}function u1(t){let e,s;return{c(){e=C("span"),s=de(t[3]),l(e,"class","value svelte-14o9oqk"),N(e,"string",typeof t[3]=="string"),N(e,"number",typeof t[3]=="number"),N(e,"boolean",typeof t[3]=="boolean")},m(n,i){B(n,e,i),c(e,s)},p(n,i){i&8&&Rl(s,n[3]),i&8&&N(e,"string",typeof n[3]=="string"),i&8&&N(e,"number",typeof n[3]=="number"),i&8&&N(e,"boolean",typeof n[3]=="boolean")},i:W,o:W,d(n){n&&S(e)}}}function d1(t){let e,s,n=H(Object.entries(t[3])),i=[];for(let h=0;h<n.length;h+=1)i[h]=vl(ml(t,n,h));const o=h=>j(i[h],1,1,()=>{i[h]=null});return{c(){for(let h=0;h<i.length;h+=1)i[h].c();e=cl()},m(h,f){for(let a=0;a<i.length;a+=1)i[a]&&i[a].m(h,f);B(h,e,f),s=!0},p(h,f){if(f&11){n=H(Object.entries(h[3]));let a;for(a=0;a<n.length;a+=1){const d=ml(h,n,a);i[a]?(i[a].p(d,f),A(i[a],1)):(i[a]=vl(d),i[a].c(),A(i[a],1),i[a].m(e.parentNode,e))}for(K(),a=n.length;a<i.length;a+=1)o(a);U()}},i(h){if(!s){for(let f=0;f<n.length;f+=1)A(i[f]);s=!0}},o(h){i=i.filter(Boolean);for(let f=0;f<i.length;f+=1)j(i[f]);s=!1},d(h){h&&S(e),x(i,h)}}}function p1(t){let e,s,n=H(t[3]),i=[];for(let h=0;h<n.length;h+=1)i[h]=$l(_l(t,n,h));const o=h=>j(i[h],1,1,()=>{i[h]=null});return{c(){for(let h=0;h<i.length;h+=1)i[h].c();e=cl()},m(h,f){for(let a=0;a<i.length;a+=1)i[a]&&i[a].m(h,f);B(h,e,f),s=!0},p(h,f){if(f&9){n=H(h[3]);let a;for(a=0;a<n.length;a+=1){const d=_l(h,n,a);i[a]?(i[a].p(d,f),A(i[a],1)):(i[a]=$l(d),i[a].c(),A(i[a],1),i[a].m(e.parentNode,e))}for(K(),a=n.length;a<i.length;a+=1)o(a);U()}},i(h){if(!s){for(let f=0;f<n.length;f+=1)A(i[f]);s=!0}},o(h){i=i.filter(Boolean);for(let f=0;f<i.length;f+=1)j(i[f]);s=!1},d(h){h&&S(e),x(i,h)}}}function vl(t){let e,s;return e=new Me({props:{key:t[2],value:t[8],indent:t[0]!==void 0?t[0]+1:1,index:t[1]?t[4]:-1,"data-yolo":"asdf"}}),{c(){ge(e.$$.fragment)},m(n,i){se(e,n,i),s=!0},p(n,i){const o={};i&8&&(o.key=n[2]),i&8&&(o.value=n[8]),i&1&&(o.indent=n[0]!==void 0?n[0]+1:1),i&2&&(o.index=n[1]?n[4]:-1),e.$set(o)},i(n){s||(A(e.$$.fragment,n),s=!0)},o(n){j(e.$$.fragment,n),s=!1},d(n){ne(e,n)}}}function $l(t){let e,s;return e=new Me({props:{value:t[3],indent:t[0]!==void 0?t[0]+1:1,parentArray:!0}}),{c(){ge(e.$$.fragment)},m(n,i){se(e,n,i),s=!0},p(n,i){const o={};i&8&&(o.value=n[3]),i&1&&(o.indent=n[0]!==void 0?n[0]+1:1),e.$set(o)},i(n){s||(A(e.$$.fragment,n),s=!0)},o(n){j(e.$$.fragment,n),s=!1},d(n){ne(e,n)}}}function g1(t){let e,s,n,i,o,h,f,a=t[0]&&t[0]>0&&t[4]!=0&&bl(t);function d(z,L){return z[2]?f1:a1}let g=d(t),m=g(t);const u=[p1,d1,u1],_=[];function q(z,L){return L&8&&(i=null),i==null&&(i=!!Array.isArray(z[3])),i?0:typeof z[3]=="object"?1:z[3]!==void 0?2:-1}~(o=q(t,-1))&&(h=_[o]=u[o](t));let y=[{class:"line"},{"data-index":t[4]},{"data-indent":t[0]},t[5]],M={};for(let z=0;z<y.length;z+=1)M=nl(M,y[z]);return{c(){e=C("div"),a&&a.c(),s=Z(),m.c(),n=Z(),h&&h.c(),ul(e,M),N(e,"inline",t[4]==0),N(e,"svelte-14o9oqk",!0)},m(z,L){B(z,e,L),a&&a.m(e,null),c(e,s),m.m(e,null),c(e,n),~o&&_[o].m(e,null),f=!0},p(z,[L]){z[0]&&z[0]>0&&z[4]!=0?a?a.p(z,L):(a=bl(z),a.c(),a.m(e,s)):a&&(a.d(1),a=null),g===(g=d(z))&&m?m.p(z,L):(m.d(1),m=g(z),m&&(m.c(),m.m(e,n)));let k=o;o=q(z,L),o===k?~o&&_[o].p(z,L):(h&&(K(),j(_[k],1,1,()=>{_[k]=null}),U()),~o?(h=_[o],h?h.p(z,L):(h=_[o]=u[o](z),h.c()),A(h,1),h.m(e,null)):h=null),ul(e,M=Vl(y,[{class:"line"},(!f||L&16)&&{"data-index":z[4]},(!f||L&1)&&{"data-indent":z[0]},L&32&&z[5]])),N(e,"inline",z[4]==0),N(e,"svelte-14o9oqk",!0)},i(z){f||(A(h),f=!0)},o(z){j(h),f=!1},d(z){z&&S(e),a&&a.d(),m.d(),~o&&_[o].d()}}}function m1(t,e,s){const n=["key","value","indent","index","parentArray"];let i=fl(e,n),{key:o=""}=e,{value:h}=e,{indent:f=void 0}=e,{index:a=-1}=e,{parentArray:d=!1}=e;return t.$$set=g=>{e=nl(nl({},e),Gl(g)),s(5,i=fl(e,n)),"key"in g&&s(2,o=g.key),"value"in g&&s(3,h=g.value),"indent"in g&&s(0,f=g.indent),"index"in g&&s(4,a=g.index),"parentArray"in g&&s(1,d=g.parentArray)},[f,d,o,h,a,i]}class Me extends we{constructor(e){super(),$e(this,e,m1,g1,ve,{key:2,value:3,indent:0,index:4,parentArray:1},r1)}get key(){return this.$$.ctx[2]}set key(e){this.$$set({key:e}),F()}get value(){return this.$$.ctx[3]}set value(e){this.$$set({value:e}),F()}get indent(){return this.$$.ctx[0]}set indent(e){this.$$set({indent:e}),F()}get index(){return this.$$.ctx[4]}set index(e){this.$$set({index:e}),F()}get parentArray(){return this.$$.ctx[1]}set parentArray(e){this.$$set({parentArray:e}),F()}}ze(Me,{key:{},value:{},indent:{},index:{},parentArray:{type:"Boolean"}},[],[],!0);function _1(t){let e,s,n,i,o,h,f,a,d,g,m,u,_,q,y,M,z,L,k,X,T,P,b,w,p,v,E,V,Y,G,D,O,I,J,ee,he,ye,ke,qe,Ae,Le,Ee,Oe,Pe,Ce,je,Ne,Se,Te,Be,He,Re,Ve,Ie,Fe,We,Ze,De,Xe,Ye,Ge,Je,Ke,me,Ue,$,Qe,xe,et,tt,lt,st,nt,it,ht,ot,ct,rt,at,ft,ut,dt,pt,gt,mt,_t,bt,vt,$t,zt,wt,Mt,yt,kt,qt,At,Lt,Et,Ot,Pt,Ct,jt,Nt,St,Tt,Bt,Ht,Rt,Vt,It,Ft,Wt,Zt,Dt,Xt,Yt,Gt,Jt,Kt,Ut,Qt,xt;return{c(){e=r("svg"),s=r("defs"),n=r("clipPath"),i=r("path"),o=r("clipPath"),h=r("path"),f=r("style"),a=de(`.cls-1 {
				fill: none;
			}
			.cls-2 {
				fill: currentColor;
			}
			.cls-3 {
				opacity: 0.6;
			}
		`),d=r("path"),g=r("g"),m=r("path"),u=r("g"),_=r("path"),q=r("path"),y=r("path"),M=r("path"),z=r("path"),L=r("path"),k=r("path"),X=r("path"),T=r("path"),P=r("path"),b=r("path"),w=r("path"),p=r("path"),v=r("path"),E=r("path"),V=r("path"),Y=r("path"),G=r("path"),D=r("path"),O=r("path"),I=r("path"),J=r("path"),ee=r("path"),he=r("path"),ye=r("path"),ke=r("path"),qe=r("path"),Ae=r("path"),Le=r("path"),Ee=r("path"),Oe=r("path"),Pe=r("path"),Ce=r("path"),je=r("path"),Ne=r("path"),Se=r("path"),Te=r("path"),Be=r("path"),He=r("path"),Re=r("path"),Ve=r("path"),Ie=r("path"),Fe=r("path"),We=r("path"),Ze=r("path"),De=r("path"),Xe=r("path"),Ye=r("path"),Ge=r("path"),Je=r("path"),Ke=r("path"),me=r("g"),Ue=r("path"),$=r("g"),Qe=r("path"),xe=r("path"),et=r("path"),tt=r("path"),lt=r("path"),st=r("path"),nt=r("path"),it=r("path"),ht=r("path"),ot=r("path"),ct=r("path"),rt=r("path"),at=r("path"),ft=r("path"),ut=r("path"),dt=r("path"),pt=r("path"),gt=r("path"),mt=r("path"),_t=r("path"),bt=r("path"),vt=r("path"),$t=r("path"),zt=r("path"),wt=r("path"),Mt=r("path"),yt=r("path"),kt=r("path"),qt=r("path"),At=r("path"),Lt=r("path"),Et=r("path"),Ot=r("path"),Pt=r("path"),Ct=r("path"),jt=r("path"),Nt=r("path"),St=r("path"),Tt=r("path"),Bt=r("path"),Ht=r("path"),Rt=r("path"),Vt=r("path"),It=r("path"),Ft=r("path"),Wt=r("path"),Zt=r("path"),Dt=r("path"),Xt=r("path"),Yt=r("path"),Gt=r("path"),Jt=r("path"),Kt=r("path"),Ut=r("path"),Qt=r("path"),xt=r("path"),l(i,"d","M11.917 117.903H46.22v34.303H11.917z"),l(i,"class","cls-1"),l(i,"transform","rotate(-45.213 29.069 135.055)"),l(n,"id","clip-path"),l(h,"d","M85.291 124.708h20.12v20.12h-20.12z"),l(h,"class","cls-1"),l(h,"transform","rotate(-45.213 95.352 134.768)"),l(o,"id","clip-path-2"),l(d,"d","M43.558 233.756a27.512 27.512 0 0 0 9.857 8.16 29.546 29.546 0 0 0 13.514 3.069 29.027 29.027 0 0 0 11.097-1.893 19.264 19.264 0 0 0 7.377-5.157 19.891 19.891 0 0 0 4.048-7.639 34.114 34.114 0 0 0 1.24-9.334v-10.967h-.261a23.547 23.547 0 0 1-10.184 8.878 31.416 31.416 0 0 1-12.665 2.61 32.938 32.938 0 0 1-12.468-2.35 31.715 31.715 0 0 1-10.119-6.462 29.735 29.735 0 0 1-6.789-9.858 30.934 30.934 0 0 1-2.481-12.403 32.446 32.446 0 0 1 2.35-12.403 31.884 31.884 0 0 1 6.463-10.054 29.15 29.15 0 0 1 9.792-6.723 31.546 31.546 0 0 1 12.47-2.416 34.868 34.868 0 0 1 5.809.522 27.512 27.512 0 0 1 6.136 1.828 28.268 28.268 0 0 1 11.686 9.4h.26v-10.183h8.618v60.581a49.154 49.154 0 0 1-1.24 10.575 26.121 26.121 0 0 1-4.831 10.314 27.509 27.509 0 0 1-9.988 7.835q-6.399 3.132-16.712 3.132a41.977 41.977 0 0 1-16.32-3.002 37.929 37.929 0 0 1-13.057-9.27zm1.566-43.607a23.394 23.394 0 0 0 1.764 9.074 23.837 23.837 0 0 0 4.83 7.442 23.36 23.36 0 0 0 7.18 5.092 21.131 21.131 0 0 0 8.945 1.893 23.95 23.95 0 0 0 16.45-6.462 20.8 20.8 0 0 0 5.027-7.378 23.763 23.763 0 0 0 1.632-9.66 25.994 25.994 0 0 0-1.567-9.075 21.795 21.795 0 0 0-4.57-7.442 22.083 22.083 0 0 0-7.311-5.092 23.8 23.8 0 0 0-9.661-1.893 21.15 21.15 0 0 0-8.944 1.893 23.424 23.424 0 0 0-7.181 5.092 23.89 23.89 0 0 0-4.83 7.442 23.412 23.412 0 0 0-1.764 9.074zm89.304 31.335h-9.4v-92.438h28.462q14.1 0 22.261 6.136 8.158 6.139 8.16 18.54a23.099 23.099 0 0 1-6.07 16.255q-6.072 6.595-17.561 7.638l26.635 43.869h-11.49l-25.33-42.955h-15.667zm0-51.573h16.712a37.567 37.567 0 0 0 10.64-1.305 19.761 19.761 0 0 0 6.986-3.46 12.635 12.635 0 0 0 3.786-5.091 16.896 16.896 0 0 0 1.175-6.333 16.551 16.551 0 0 0-1.175-6.202 13.139 13.139 0 0 0-3.786-5.157 18.466 18.466 0 0 0-6.985-3.46 39.509 39.509 0 0 0-10.641-1.24h-16.712zm68.674-40.865H230q14.1 0 22.26 6.136 8.158 6.139 8.16 18.54 0 12.405-8.16 18.605-8.16 6.202-22.26 6.202h-17.496v42.955h-9.4zm9.401 40.865h15.146a37.577 37.577 0 0 0 10.64-1.305 19.773 19.773 0 0 0 6.986-3.46 12.639 12.639 0 0 0 3.786-5.091 16.883 16.883 0 0 0 1.175-6.333 16.538 16.538 0 0 0-1.175-6.202 13.144 13.144 0 0 0-3.786-5.157 18.476 18.476 0 0 0-6.986-3.46 39.52 39.52 0 0 0-10.64-1.24h-15.146zm142.31 36.95a35.853 35.853 0 0 1-5.809 6.659 36.72 36.72 0 0 1-7.9 5.418 45.053 45.053 0 0 1-9.595 3.59 44.342 44.342 0 0 1-10.903 1.306 49.45 49.45 0 0 1-19.126-3.656 45.885 45.885 0 0 1-25.395-25.46 53.595 53.595 0 0 1 0-38.907 45.88 45.88 0 0 1 25.395-25.46 49.438 49.438 0 0 1 19.126-3.655 46.731 46.731 0 0 1 17.235 3.394 34.765 34.765 0 0 1 14.753 11.229l-8.225 6.136a22.508 22.508 0 0 0-3.917-4.439 28.597 28.597 0 0 0-5.679-3.917 35.454 35.454 0 0 0-6.855-2.742 26.521 26.521 0 0 0-7.312-1.044 37.498 37.498 0 0 0-15.928 3.264 36.174 36.174 0 0 0-11.946 8.747 38.482 38.482 0 0 0-7.508 12.73 45.612 45.612 0 0 0 0 30.42 38.465 38.465 0 0 0 7.508 12.73 36.13 36.13 0 0 0 11.946 8.748 37.458 37.458 0 0 0 15.928 3.264 40.362 40.362 0 0 0 7.246-.652 30.097 30.097 0 0 0 7.051-2.22 26.679 26.679 0 0 0 6.529-4.243 31.464 31.464 0 0 0 5.678-6.723z"),l(d,"class","cls-2"),l(m,"d","M4.813 135.145L28.978 110.8l24.346 24.166-24.166 24.346z"),l(m,"class","cls-2"),l(_,"d","M5.242 110.8l-.429 3.798V110.8h.429z"),l(_,"class","cls-2"),l(q,"d","M5.81 110.8l-.997 8.817v-5.019l.429-3.798h.568z"),l(q,"class","cls-2"),l(y,"d","M6.377 110.8l-1.564 13.835v-5.018l.997-8.817h.567zm.567 0l-2.131 18.854v-5.019L6.377 110.8h.567z"),l(y,"class","cls-2"),l(M,"d","M7.51 110.8l-2.697 23.874v-5.02L6.944 110.8h.566z"),l(M,"class","cls-2"),l(z,"d","M8.078 110.8l-3.265 28.893v-5.019L7.51 110.8h.568zm.567 0l-3.832 33.911v-5.018L8.078 110.8h.567z"),l(z,"class","cls-2"),l(L,"d","M9.212 110.8l-4.399 38.93v-5.019L8.645 110.8h.567z"),l(L,"class","cls-2"),l(k,"d","M9.779 110.8l-4.966 43.949v-5.019l4.399-38.93h.567z"),l(k,"class","cls-2"),l(X,"d","M10.347 110.8l-5.479 48.48-.055-.006v-4.525L9.779 110.8h.568zm.566 0l-5.481 48.51h-.301l-.263-.03 5.479-48.48h.566z"),l(X,"class","cls-2"),l(T,"d","M11.48 110.8l-5.481 48.51h-.567l5.481-48.51h.567z"),l(T,"class","cls-2"),l(P,"d","M12.048 110.8l-5.482 48.51h-.567l5.481-48.51h.568z"),l(P,"class","cls-2"),l(b,"d","M12.615 110.8l-5.482 48.51h-.567l5.482-48.51h.567zm.567 0l-5.481 48.51h-.568l5.482-48.51h.567z"),l(b,"class","cls-2"),l(w,"d","M13.749 110.8l-5.481 48.51h-.567l5.481-48.51h.567z"),l(w,"class","cls-2"),l(p,"d","M14.316 110.8l-5.481 48.51h-.567l5.481-48.51h.567z"),l(p,"class","cls-2"),l(v,"d","M14.883 110.8l-5.482 48.51h-.566l5.481-48.51h.567z"),l(v,"class","cls-2"),l(E,"d","M15.45 110.8l-5.481 48.51h-.568l5.482-48.51h.567z"),l(E,"class","cls-2"),l(V,"d","M16.017 110.8l-5.481 48.51h-.567l5.481-48.51h.567zm.568 0l-5.482 48.51h-.567l5.481-48.51h.568z"),l(V,"class","cls-2"),l(Y,"d","M17.151 110.8l-5.481 48.51h-.567l5.482-48.51h.566z"),l(Y,"class","cls-2"),l(G,"d","M17.718 110.8l-5.48 48.51h-.568l5.481-48.51h.567z"),l(G,"class","cls-2"),l(D,"d","M18.285 110.8l-5.481 48.51h-.566l5.48-48.51h.567zm.568 0l-5.482 48.51h-.567l5.481-48.51h.568z"),l(D,"class","cls-2"),l(O,"d","M19.42 110.8l-5.482 48.51h-.567l5.482-48.51h.567z"),l(O,"class","cls-2"),l(I,"d","M19.987 110.8l-5.481 48.51h-.568l5.482-48.51h.567zm.566 0l-5.48 48.51h-.567l5.481-48.51h.566zm.568 0l-5.481 48.51h-.567l5.48-48.51h.568z"),l(I,"class","cls-2"),l(J,"d","M21.688 110.8l-5.482 48.51h-.566l5.481-48.51h.567z"),l(J,"class","cls-2"),l(ee,"d","M22.255 110.8l-5.481 48.51h-.568l5.482-48.51h.567zm.567 0l-5.481 48.51h-.567l5.481-48.51h.567z"),l(ee,"class","cls-2"),l(he,"d","M23.39 110.8l-5.482 48.51h-.567l5.481-48.51h.568z"),l(he,"class","cls-2"),l(ye,"d","M23.956 110.8l-5.481 48.51h-.567l5.482-48.51h.566zm.567 0l-5.481 48.51h-.567l5.481-48.51h.567z"),l(ye,"class","cls-2"),l(ke,"d","M25.091 110.8l-5.482 48.51h-.567l5.481-48.51h.568z"),l(ke,"class","cls-2"),l(qe,"d","M25.658 110.8l-5.482 48.51h-.567l5.482-48.51h.567z"),l(qe,"class","cls-2"),l(Ae,"d","M26.225 110.8l-5.482 48.51h-.567l5.482-48.51h.567z"),l(Ae,"class","cls-2"),l(Le,"d","M26.792 110.8l-5.481 48.51h-.568l5.482-48.51h.567z"),l(Le,"class","cls-2"),l(Ee,"d","M27.359 110.8l-5.481 48.51h-.567l5.481-48.51h.567z"),l(Ee,"class","cls-2"),l(Oe,"d","M27.926 110.8l-5.482 48.51h-.566l5.481-48.51h.567z"),l(Oe,"class","cls-2"),l(Pe,"d","M28.493 110.8l-5.481 48.51h-.568l5.482-48.51h.567zm.567 0l-5.481 48.51h-.567l5.481-48.51h.567z"),l(Pe,"class","cls-2"),l(Ce,"d","M29.628 110.8l-5.482 48.51h-.567l5.481-48.51h.568z"),l(Ce,"class","cls-2"),l(je,"d","M30.194 110.8l-5.481 48.51h-.567l5.482-48.51h.566z"),l(je,"class","cls-2"),l(Ne,"d","M30.761 110.8l-5.48 48.51h-.568l5.481-48.51h.567zm.567 0l-5.481 48.51h-.566l5.48-48.51h.567z"),l(Ne,"class","cls-2"),l(Se,"d","M31.896 110.8l-5.482 48.51h-.567l5.481-48.51h.568z"),l(Se,"class","cls-2"),l(Te,"d","M32.463 110.8l-5.482 48.51h-.567l5.482-48.51h.567z"),l(Te,"class","cls-2"),l(Be,"d","M33.03 110.8l-5.481 48.51h-.568l5.482-48.51h.567z"),l(Be,"class","cls-2"),l(He,"d","M33.596 110.8l-5.48 48.51h-.567l5.481-48.51h.566zm.568 0l-5.481 48.51h-.567l5.48-48.51h.568zm.567 0l-5.482 48.51h-.566l5.481-48.51h.567zm.567 0l-5.481 48.51h-.568l5.482-48.51h.567zm.567 0l-5.481 48.51h-.567l5.481-48.51h.567zm.568 0l-5.482 48.51h-.567l5.481-48.51h.568zm.566 0l-5.481 48.51h-.567l5.482-48.51h.566zm.567 0l-5.481 48.51h-.567l5.481-48.51h.567z"),l(He,"class","cls-2"),l(Re,"d","M38.133 110.8l-5.481 48.51h-.567l5.481-48.51h.567z"),l(Re,"class","cls-2"),l(Ve,"d","M38.701 110.8l-5.482 48.51h-.567l5.481-48.51h.568z"),l(Ve,"class","cls-2"),l(Ie,"d","M39.268 110.8l-5.482 48.51h-.567l5.482-48.51h.567z"),l(Ie,"class","cls-2"),l(Fe,"d","M39.835 110.8l-5.481 48.51h-.568l5.482-48.51h.567z"),l(Fe,"class","cls-2"),l(We,"d","M40.402 110.8l-5.481 48.51h-.567l5.481-48.51h.567z"),l(We,"class","cls-2"),l(Ze,"d","M40.969 110.8l-5.482 48.51h-.566l5.481-48.51h.567z"),l(Ze,"class","cls-2"),l(De,"d","M41.536 110.8l-5.482 48.51h-.567l5.482-48.51h.567z"),l(De,"class","cls-2"),l(Xe,"d","M42.103 110.8l-5.481 48.51h-.568l5.482-48.51h.567z"),l(Xe,"class","cls-2"),l(Ye,"d","M42.671 110.8l-5.482 48.51h-.567l5.481-48.51h.568z"),l(Ye,"class","cls-2"),l(Ge,"d","M43.237 110.8l-5.481 48.51h-.567l5.482-48.51h.566z"),l(Ge,"class","cls-2"),l(Je,"d","M43.804 110.8l-5.48 48.51h-.568l5.481-48.51h.567z"),l(Je,"class","cls-2"),l(Ke,"d","M53.006 110.8l.318.035v48.475h-15l5.48-48.51h9.202z"),l(Ke,"class","cls-2"),l(u,"clip-path","url(#clip-path)"),l(g,"class","cls-3"),l(Ue,"d","M81.124 134.822l14.174-14.28 14.28 14.174-14.174 14.28z"),l(Ue,"class","cls-2"),l(Qe,"d","M109.579 128.852l-.387-8.312h.387v8.312z"),l(Qe,"class","cls-2"),l(xe,"d","M109.579 137.585l-.794-17.045h.407l.387 8.312v8.733zm0 8.733l-1.201-25.778h.407l.794 17.045v8.733z"),l(xe,"class","cls-2"),l(et,"d","M109.297 148.995l-1.325-28.455h.406l1.201 25.778v2.677h-.282z"),l(et,"class","cls-2"),l(tt,"d","M108.89 148.995l-1.325-28.455h.407l1.325 28.455h-.407z"),l(tt,"class","cls-2"),l(lt,"d","M108.483 148.995l-1.325-28.455h.407l1.325 28.455h-.407zm-.407 0l-1.325-28.455h.407l1.325 28.455h-.407z"),l(lt,"class","cls-2"),l(st,"d","M107.67 148.995l-1.325-28.455h.406l1.325 28.455h-.406z"),l(st,"class","cls-2"),l(nt,"d","M107.263 148.995l-1.326-28.455h.408l1.325 28.455h-.407zm-.407 0l-1.325-28.455h.406l1.326 28.455h-.407z"),l(nt,"class","cls-2"),l(it,"d","M106.45 148.995l-1.326-28.455h.407l1.325 28.455h-.406z"),l(it,"class","cls-2"),l(ht,"d","M106.043 148.995l-1.325-28.455h.406l1.326 28.455h-.407z"),l(ht,"class","cls-2"),l(ot,"d","M105.636 148.995l-1.326-28.455h.408l1.325 28.455h-.407z"),l(ot,"class","cls-2"),l(ct,"d","M105.229 148.995l-1.325-28.455h.406l1.326 28.455h-.407z"),l(ct,"class","cls-2"),l(rt,"d","M104.823 148.995l-1.326-28.455h.407l1.325 28.455h-.406z"),l(rt,"class","cls-2"),l(at,"d","M104.416 148.995l-1.326-28.455h.407l1.326 28.455h-.407z"),l(at,"class","cls-2"),l(ft,"d","M104.009 148.995l-1.326-28.455h.407l1.326 28.455h-.407z"),l(ft,"class","cls-2"),l(ut,"d","M103.602 148.995l-1.325-28.455h.406l1.326 28.455h-.407z"),l(ut,"class","cls-2"),l(dt,"d","M103.196 148.995l-1.325-28.455h.406l1.325 28.455h-.406z"),l(dt,"class","cls-2"),l(pt,"d","M102.788 148.995l-1.325-28.455h.408l1.325 28.455h-.408z"),l(pt,"class","cls-2"),l(gt,"d","M102.382 148.995l-1.325-28.455h.406l1.325 28.455h-.406zm-.407 0l-1.325-28.455h.407l1.325 28.455h-.407z"),l(gt,"class","cls-2"),l(mt,"d","M101.569 148.995l-1.325-28.455h.406l1.325 28.455h-.406z"),l(mt,"class","cls-2"),l(_t,"d","M101.161 148.995l-1.325-28.455h.408l1.325 28.455h-.408z"),l(_t,"class","cls-2"),l(bt,"d","M100.755 148.995L99.43 120.54h.406l1.325 28.455h-.406zm-.407 0l-1.325-28.455h.407l1.325 28.455h-.407z"),l(bt,"class","cls-2"),l(vt,"d","M99.942 148.995l-1.326-28.455h.407l1.325 28.455h-.406z"),l(vt,"class","cls-2"),l($t,"d","M99.535 148.995l-1.326-28.455h.407l1.326 28.455h-.407z"),l($t,"class","cls-2"),l(zt,"d","M99.128 148.995l-1.325-28.455h.406l1.326 28.455h-.407z"),l(zt,"class","cls-2"),l(wt,"d","M98.722 148.995l-1.326-28.455h.407l1.325 28.455h-.406zm-.408 0l-1.325-28.455h.407l1.326 28.455h-.408z"),l(wt,"class","cls-2"),l(Mt,"d","M97.908 148.995l-1.326-28.455h.407l1.325 28.455h-.406z"),l(Mt,"class","cls-2"),l(yt,"d","M97.501 148.995l-1.325-28.455h.406l1.326 28.455h-.407z"),l(yt,"class","cls-2"),l(kt,"d","M97.095 148.995l-1.326-28.455h.407l1.325 28.455h-.406zm-.408 0l-1.325-28.455h.407l1.326 28.455h-.408z"),l(kt,"class","cls-2"),l(qt,"d","M96.281 148.995l-1.326-28.455h.407l1.325 28.455h-.406zm-.407 0l-1.325-28.455h.406l1.326 28.455h-.407zm-.407 0l-1.325-28.455h.407l1.325 28.455h-.407zm-.407 0l-1.325-28.455h.407l1.325 28.455h-.407zm-.406 0l-1.325-28.455h.406l1.325 28.455h-.406zm-.407 0l-1.325-28.455h.407l1.325 28.455h-.407zm-.407 0l-1.325-28.455h.407l1.325 28.455h-.407z"),l(qt,"class","cls-2"),l(At,"d","M93.433 148.995l-1.325-28.455h.407l1.325 28.455h-.407z"),l(At,"class","cls-2"),l(Lt,"d","M93.027 148.995l-1.325-28.455h.406l1.325 28.455h-.406z"),l(Lt,"class","cls-2"),l(Et,"d","M92.62 148.995l-1.325-28.455h.407l1.325 28.455h-.407zm-.407 0l-1.325-28.455h.407l1.325 28.455h-.407zm-.407 0l-1.325-28.455h.407l1.325 28.455h-.407z"),l(Et,"class","cls-2"),l(Ot,"d","M91.4 148.995l-1.325-28.455h.406l1.325 28.455H91.4z"),l(Ot,"class","cls-2"),l(Pt,"d","M90.993 148.995l-1.326-28.455h.408l1.325 28.455h-.407z"),l(Pt,"class","cls-2"),l(Ct,"d","M90.586 148.995l-1.325-28.455h.406l1.326 28.455h-.407z"),l(Ct,"class","cls-2"),l(jt,"d","M90.18 148.995l-1.326-28.455h.407l1.325 28.455h-.406zm-.407 0l-1.325-28.455h.406l1.326 28.455h-.407z"),l(jt,"class","cls-2"),l(Nt,"d","M89.366 148.995L88.04 120.54h.408l1.325 28.455h-.407z"),l(Nt,"class","cls-2"),l(St,"d","M88.959 148.995l-1.325-28.455h.406l1.326 28.455h-.407z"),l(St,"class","cls-2"),l(Tt,"d","M88.553 148.995l-1.326-28.455h.407l1.325 28.455h-.406z"),l(Tt,"class","cls-2"),l(Bt,"d","M88.146 148.995l-1.325-28.455h.406l1.326 28.455h-.407z"),l(Bt,"class","cls-2"),l(Ht,"d","M87.739 148.995l-1.326-28.455h.408l1.325 28.455h-.407zm-.407 0l-1.325-28.455h.406l1.326 28.455h-.407z"),l(Ht,"class","cls-2"),l(Rt,"d","M86.926 148.995l-1.325-28.455h.406l1.325 28.455h-.406z"),l(Rt,"class","cls-2"),l(Vt,"d","M86.519 148.995l-1.326-28.455h.408l1.325 28.455h-.407zm-.407 0l-1.325-28.455h.406l1.326 28.455h-.407zm-.407 0L84.38 120.54h.407l1.325 28.455h-.407z"),l(Vt,"class","cls-2"),l(It,"d","M85.299 148.995l-1.325-28.455h.406l1.325 28.455h-.406z"),l(It,"class","cls-2"),l(Ft,"d","M84.891 148.995l-1.325-28.455h.408l1.325 28.455h-.408z"),l(Ft,"class","cls-2"),l(Wt,"d","M84.485 148.995L83.16 120.54h.406l1.325 28.455h-.406z"),l(Wt,"class","cls-2"),l(Zt,"d","M84.078 148.995l-1.325-28.455h.407l1.325 28.455h-.407z"),l(Zt,"class","cls-2"),l(Dt,"d","M83.672 148.995l-1.326-28.455h.407l1.325 28.455h-.406z"),l(Dt,"class","cls-2"),l(Xt,"d","M83.265 148.995l-1.326-28.455h.407l1.326 28.455h-.407z"),l(Xt,"class","cls-2"),l(Yt,"d","M82.858 148.995l-1.325-28.455h.406l1.326 28.455h-.407z"),l(Yt,"class","cls-2"),l(Gt,"d","M82.452 148.995l-1.326-28.455h.407l1.325 28.455h-.406z"),l(Gt,"class","cls-2"),l(Jt,"d","M82.044 148.995l-.919-19.756v-8.699h.001l1.326 28.455h-.408z"),l(Jt,"class","cls-2"),l(Kt,"d","M81.638 148.995l-.513-11.023v-8.733l.919 19.756h-.406z"),l(Kt,"class","cls-2"),l(Ut,"d","M81.231 148.995l-.106-2.29v-8.733l.513 11.023h-.407z"),l(Ut,"class","cls-2"),l(Qt,"d","M81.125 146.705l.106 2.29h-.106v-2.29z"),l(Qt,"class","cls-2"),l($,"clip-path","url(#clip-path-2)"),l(me,"class","cls-3"),l(xt,"d","M30.045 120.389l-14.634 14.743 14.743 14.634 12.472-.046-13.079-12.974 64.584-.239-5.661 5.698 6.237-.023 7.317-7.372-7.372-7.316-6.236.023 5.703 5.657-64.584.24 12.981-13.071-12.471.046z"),l(xt,"class","cls-2"),l(e,"xmlns","http://www.w3.org/2000/svg"),l(e,"width",t[0]),l(e,"height",t[1]),l(e,"viewBox","-2.25 103.75 364.00 156.00")},m(oe,el){B(oe,e,el),c(e,s),c(s,n),c(n,i),c(s,o),c(o,h),c(s,f),c(f,a),c(e,d),c(e,g),c(g,m),c(g,u),c(u,_),c(u,q),c(u,y),c(u,M),c(u,z),c(u,L),c(u,k),c(u,X),c(u,T),c(u,P),c(u,b),c(u,w),c(u,p),c(u,v),c(u,E),c(u,V),c(u,Y),c(u,G),c(u,D),c(u,O),c(u,I),c(u,J),c(u,ee),c(u,he),c(u,ye),c(u,ke),c(u,qe),c(u,Ae),c(u,Le),c(u,Ee),c(u,Oe),c(u,Pe),c(u,Ce),c(u,je),c(u,Ne),c(u,Se),c(u,Te),c(u,Be),c(u,He),c(u,Re),c(u,Ve),c(u,Ie),c(u,Fe),c(u,We),c(u,Ze),c(u,De),c(u,Xe),c(u,Ye),c(u,Ge),c(u,Je),c(u,Ke),c(e,me),c(me,Ue),c(me,$),c($,Qe),c($,xe),c($,et),c($,tt),c($,lt),c($,st),c($,nt),c($,it),c($,ht),c($,ot),c($,ct),c($,rt),c($,at),c($,ft),c($,ut),c($,dt),c($,pt),c($,gt),c($,mt),c($,_t),c($,bt),c($,vt),c($,$t),c($,zt),c($,wt),c($,Mt),c($,yt),c($,kt),c($,qt),c($,At),c($,Lt),c($,Et),c($,Ot),c($,Pt),c($,Ct),c($,jt),c($,Nt),c($,St),c($,Tt),c($,Bt),c($,Ht),c($,Rt),c($,Vt),c($,It),c($,Ft),c($,Wt),c($,Zt),c($,Dt),c($,Xt),c($,Yt),c($,Gt),c($,Jt),c($,Kt),c($,Ut),c($,Qt),c(e,xt)},p(oe,[el]){el&1&&l(e,"width",oe[0]),el&2&&l(e,"height",oe[1])},i:W,o:W,d(oe){oe&&S(e)}}}function b1(t,e,s){let{width:n=50}=e,{height:i=void 0}=e;return t.$$set=o=>{"width"in o&&s(0,n=o.width),"height"in o&&s(1,i=o.height)},[n,i]}class Fl extends we{constructor(e){super(),$e(this,e,b1,_1,ve,{width:0,height:1})}get width(){return this.$$.ctx[0]}set width(e){this.$$set({width:e}),F()}get height(){return this.$$.ctx[1]}set height(e){this.$$set({height:e}),F()}}ze(Fl,{width:{},height:{}},[],[],!0);function v1(t){let e,s,n,i,o,h;return{c(){e=r("svg"),s=r("g"),n=r("path"),i=r("path"),o=r("path"),h=r("path"),l(n,"fill","currentColor"),l(n,"d","M844 1002H608V390h612v612H984.34v-3.3c0-38.75-31.41-70.17-70.17-70.17-38.75 0-70.17 31.41-70.17 70.17v3.3Z"),l(i,"fill","#FFF"),l(i,"d","M821.65 607.28c-27.67243.44114-41.56012.52444-41.66305.24992C775.25084 594.8982 766.93188 583.76 751.93 583.76c-14.28 0-26.6 10.36-26.6 25.2 0 42.84 102.48 14.84 102.48 96.04 0 26.6-20.16 66.36-73.92 66.36-41.44 0-71.4-20.16-78.12-62.72l45.30659-.12531a62.0151 62.0151 0 0 0 .31735.99901C726.1928 724.18617 735.73249 734.4 753.61 734.4c17.08 0 31.36-8.96 31.36-27.72 0-43.68-102.48-18.48-102.48-92.68 0-39.2 33.04-67.2 70.84-67.2 36.96 0 64.68 23.8 68.32 60.48ZM889.47 768h-43.68V550.16h43.68V768Z"),l(o,"fill","currentColor"),l(o,"d","M374 221v3.3c0 38.76-31.42 70.17-70.17 70.17-38.76 0-70.17-31.42-70.17-70.17V221H-2v612h612V221H374Z"),l(h,"fill","#FFF"),l(h,"fill-rule","nonzero"),l(h,"d","M140.16 550.81h40.56l27.69 147.47h.5l33.28-147.47h37.94l30.06 149.28h.59l31.56-149.28h39.78L330.43 767.5h-40.25l-29.81-147.47h-.78L227.68 767.5h-41l-46.52-216.69Zm287.69 0h63.94l63.5 216.69h-41.84l-13.81-48.22H426.8l-10.66 48.22h-40.75l52.46-216.69Zm24.34 53.41-17.69 79.5h55.06l-20.31-79.5h-17.06Z"),l(s,"fill","none"),l(s,"fill-rule","evenodd"),l(e,"xmlns","http://www.w3.org/2000/svg"),l(e,"width",t[0]),l(e,"height",t[1]),l(e,"viewBox","0 0 1224 1224")},m(f,a){B(f,e,a),c(e,s),c(s,n),c(s,i),c(s,o),c(s,h)},p(f,[a]){a&1&&l(e,"width",f[0]),a&2&&l(e,"height",f[1])},i:W,o:W,d(f){f&&S(e)}}}function $1(t,e,s){let{width:n=50}=e,{height:i=void 0}=e;return t.$$set=o=>{"width"in o&&s(0,n=o.width),"height"in o&&s(1,i=o.height)},[n,i]}class Wl extends we{constructor(e){super(),$e(this,e,$1,v1,ve,{width:0,height:1})}get width(){return this.$$.ctx[0]}set width(e){this.$$set({width:e}),F()}get height(){return this.$$.ctx[1]}set height(e){this.$$set({height:e}),F()}}ze(Wl,{width:{},height:{}},[],[],!0);function z1(t){let e,s,n;return{c(){e=r("svg"),s=r("g"),n=r("path"),l(n,"d","M186.36492 520.00352h20.8v-4.4h-20.8zm31.2-6c6.8 0 10.88-3.32 10.88-8.56 0-10-14.64-6.52-14.64-12.12 0-2.16 1.96-3.32 5.4-3.32 2.32 0 4.84.44 6.8 1.2l1.48-4.12c-2.32-1.04-5.24-1.6-7.96-1.6-6.64 0-11.08 3.4-11.08 8.6 0 9.48 14.56 6.4 14.56 12.04 0 2-1.76 3.28-5.2 3.28-2.52 0-5.6-.6-8.32-1.72l-1.48 4.16c2.96 1.32 6.36 2.16 9.56 2.16zm21.44-.08c2.68 0 5.24-1.2 7-3.4l-.76-3.12c-1.16 1.32-2.76 2.12-4.4 2.12-2.76 0-3.56-2.12-3.56-4.04v-11.32h-5.12v12.4c0 4.52 2.8 7.36 6.84 7.36zm6.96-.32h3.68v-19.44h-5.12v16.04zm10.39997 0h4.92v-22.48c0-2.08 1.16-3.24 3.24-3.24 1 0 2.24.24 3 .6l1.04-3.68c-1.24-.68-2.8-1.16-4.44-1.16-4.64 0-7.76 3.16-7.76 7.92zm-3-15.36h13.52v-4.08h-13.52zm17.96002 15.36h4.92v-22.48c0-2.08 1.16-3.24 3.24-3.24 1 0 2.24.24 3 .6l1.04-3.68c-1.24-.68-2.8-1.16-4.44-1.16-4.64 0-7.76 3.16-7.76 7.92zm-3-15.36h13.52v-4.08h-13.52zm17 15.36h5.08v-19.44h-5.08zm2.56-23c1.92 0 3.12-1.24 3.12-3.16 0-1.92-1.2-3.16-3.12-3.16-1.92 0-3.12 1.24-3.12 3.16 0 1.92 1.2 3.16 3.12 3.16zm20.6 23h6.56l-8.72-11.6-.28 2.12 8.24-9.96h-5.92l-7.36 9.16zm-12.28 0h5.04v-29.56h-5.04zm28.00001.4c5.36 0 8.52-2.32 8.52-6.24 0-7.28-11-4.8-11-8.08 0-1.2 1.36-1.92 3.76-1.92 1.6 0 3.52.32 5.32.84l1.04-3.84c-1.8-.64-4.08-1-6.28-1-5.56 0-8.8 2.28-8.8 6.24 0 7.24 10.88 4.48 10.88 8.04 0 1.24-1.32 2-3.52 2-1.88 0-4.44-.52-6.48-1.32l-1.16 3.8c2.24.92 5.08 1.48 7.72 1.48z"),l(n,"transform","translate(-186.36492 -483.64352)"),l(n,"aria-label","_Suffiks"),l(n,"fill","currentColor"),l(e,"width",t[0]),l(e,"height",t[1]),l(e,"viewBox","0 0 146.36 36.36"),l(e,"xmlns","http://www.w3.org/2000/svg")},m(i,o){B(i,e,o),c(e,s),c(s,n)},p(i,[o]){o&1&&l(e,"width",i[0]),o&2&&l(e,"height",i[1])},i:W,o:W,d(i){i&&S(e)}}}function w1(t,e,s){let{width:n=50}=e,{height:i=void 0}=e;return t.$$set=o=>{"width"in o&&s(0,n=o.width),"height"in o&&s(1,i=o.height)},[n,i]}class Zl extends we{constructor(e){super(),$e(this,e,w1,z1,ve,{width:0,height:1})}get width(){return this.$$.ctx[0]}set width(e){this.$$set({width:e}),F()}get height(){return this.$$.ctx[1]}set height(e){this.$$set({height:e}),F()}}ze(Zl,{width:{},height:{}},[],[],!0);const be=[{lines:{apiVersion:"suffiks.io/v1",kind:"Application",metadata:{name:"my-application"},spec:void 0}},{indent:1,lines:{image:"my-image:latest",port:3e3},service:"suffiks"},{indent:1,lines:{ingresses:[{host:"suffiks.io",paths:["/"]}]},service:"ingresses"},{indent:1,lines:{proxy:!0},service:"proxy"}],ae=[{id:"suffiks",name:"Suffiks",description:"The base resource provided by Suffiks",component:Zl},{id:"ingresses",name:"Ingresses",description:"A GRPC Extension providing Ingress-resources",component:Fl},{id:"proxy",name:"HTTP Proxy",description:"A WASI Extension adding an environment variable",component:Wl}],Q=[{id:"deployment",service:"suffiks",code:[{lines:{apiVersion:"apps/v1",kind:"Deployment",metadata:{name:"my-application"},spec:{replicas:1,selector:{matchLabels:{"app.kubernetes.io/name":"MyApp"}},template:{metadata:{labels:{"app.kubernetes.io/name":"MyApp"}},spec:{image:"my-image:latest",ports:[{containerPort:3e3,name:"http"}]}}}},service:"suffiks"},{indent:3,lines:{env:[{key:"HTTP_PROXY",value:"proxy:8080"},{key:"HTTPS_PROXY",value:"proxy:8080"}]},service:"proxy"}]},{id:"service",service:"suffiks",code:[{lines:{apiVersion:"v1",kind:"Service",metadata:{name:"my-application"},spec:void 0}},{indent:1,lines:{selector:{"app.kubernetes.io/name":"MyApp"},ports:[{protocol:"TCP",port:80,targetPort:"http",name:"http"}]},service:"suffiks"}]},{id:"ingress",service:"ingresses",code:[{indent:0,lines:{apiVersion:"networking.k8s.io/v1",kind:"Ingress",metadata:{name:"my-application"},spec:{rules:[{http:{paths:[{path:"/",pathType:"Prefix",backend:{service:{name:"my-application",port:{name:"http"}}}}]}}]}},service:"ingresses"}]}],ue=t=>{const e=t.getBoundingClientRect();return{left:e.left+window.scrollY,top:e.top+window.scrollX,width:e.width||t.offsetWidth,height:e.height||t.offsetHeight}},zl=(t,e,s,n=!1)=>{const i=ue(t),o=ue(e),h=ue(s);if(n){const m=h.left+h.width-i.left,u=h.top+h.height/2-i.top,_=o.left-i.left,q=o.top+o.height/2-i.top;return{x1:m,x2:_,y1:u,y2:q}}const f=o.left+o.width-i.left,a=o.top+o.height/2-i.top,d=h.left-i.left,g=h.top+h.height/2-i.top;return{x1:f,x2:d,y1:a,y2:g}};function M1(t){Hl(t,"svelte-1eqhb7b",`.wrapper.svelte-1eqhb7b.svelte-1eqhb7b{position:relative;font-size:0.8rem;white-space:nowrap;text-align:left;--codeblock-outline:#f77242;--codeblock-bg-hover:rgb(243 244 246 / 0.1);--key-color:#008080;--string-color:#0451a5;--number-color:#098658;--boolean-color:#0000ff}.wrapper.dark.svelte-1eqhb7b.svelte-1eqhb7b{--codeblock-outline:#f77242;--codeblock-bg-hover:rgb(243 244 246 / 0.1);--key-color:rgba(251, 180, 115, 1);--string-color:rgba(220, 220, 113, 1);--number-color:rgba(255, 92, 38, 1);--boolean-color:rgba(92, 255, 38, 1)}.wrapper.svelte-1eqhb7b>svg.svelte-1eqhb7b{position:absolute;pointer-events:none;top:0;left:0}.preview.svelte-1eqhb7b.svelte-1eqhb7b{display:flex;flex-direction:row;gap:2.2rem;align-items:center;justify-content:space-between}.services.svelte-1eqhb7b.svelte-1eqhb7b{display:flex;flex-direction:column;gap:1.25rem}.service.svelte-1eqhb7b .logo.svelte-1eqhb7b{padding:1rem;border:1px;border:#ffffff;border-radius:5px}.service.svelte-1eqhb7b .details.svelte-1eqhb7b{display:none}.code.svelte-1eqhb7b.svelte-1eqhb7b{cursor:default;font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      Liberation Mono, Courier New, monospace}.codeblock.svelte-1eqhb7b.svelte-1eqhb7b{width:fit-content;border-radius:0.375rem;outline-width:1px;outline-color:var(--codeblock-outline);transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms;outline-offset:1px}.codeblock.hover.svelte-1eqhb7b.svelte-1eqhb7b:hover,.codeblock.active.svelte-1eqhb7b.svelte-1eqhb7b{background-color:var(--codeblock-bg-hover);outline-style:solid}.divider.svelte-1eqhb7b.svelte-1eqhb7b::before{content:"---";display:block;padding:0.2rem 0}dialog.svelte-1eqhb7b.svelte-1eqhb7b{position:absolute;padding:1rem;z-index:10;font-size:1rem;background:white;border-radius:5px;border:1px solid gray}`)}function wl(t,e,s){const n=t.slice();return n[23]=e[s],n}function Ml(t,e,s){const n=t.slice();return n[26]=e[s],n[27]=e,n[28]=s,n}function yl(t,e,s){const n=t.slice();return n[29]=e[s],n[30]=e,n[31]=s,n}function kl(t,e,s){const n=t.slice();return n[32]=e[s][0],n[33]=e[s][1],n}function ql(t,e,s){const n=t.slice();return n[36]=e[s],n[37]=e,n[31]=s,n}function Al(t,e,s){const n=t.slice();return n[29]=e[s],n[38]=e,n[31]=s,n}function Ll(t,e,s){const n=t.slice();return n[32]=e[s][0],n[33]=e[s][1],n}function El(t){let e,s;return e=new Me({props:{key:t[32],value:t[33],indent:t[29].indent}}),{c(){ge(e.$$.fragment)},m(n,i){se(e,n,i),s=!0},p:W,i(n){s||(A(e.$$.fragment,n),s=!0)},o(n){j(e.$$.fragment,n),s=!1},d(n){ne(e,n)}}}function Ol(t){let e,s,n=t[31],i,o,h,f=H(Object.entries(t[29].lines)),a=[];for(let _=0;_<f.length;_+=1)a[_]=El(Ll(t,f,_));const d=_=>j(a[_],1,1,()=>{a[_]=null});function g(){return t[15](t[29])}const m=()=>t[16](e,n),u=()=>t[16](null,n);return{c(){e=C("div");for(let _=0;_<a.length;_+=1)a[_].c();s=Z(),l(e,"class","svelte-1eqhb7b"),N(e,"codeblock",!!t[29].service),N(e,"hover",!!t[29].service),N(e,"active",t[5].includes(t[31]))},m(_,q){B(_,e,q);for(let y=0;y<a.length;y+=1)a[y]&&a[y].m(e,null);c(e,s),m(),i=!0,o||(h=[pe(e,"mouseenter",t[29].service?g:null),pe(e,"mouseleave",t[13])],o=!0)},p(_,q){if(t=_,q&0){f=H(Object.entries(t[29].lines));let y;for(y=0;y<f.length;y+=1){const M=Ll(t,f,y);a[y]?(a[y].p(M,q),A(a[y],1)):(a[y]=El(M),a[y].c(),A(a[y],1),a[y].m(e,s))}for(K(),y=f.length;y<a.length;y+=1)d(y);U()}n!==t[31]&&(u(),n=t[31],m()),(!i||q[0]&32)&&N(e,"active",t[5].includes(t[31]))},i(_){if(!i){for(let q=0;q<f.length;q+=1)A(a[q]);i=!0}},o(_){a=a.filter(Boolean);for(let q=0;q<a.length;q+=1)j(a[q]);i=!1},d(_){_&&S(e),x(a,_),u(),o=!1,ie(h)}}}function Pl(t){let e,s,n,i,o,h=t[31],f,a,d,g,m,u,_,q,y,M,z,L;const k=()=>t[17](s,h),X=()=>t[17](null,h);var T=t[36].component;function P(v){return{props:{width:64}}}T&&(d=pl(T,P()));function b(){return t[18](t[36],t[31])}const w=()=>t[19](e,h),p=()=>t[19](null,h);return{c(){e=C("button"),s=C("dialog"),n=C("h3"),n.textContent=`${t[36].name}`,i=Z(),o=C("p"),o.textContent=`${t[36].description}`,f=Z(),a=C("div"),d&&ge(d.$$.fragment),g=Z(),m=C("div"),u=C("h3"),u.textContent=`${t[36].name}`,_=Z(),q=C("p"),q.textContent=`${t[36].description}`,y=Z(),l(s,"class","svelte-1eqhb7b"),l(a,"class","logo svelte-1eqhb7b"),l(m,"class","details svelte-1eqhb7b"),l(e,"class","service svelte-1eqhb7b")},m(v,E){B(v,e,E),c(e,s),c(s,n),c(s,i),c(s,o),k(),c(e,f),c(e,a),d&&se(d,a,null),c(e,g),c(e,m),c(m,u),c(m,_),c(m,q),c(e,y),w(),M=!0,z||(L=[pe(e,"mouseenter",b),pe(e,"mouseleave",t[13])],z=!0)},p(v,E){if(t=v,h!==t[31]&&(X(),h=t[31],k()),T!==(T=t[36].component)){if(d){K();const V=d;j(V.$$.fragment,1,0,()=>{ne(V,1)}),U()}T?(d=pl(T,P()),ge(d.$$.fragment),A(d.$$.fragment,1),se(d,a,null)):d=null}h!==t[31]&&(p(),h=t[31],w())},i(v){M||(d&&A(d.$$.fragment,v),M=!0)},o(v){d&&j(d.$$.fragment,v),M=!1},d(v){v&&S(e),X(),d&&ne(d),p(),z=!1,ie(L)}}}function y1(t){let e;return{c(){e=C("div"),l(e,"class","divider svelte-1eqhb7b")},m(s,n){B(s,e,n)},d(s){s&&S(e)}}}function Cl(t){let e,s;return e=new Me({props:{key:t[32],value:t[33],indent:t[29].indent}}),{c(){ge(e.$$.fragment)},m(n,i){se(e,n,i),s=!0},p:W,i(n){s||(A(e.$$.fragment,n),s=!0)},o(n){j(e.$$.fragment,n),s=!1},d(n){ne(e,n)}}}function jl(t){let e,s=t[28],n=t[31],i,o=H(Object.entries(t[29].lines)),h=[];for(let g=0;g<o.length;g+=1)h[g]=Cl(kl(t,o,g));const f=g=>j(h[g],1,1,()=>{h[g]=null}),a=()=>t[20](e,s,n),d=()=>t[20](null,s,n);return{c(){e=C("div");for(let g=0;g<h.length;g+=1)h[g].c();l(e,"class","svelte-1eqhb7b"),N(e,"codeblock",!!t[29].service),N(e,"active",t[6][t[28]].includes(t[31]))},m(g,m){B(g,e,m);for(let u=0;u<h.length;u+=1)h[u]&&h[u].m(e,null);a(),i=!0},p(g,m){if(t=g,m&0){o=H(Object.entries(t[29].lines));let u;for(u=0;u<o.length;u+=1){const _=kl(t,o,u);h[u]?(h[u].p(_,m),A(h[u],1)):(h[u]=Cl(_),h[u].c(),A(h[u],1),h[u].m(e,null))}for(K(),u=o.length;u<h.length;u+=1)f(u);U()}(s!==t[28]||n!==t[31])&&(d(),s=t[28],n=t[31],a()),(!i||m[0]&64)&&N(e,"active",t[6][t[28]].includes(t[31]))},i(g){if(!i){for(let m=0;m<o.length;m+=1)A(h[m]);i=!0}},o(g){h=h.filter(Boolean);for(let m=0;m<h.length;m+=1)j(h[m]);i=!1},d(g){g&&S(e),x(h,g),d()}}}function Nl(t){let e,s,n,i,o=t[28]>0&&y1(),h=H(t[26].code),f=[];for(let d=0;d<h.length;d+=1)f[d]=jl(yl(t,h,d));const a=d=>j(f[d],1,1,()=>{f[d]=null});return{c(){o&&o.c(),e=Z(),s=C("div");for(let d=0;d<f.length;d+=1)f[d].c();n=Z(),l(s,"class","resource"),N(s,"active",t[7]==t[26].service)},m(d,g){o&&o.m(d,g),B(d,e,g),B(d,s,g);for(let m=0;m<f.length;m+=1)f[m]&&f[m].m(s,null);c(s,n),i=!0},p(d,g){if(g[0]&80){h=H(d[26].code);let m;for(m=0;m<h.length;m+=1){const u=yl(d,h,m);f[m]?(f[m].p(u,g),A(f[m],1)):(f[m]=jl(u),f[m].c(),A(f[m],1),f[m].m(s,n))}for(K(),m=h.length;m<f.length;m+=1)a(m);U()}(!i||g[0]&128)&&N(s,"active",d[7]==d[26].service)},i(d){if(!i){for(let g=0;g<h.length;g+=1)A(f[g]);i=!0}},o(d){f=f.filter(Boolean);for(let g=0;g<f.length;g+=1)j(f[g]);i=!1},d(d){d&&(S(e),S(s)),o&&o.d(d),x(f,d)}}}function Sl(t){let e,s=[t[23],{stroke:"#f77242"},{"stroke-width":"2"}],n={};for(let i=0;i<s.length;i+=1)n=nl(n,s[i]);return{c(){e=r("line"),dl(e,n),N(e,"svelte-1eqhb7b",!0)},m(i,o){B(i,e,o)},p(i,o){dl(e,n=Vl(s,[o[0]&256&&i[23],{stroke:"#f77242"},{"stroke-width":"2"}])),N(e,"svelte-1eqhb7b",!0)},d(i){i&&S(e)}}}function k1(t){let e,s,n,i,o,h,f,a,d,g,m,u=H(be),_=[];for(let b=0;b<u.length;b+=1)_[b]=Ol(Al(t,u,b));const q=b=>j(_[b],1,1,()=>{_[b]=null});let y=H(ae),M=[];for(let b=0;b<y.length;b+=1)M[b]=Pl(ql(t,y,b));const z=b=>j(M[b],1,1,()=>{M[b]=null});let L=H(Q),k=[];for(let b=0;b<L.length;b+=1)k[b]=Nl(Ml(t,L,b));const X=b=>j(k[b],1,1,()=>{k[b]=null});let T=H(t[8]),P=[];for(let b=0;b<T.length;b+=1)P[b]=Sl(wl(t,T,b));return{c(){e=C("div"),s=C("div"),n=C("div");for(let b=0;b<_.length;b+=1)_[b].c();i=Z(),o=C("div");for(let b=0;b<M.length;b+=1)M[b].c();h=Z(),f=C("div");for(let b=0;b<k.length;b+=1)k[b].c();d=Z(),g=r("svg");for(let b=0;b<P.length;b+=1)P[b].c();l(n,"class","code svelte-1eqhb7b"),l(o,"class","services svelte-1eqhb7b"),l(f,"class","code results svelte-1eqhb7b"),l(s,"class","preview svelte-1eqhb7b"),il(()=>t[22].call(s)),l(g,"width",t[11]),l(g,"height",t[10]),l(g,"class","svelte-1eqhb7b"),l(e,"class","wrapper svelte-1eqhb7b"),l(e,"aria-hidden","true"),N(e,"dark",t[0])},m(b,w){B(b,e,w),c(e,s),c(s,n);for(let p=0;p<_.length;p+=1)_[p]&&_[p].m(n,null);c(s,i),c(s,o);for(let p=0;p<M.length;p+=1)M[p]&&M[p].m(o,null);c(s,h),c(s,f);for(let p=0;p<k.length;p+=1)k[p]&&k[p].m(f,null);t[21](s),a=e1(s,t[22].bind(s)),c(e,d),c(e,g);for(let p=0;p<P.length;p+=1)P[p]&&P[p].m(g,null);m=!0},p(b,w){if(w[0]&12328){u=H(be);let p;for(p=0;p<u.length;p+=1){const v=Al(b,u,p);_[p]?(_[p].p(v,w),A(_[p],1)):(_[p]=Ol(v),_[p].c(),A(_[p],1),_[p].m(n,null))}for(K(),p=u.length;p<_.length;p+=1)q(p);U()}if(w[0]&28678){y=H(ae);let p;for(p=0;p<y.length;p+=1){const v=ql(b,y,p);M[p]?(M[p].p(v,w),A(M[p],1)):(M[p]=Pl(v),M[p].c(),A(M[p],1),M[p].m(o,null))}for(K(),p=y.length;p<M.length;p+=1)z(p);U()}if(w[0]&208){L=H(Q);let p;for(p=0;p<L.length;p+=1){const v=Ml(b,L,p);k[p]?(k[p].p(v,w),A(k[p],1)):(k[p]=Nl(v),k[p].c(),A(k[p],1),k[p].m(f,null))}for(K(),p=L.length;p<k.length;p+=1)X(p);U()}if(w[0]&256){T=H(b[8]);let p;for(p=0;p<T.length;p+=1){const v=wl(b,T,p);P[p]?P[p].p(v,w):(P[p]=Sl(v),P[p].c(),P[p].m(g,null))}for(;p<P.length;p+=1)P[p].d(1);P.length=T.length}(!m||w[0]&2048)&&l(g,"width",b[11]),(!m||w[0]&1024)&&l(g,"height",b[10]),(!m||w[0]&1)&&N(e,"dark",b[0])},i(b){if(!m){for(let w=0;w<u.length;w+=1)A(_[w]);for(let w=0;w<y.length;w+=1)A(M[w]);for(let w=0;w<L.length;w+=1)A(k[w]);m=!0}},o(b){_=_.filter(Boolean);for(let w=0;w<_.length;w+=1)j(_[w]);M=M.filter(Boolean);for(let w=0;w<M.length;w+=1)j(M[w]);k=k.filter(Boolean);for(let w=0;w<k.length;w+=1)j(k[w]);m=!1},d(b){b&&S(e),x(_,b),x(M,b),x(k,b),t[21](null),a(),x(P,b)}}}function q1(t,e,s){let{dark:n=!1}=e;const i=new Array(ae.length),o=new Array(ae.length),h=new Array(be.length),f=new Array(Q.length).fill([]).map((v,E)=>new Array(Q[E].code.length));let a=[],d=new Array(Q.length).fill([]),g="",m=[];const u=v=>{if(!v)return;const E=[];for(let O=0;O<be.length;O++)be[O].service===v&&E.push(O);s(5,a=E);const V=ae.find(O=>O.id===v);if(!V)return;const Y=i[ae.indexOf(V)];s(7,g=V.id);const G=[];for(let O=0;O<E.length;O++){const I=h[E[O]];if(!I)continue;const J=zl(_,I,Y);G.push(J)}const D=new Array(3).fill([]).map(()=>[]);for(let O=0;O<Q.length;O++)for(let I=0;I<Q[O].code.length;I++)Q[O].code[I].service===v&&D[O].push(I);for(let O=0;O<D.length;O++){const I=f[O];for(let J=0;J<D[O].length;J++){const ee=I[D[O][J]];if(!ee)continue;const he=zl(_,ee,Y,!0);G.push(he)}}s(6,d=D),s(8,m=G)};let _;const q=()=>{s(5,a=[]),s(6,d=new Array(Q.length).fill([])),s(8,m=[]),o.forEach(v=>{v.close()})},y=v=>{const E=o[v];E.show();const V=ue(_),Y=ue(E),G=ue(i[v]),D=Y.width/-2,O=G.top-Y.height-10-V.top;E.style.left=`${D}px`,E.style.top=`${O}px`};let M,z;const L=v=>u(v.service);function k(v,E){te[v?"unshift":"push"](()=>{h[E]=v,s(3,h)})}function X(v,E){te[v?"unshift":"push"](()=>{o[E]=v,s(2,o)})}const T=(v,E)=>{u(v.id),y(E)};function P(v,E){te[v?"unshift":"push"](()=>{i[E]=v,s(1,i)})}function b(v,E,V){te[v?"unshift":"push"](()=>{f[E][V]=v,s(4,f)})}function w(v){te[v?"unshift":"push"](()=>{_=v,s(9,_)})}function p(){M=this.clientHeight,z=this.clientWidth,s(10,M),s(11,z)}return t.$$set=v=>{"dark"in v&&s(0,n=v.dark)},[n,i,o,h,f,a,d,g,m,_,M,z,u,q,y,L,k,X,T,P,b,w,p]}class A1 extends we{constructor(e){super(),$e(this,e,q1,k1,ve,{dark:0},M1,[-1,-1])}get dark(){return this.$$.ctx[0]}set dark(e){this.$$set({dark:e}),F()}}customElements.define("suffiks-preview",ze(A1,{dark:{type:"Boolean",reflect:!0}},[],[],!0));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtZmZkNDZmNTYuanMiLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9zdmVsdGUvc3JjL3J1bnRpbWUvaW50ZXJuYWwvdXRpbHMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL2RvbS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdmVsdGUvc3JjL3J1bnRpbWUvaW50ZXJuYWwvbGlmZWN5Y2xlLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvcnVudGltZS9pbnRlcm5hbC9zY2hlZHVsZXIuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL3RyYW5zaXRpb25zLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvcnVudGltZS9pbnRlcm5hbC9lYWNoLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvcnVudGltZS9pbnRlcm5hbC9zcHJlYWQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3ZlbHRlL3NyYy9ydW50aW1lL2ludGVybmFsL0NvbXBvbmVudC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdmVsdGUvc3JjL3NoYXJlZC92ZXJzaW9uLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N2ZWx0ZS9zcmMvcnVudGltZS9pbnRlcm5hbC9kaXNjbG9zZS12ZXJzaW9uL2luZGV4LmpzIiwiLi4vLi4vc3JjL2xpYi9wcmV2aWV3L0xpbmUuc3ZlbHRlIiwiLi4vLi4vc3JjL2xpYi9HUlBDLnN2ZWx0ZSIsIi4uLy4uL3NyYy9saWIvV0FTSS5zdmVsdGUiLCIuLi8uLi9zcmMvbGliL2xvZ28uc3ZlbHRlIiwiLi4vLi4vc3JjL2xpYi9wcmV2aWV3L2NvZGUudHMiLCIuLi8uLi9zcmMvbGliL3ByZXZpZXcvaGVscGVycy50cyIsIi4uLy4uL3NyYy9saWIvcHJldmlldy9QcmV2aWV3LnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gbm9vcCgpIHt9XG5cbmV4cG9ydCBjb25zdCBpZGVudGl0eSA9ICh4KSA9PiB4O1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdGVtcGxhdGUgU1xuICogQHBhcmFtIHtUfSB0YXJcbiAqIEBwYXJhbSB7U30gc3JjXG4gKiBAcmV0dXJucyB7VCAmIFN9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NpZ24odGFyLCBzcmMpIHtcblx0Ly8gQHRzLWlnbm9yZVxuXHRmb3IgKGNvbnN0IGsgaW4gc3JjKSB0YXJba10gPSBzcmNba107XG5cdHJldHVybiAvKiogQHR5cGUge1QgJiBTfSAqLyAodGFyKTtcbn1cblxuLy8gQWRhcHRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS90aGVuL2lzLXByb21pc2UvYmxvYi9tYXN0ZXIvaW5kZXguanNcbi8vIERpc3RyaWJ1dGVkIHVuZGVyIE1JVCBMaWNlbnNlIGh0dHBzOi8vZ2l0aHViLmNvbS90aGVuL2lzLXByb21pc2UvYmxvYi9tYXN0ZXIvTElDRU5TRVxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHt2YWx1ZSBpcyBQcm9taXNlTGlrZTxhbnk+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNfcHJvbWlzZSh2YWx1ZSkge1xuXHRyZXR1cm4gKFxuXHRcdCEhdmFsdWUgJiZcblx0XHQodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpICYmXG5cdFx0dHlwZW9mICgvKiogQHR5cGUge2FueX0gKi8gKHZhbHVlKS50aGVuKSA9PT0gJ2Z1bmN0aW9uJ1xuXHQpO1xufVxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gYWRkX2xvY2F0aW9uKGVsZW1lbnQsIGZpbGUsIGxpbmUsIGNvbHVtbiwgY2hhcikge1xuXHRlbGVtZW50Ll9fc3ZlbHRlX21ldGEgPSB7XG5cdFx0bG9jOiB7IGZpbGUsIGxpbmUsIGNvbHVtbiwgY2hhciB9XG5cdH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBydW4oZm4pIHtcblx0cmV0dXJuIGZuKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBibGFua19vYmplY3QoKSB7XG5cdHJldHVybiBPYmplY3QuY3JlYXRlKG51bGwpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7RnVuY3Rpb25bXX0gZm5zXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9hbGwoZm5zKSB7XG5cdGZucy5mb3JFYWNoKHJ1bik7XG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHRoaW5nXG4gKiBAcmV0dXJucyB7dGhpbmcgaXMgRnVuY3Rpb259XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc19mdW5jdGlvbih0aGluZykge1xuXHRyZXR1cm4gdHlwZW9mIHRoaW5nID09PSAnZnVuY3Rpb24nO1xufVxuXG4vKiogQHJldHVybnMge2Jvb2xlYW59ICovXG5leHBvcnQgZnVuY3Rpb24gc2FmZV9ub3RfZXF1YWwoYSwgYikge1xuXHRyZXR1cm4gYSAhPSBhID8gYiA9PSBiIDogYSAhPT0gYiB8fCAoYSAmJiB0eXBlb2YgYSA9PT0gJ29iamVjdCcpIHx8IHR5cGVvZiBhID09PSAnZnVuY3Rpb24nO1xufVxuXG5sZXQgc3JjX3VybF9lcXVhbF9hbmNob3I7XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IGVsZW1lbnRfc3JjXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNyY191cmxfZXF1YWwoZWxlbWVudF9zcmMsIHVybCkge1xuXHRpZiAoZWxlbWVudF9zcmMgPT09IHVybCkgcmV0dXJuIHRydWU7XG5cdGlmICghc3JjX3VybF9lcXVhbF9hbmNob3IpIHtcblx0XHRzcmNfdXJsX2VxdWFsX2FuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcblx0fVxuXHQvLyBUaGlzIGlzIGFjdHVhbGx5IGZhc3RlciB0aGFuIGRvaW5nIFVSTCguLikuaHJlZlxuXHRzcmNfdXJsX2VxdWFsX2FuY2hvci5ocmVmID0gdXJsO1xuXHRyZXR1cm4gZWxlbWVudF9zcmMgPT09IHNyY191cmxfZXF1YWxfYW5jaG9yLmhyZWY7XG59XG5cbi8qKiBAcGFyYW0ge3N0cmluZ30gc3Jjc2V0ICovXG5mdW5jdGlvbiBzcGxpdF9zcmNzZXQoc3Jjc2V0KSB7XG5cdHJldHVybiBzcmNzZXQuc3BsaXQoJywnKS5tYXAoKHNyYykgPT4gc3JjLnRyaW0oKS5zcGxpdCgnICcpLmZpbHRlcihCb29sZWFuKSk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtIVE1MU291cmNlRWxlbWVudCB8IEhUTUxJbWFnZUVsZW1lbnR9IGVsZW1lbnRfc3Jjc2V0XG4gKiBAcGFyYW0ge3N0cmluZyB8IHVuZGVmaW5lZCB8IG51bGx9IHNyY3NldFxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzcmNzZXRfdXJsX2VxdWFsKGVsZW1lbnRfc3Jjc2V0LCBzcmNzZXQpIHtcblx0Y29uc3QgZWxlbWVudF91cmxzID0gc3BsaXRfc3Jjc2V0KGVsZW1lbnRfc3Jjc2V0LnNyY3NldCk7XG5cdGNvbnN0IHVybHMgPSBzcGxpdF9zcmNzZXQoc3Jjc2V0IHx8ICcnKTtcblxuXHRyZXR1cm4gKFxuXHRcdHVybHMubGVuZ3RoID09PSBlbGVtZW50X3VybHMubGVuZ3RoICYmXG5cdFx0dXJscy5ldmVyeShcblx0XHRcdChbdXJsLCB3aWR0aF0sIGkpID0+XG5cdFx0XHRcdHdpZHRoID09PSBlbGVtZW50X3VybHNbaV1bMV0gJiZcblx0XHRcdFx0Ly8gV2UgbmVlZCB0byB0ZXN0IGJvdGggd2F5cyBiZWNhdXNlIFZpdGUgd2lsbCBjcmVhdGUgYW4gYSBmdWxsIFVSTCB3aXRoXG5cdFx0XHRcdC8vIGBuZXcgVVJMKGFzc2V0LCBpbXBvcnQubWV0YS51cmwpLmhyZWZgIGZvciB0aGUgY2xpZW50IHdoZW4gYGJhc2U6ICcuLydgLCBhbmQgdGhlXG5cdFx0XHRcdC8vIHJlbGF0aXZlIFVSTHMgaW5zaWRlIHNyY3NldCBhcmUgbm90IGF1dG9tYXRpY2FsbHkgcmVzb2x2ZWQgdG8gYWJzb2x1dGUgVVJMcyBieVxuXHRcdFx0XHQvLyBicm93c2VycyAoaW4gY29udHJhc3QgdG8gaW1nLnNyYykuIFRoaXMgbWVhbnMgYm90aCBTU1IgYW5kIERPTSBjb2RlIGNvdWxkXG5cdFx0XHRcdC8vIGNvbnRhaW4gcmVsYXRpdmUgb3IgYWJzb2x1dGUgVVJMcy5cblx0XHRcdFx0KHNyY191cmxfZXF1YWwoZWxlbWVudF91cmxzW2ldWzBdLCB1cmwpIHx8IHNyY191cmxfZXF1YWwodXJsLCBlbGVtZW50X3VybHNbaV1bMF0pKVxuXHRcdClcblx0KTtcbn1cblxuLyoqIEByZXR1cm5zIHtib29sZWFufSAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vdF9lcXVhbChhLCBiKSB7XG5cdHJldHVybiBhICE9IGEgPyBiID09IGIgOiBhICE9PSBiO1xufVxuXG4vKiogQHJldHVybnMge2Jvb2xlYW59ICovXG5leHBvcnQgZnVuY3Rpb24gaXNfZW1wdHkob2JqKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gMDtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlX3N0b3JlKHN0b3JlLCBuYW1lKSB7XG5cdGlmIChzdG9yZSAhPSBudWxsICYmIHR5cGVvZiBzdG9yZS5zdWJzY3JpYmUgIT09ICdmdW5jdGlvbicpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoYCcke25hbWV9JyBpcyBub3QgYSBzdG9yZSB3aXRoIGEgJ3N1YnNjcmliZScgbWV0aG9kYCk7XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnNjcmliZShzdG9yZSwgLi4uY2FsbGJhY2tzKSB7XG5cdGlmIChzdG9yZSA9PSBudWxsKSB7XG5cdFx0Zm9yIChjb25zdCBjYWxsYmFjayBvZiBjYWxsYmFja3MpIHtcblx0XHRcdGNhbGxiYWNrKHVuZGVmaW5lZCk7XG5cdFx0fVxuXHRcdHJldHVybiBub29wO1xuXHR9XG5cdGNvbnN0IHVuc3ViID0gc3RvcmUuc3Vic2NyaWJlKC4uLmNhbGxiYWNrcyk7XG5cdHJldHVybiB1bnN1Yi51bnN1YnNjcmliZSA/ICgpID0+IHVuc3ViLnVuc3Vic2NyaWJlKCkgOiB1bnN1Yjtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGN1cnJlbnQgdmFsdWUgZnJvbSBhIHN0b3JlIGJ5IHN1YnNjcmliaW5nIGFuZCBpbW1lZGlhdGVseSB1bnN1YnNjcmliaW5nLlxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZS1zdG9yZSNnZXRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vc3RvcmUvcHVibGljLmpzJykuUmVhZGFibGU8VD59IHN0b3JlXG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldF9zdG9yZV92YWx1ZShzdG9yZSkge1xuXHRsZXQgdmFsdWU7XG5cdHN1YnNjcmliZShzdG9yZSwgKF8pID0+ICh2YWx1ZSA9IF8pKSgpO1xuXHRyZXR1cm4gdmFsdWU7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wb25lbnRfc3Vic2NyaWJlKGNvbXBvbmVudCwgc3RvcmUsIGNhbGxiYWNrKSB7XG5cdGNvbXBvbmVudC4kJC5vbl9kZXN0cm95LnB1c2goc3Vic2NyaWJlKHN0b3JlLCBjYWxsYmFjaykpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlX3Nsb3QoZGVmaW5pdGlvbiwgY3R4LCAkJHNjb3BlLCBmbikge1xuXHRpZiAoZGVmaW5pdGlvbikge1xuXHRcdGNvbnN0IHNsb3RfY3R4ID0gZ2V0X3Nsb3RfY29udGV4dChkZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIGZuKTtcblx0XHRyZXR1cm4gZGVmaW5pdGlvblswXShzbG90X2N0eCk7XG5cdH1cbn1cblxuZnVuY3Rpb24gZ2V0X3Nsb3RfY29udGV4dChkZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIGZuKSB7XG5cdHJldHVybiBkZWZpbml0aW9uWzFdICYmIGZuID8gYXNzaWduKCQkc2NvcGUuY3R4LnNsaWNlKCksIGRlZmluaXRpb25bMV0oZm4oY3R4KSkpIDogJCRzY29wZS5jdHg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRfc2xvdF9jaGFuZ2VzKGRlZmluaXRpb24sICQkc2NvcGUsIGRpcnR5LCBmbikge1xuXHRpZiAoZGVmaW5pdGlvblsyXSAmJiBmbikge1xuXHRcdGNvbnN0IGxldHMgPSBkZWZpbml0aW9uWzJdKGZuKGRpcnR5KSk7XG5cdFx0aWYgKCQkc2NvcGUuZGlydHkgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0cmV0dXJuIGxldHM7XG5cdFx0fVxuXHRcdGlmICh0eXBlb2YgbGV0cyA9PT0gJ29iamVjdCcpIHtcblx0XHRcdGNvbnN0IG1lcmdlZCA9IFtdO1xuXHRcdFx0Y29uc3QgbGVuID0gTWF0aC5tYXgoJCRzY29wZS5kaXJ0eS5sZW5ndGgsIGxldHMubGVuZ3RoKTtcblx0XHRcdGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcblx0XHRcdFx0bWVyZ2VkW2ldID0gJCRzY29wZS5kaXJ0eVtpXSB8IGxldHNbaV07XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWVyZ2VkO1xuXHRcdH1cblx0XHRyZXR1cm4gJCRzY29wZS5kaXJ0eSB8IGxldHM7XG5cdH1cblx0cmV0dXJuICQkc2NvcGUuZGlydHk7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVfc2xvdF9iYXNlKFxuXHRzbG90LFxuXHRzbG90X2RlZmluaXRpb24sXG5cdGN0eCxcblx0JCRzY29wZSxcblx0c2xvdF9jaGFuZ2VzLFxuXHRnZXRfc2xvdF9jb250ZXh0X2ZuXG4pIHtcblx0aWYgKHNsb3RfY2hhbmdlcykge1xuXHRcdGNvbnN0IHNsb3RfY29udGV4dCA9IGdldF9zbG90X2NvbnRleHQoc2xvdF9kZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIGdldF9zbG90X2NvbnRleHRfZm4pO1xuXHRcdHNsb3QucChzbG90X2NvbnRleHQsIHNsb3RfY2hhbmdlcyk7XG5cdH1cbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZV9zbG90KFxuXHRzbG90LFxuXHRzbG90X2RlZmluaXRpb24sXG5cdGN0eCxcblx0JCRzY29wZSxcblx0ZGlydHksXG5cdGdldF9zbG90X2NoYW5nZXNfZm4sXG5cdGdldF9zbG90X2NvbnRleHRfZm5cbikge1xuXHRjb25zdCBzbG90X2NoYW5nZXMgPSBnZXRfc2xvdF9jaGFuZ2VzKHNsb3RfZGVmaW5pdGlvbiwgJCRzY29wZSwgZGlydHksIGdldF9zbG90X2NoYW5nZXNfZm4pO1xuXHR1cGRhdGVfc2xvdF9iYXNlKHNsb3QsIHNsb3RfZGVmaW5pdGlvbiwgY3R4LCAkJHNjb3BlLCBzbG90X2NoYW5nZXMsIGdldF9zbG90X2NvbnRleHRfZm4pO1xufVxuXG4vKiogQHJldHVybnMge2FueVtdIHwgLTF9ICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0X2FsbF9kaXJ0eV9mcm9tX3Njb3BlKCQkc2NvcGUpIHtcblx0aWYgKCQkc2NvcGUuY3R4Lmxlbmd0aCA+IDMyKSB7XG5cdFx0Y29uc3QgZGlydHkgPSBbXTtcblx0XHRjb25zdCBsZW5ndGggPSAkJHNjb3BlLmN0eC5sZW5ndGggLyAzMjtcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG5cdFx0XHRkaXJ0eVtpXSA9IC0xO1xuXHRcdH1cblx0XHRyZXR1cm4gZGlydHk7XG5cdH1cblx0cmV0dXJuIC0xO1xufVxuXG4vKiogQHJldHVybnMge3t9fSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4Y2x1ZGVfaW50ZXJuYWxfcHJvcHMocHJvcHMpIHtcblx0Y29uc3QgcmVzdWx0ID0ge307XG5cdGZvciAoY29uc3QgayBpbiBwcm9wcykgaWYgKGtbMF0gIT09ICckJykgcmVzdWx0W2tdID0gcHJvcHNba107XG5cdHJldHVybiByZXN1bHQ7XG59XG5cbi8qKiBAcmV0dXJucyB7e319ICovXG5leHBvcnQgZnVuY3Rpb24gY29tcHV0ZV9yZXN0X3Byb3BzKHByb3BzLCBrZXlzKSB7XG5cdGNvbnN0IHJlc3QgPSB7fTtcblx0a2V5cyA9IG5ldyBTZXQoa2V5cyk7XG5cdGZvciAoY29uc3QgayBpbiBwcm9wcykgaWYgKCFrZXlzLmhhcyhrKSAmJiBrWzBdICE9PSAnJCcpIHJlc3Rba10gPSBwcm9wc1trXTtcblx0cmV0dXJuIHJlc3Q7XG59XG5cbi8qKiBAcmV0dXJucyB7e319ICovXG5leHBvcnQgZnVuY3Rpb24gY29tcHV0ZV9zbG90cyhzbG90cykge1xuXHRjb25zdCByZXN1bHQgPSB7fTtcblx0Zm9yIChjb25zdCBrZXkgaW4gc2xvdHMpIHtcblx0XHRyZXN1bHRba2V5XSA9IHRydWU7XG5cdH1cblx0cmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqIEByZXR1cm5zIHsodGhpczogYW55LCAuLi5hcmdzOiBhbnlbXSkgPT4gdm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbmNlKGZuKSB7XG5cdGxldCByYW4gPSBmYWxzZTtcblx0cmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG5cdFx0aWYgKHJhbikgcmV0dXJuO1xuXHRcdHJhbiA9IHRydWU7XG5cdFx0Zm4uY2FsbCh0aGlzLCAuLi5hcmdzKTtcblx0fTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG51bGxfdG9fZW1wdHkodmFsdWUpIHtcblx0cmV0dXJuIHZhbHVlID09IG51bGwgPyAnJyA6IHZhbHVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0X3N0b3JlX3ZhbHVlKHN0b3JlLCByZXQsIHZhbHVlKSB7XG5cdHN0b3JlLnNldCh2YWx1ZSk7XG5cdHJldHVybiByZXQ7XG59XG5cbmV4cG9ydCBjb25zdCBoYXNfcHJvcCA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApO1xuXG5leHBvcnQgZnVuY3Rpb24gYWN0aW9uX2Rlc3Ryb3llcihhY3Rpb25fcmVzdWx0KSB7XG5cdHJldHVybiBhY3Rpb25fcmVzdWx0ICYmIGlzX2Z1bmN0aW9uKGFjdGlvbl9yZXN1bHQuZGVzdHJveSkgPyBhY3Rpb25fcmVzdWx0LmRlc3Ryb3kgOiBub29wO1xufVxuXG4vKiogQHBhcmFtIHtudW1iZXIgfCBzdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJucyB7W251bWJlciwgc3RyaW5nXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0X2Nzc191bml0KHZhbHVlKSB7XG5cdGNvbnN0IHNwbGl0ID0gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5tYXRjaCgvXlxccyooLT9bXFxkLl0rKShbXlxcc10qKVxccyokLyk7XG5cdHJldHVybiBzcGxpdCA/IFtwYXJzZUZsb2F0KHNwbGl0WzFdKSwgc3BsaXRbMl0gfHwgJ3B4J10gOiBbLyoqIEB0eXBlIHtudW1iZXJ9ICovICh2YWx1ZSksICdweCddO1xufVxuXG5leHBvcnQgY29uc3QgY29udGVudGVkaXRhYmxlX3RydXRoeV92YWx1ZXMgPSBbJycsIHRydWUsIDEsICd0cnVlJywgJ2NvbnRlbnRlZGl0YWJsZSddO1xuIiwiaW1wb3J0IHsgUmVzaXplT2JzZXJ2ZXJTaW5nbGV0b24gfSBmcm9tICcuL1Jlc2l6ZU9ic2VydmVyU2luZ2xldG9uLmpzJztcbmltcG9ydCB7IGNvbnRlbnRlZGl0YWJsZV90cnV0aHlfdmFsdWVzLCBoYXNfcHJvcCB9IGZyb20gJy4vdXRpbHMuanMnO1xuLy8gVHJhY2sgd2hpY2ggbm9kZXMgYXJlIGNsYWltZWQgZHVyaW5nIGh5ZHJhdGlvbi4gVW5jbGFpbWVkIG5vZGVzIGNhbiB0aGVuIGJlIHJlbW92ZWQgZnJvbSB0aGUgRE9NXG4vLyBhdCB0aGUgZW5kIG9mIGh5ZHJhdGlvbiB3aXRob3V0IHRvdWNoaW5nIHRoZSByZW1haW5pbmcgbm9kZXMuXG5sZXQgaXNfaHlkcmF0aW5nID0gZmFsc2U7XG5cbi8qKlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdGFydF9oeWRyYXRpbmcoKSB7XG5cdGlzX2h5ZHJhdGluZyA9IHRydWU7XG59XG5cbi8qKlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmRfaHlkcmF0aW5nKCkge1xuXHRpc19oeWRyYXRpbmcgPSBmYWxzZTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gbG93XG4gKiBAcGFyYW0ge251bWJlcn0gaGlnaFxuICogQHBhcmFtIHsoaW5kZXg6IG51bWJlcikgPT4gbnVtYmVyfSBrZXlcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZnVuY3Rpb24gdXBwZXJfYm91bmQobG93LCBoaWdoLCBrZXksIHZhbHVlKSB7XG5cdC8vIFJldHVybiBmaXJzdCBpbmRleCBvZiB2YWx1ZSBsYXJnZXIgdGhhbiBpbnB1dCB2YWx1ZSBpbiB0aGUgcmFuZ2UgW2xvdywgaGlnaClcblx0d2hpbGUgKGxvdyA8IGhpZ2gpIHtcblx0XHRjb25zdCBtaWQgPSBsb3cgKyAoKGhpZ2ggLSBsb3cpID4+IDEpO1xuXHRcdGlmIChrZXkobWlkKSA8PSB2YWx1ZSkge1xuXHRcdFx0bG93ID0gbWlkICsgMTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0aGlnaCA9IG1pZDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGxvdztcbn1cblxuLyoqXG4gKiBAcGFyYW0ge05vZGVFeH0gdGFyZ2V0XG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gaW5pdF9oeWRyYXRlKHRhcmdldCkge1xuXHRpZiAodGFyZ2V0Lmh5ZHJhdGVfaW5pdCkgcmV0dXJuO1xuXHR0YXJnZXQuaHlkcmF0ZV9pbml0ID0gdHJ1ZTtcblx0Ly8gV2Uga25vdyB0aGF0IGFsbCBjaGlsZHJlbiBoYXZlIGNsYWltX29yZGVyIHZhbHVlcyBzaW5jZSB0aGUgdW5jbGFpbWVkIGhhdmUgYmVlbiBkZXRhY2hlZCBpZiB0YXJnZXQgaXMgbm90IDxoZWFkPlxuXG5cdGxldCBjaGlsZHJlbiA9IC8qKiBAdHlwZSB7QXJyYXlMaWtlPE5vZGVFeDI+fSAqLyAodGFyZ2V0LmNoaWxkTm9kZXMpO1xuXHQvLyBJZiB0YXJnZXQgaXMgPGhlYWQ+LCB0aGVyZSBtYXkgYmUgY2hpbGRyZW4gd2l0aG91dCBjbGFpbV9vcmRlclxuXHRpZiAodGFyZ2V0Lm5vZGVOYW1lID09PSAnSEVBRCcpIHtcblx0XHRjb25zdCBteUNoaWxkcmVuID0gW107XG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuXHRcdFx0Y29uc3Qgbm9kZSA9IGNoaWxkcmVuW2ldO1xuXHRcdFx0aWYgKG5vZGUuY2xhaW1fb3JkZXIgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRteUNoaWxkcmVuLnB1c2gobm9kZSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGNoaWxkcmVuID0gbXlDaGlsZHJlbjtcblx0fVxuXHQvKlxuXHQgKiBSZW9yZGVyIGNsYWltZWQgY2hpbGRyZW4gb3B0aW1hbGx5LlxuXHQgKiBXZSBjYW4gcmVvcmRlciBjbGFpbWVkIGNoaWxkcmVuIG9wdGltYWxseSBieSBmaW5kaW5nIHRoZSBsb25nZXN0IHN1YnNlcXVlbmNlIG9mXG5cdCAqIG5vZGVzIHRoYXQgYXJlIGFscmVhZHkgY2xhaW1lZCBpbiBvcmRlciBhbmQgb25seSBtb3ZpbmcgdGhlIHJlc3QuIFRoZSBsb25nZXN0XG5cdCAqIHN1YnNlcXVlbmNlIG9mIG5vZGVzIHRoYXQgYXJlIGNsYWltZWQgaW4gb3JkZXIgY2FuIGJlIGZvdW5kIGJ5XG5cdCAqIGNvbXB1dGluZyB0aGUgbG9uZ2VzdCBpbmNyZWFzaW5nIHN1YnNlcXVlbmNlIG9mIC5jbGFpbV9vcmRlciB2YWx1ZXMuXG5cdCAqXG5cdCAqIFRoaXMgYWxnb3JpdGhtIGlzIG9wdGltYWwgaW4gZ2VuZXJhdGluZyB0aGUgbGVhc3QgYW1vdW50IG9mIHJlb3JkZXIgb3BlcmF0aW9uc1xuXHQgKiBwb3NzaWJsZS5cblx0ICpcblx0ICogUHJvb2Y6XG5cdCAqIFdlIGtub3cgdGhhdCwgZ2l2ZW4gYSBzZXQgb2YgcmVvcmRlcmluZyBvcGVyYXRpb25zLCB0aGUgbm9kZXMgdGhhdCBkbyBub3QgbW92ZVxuXHQgKiBhbHdheXMgZm9ybSBhbiBpbmNyZWFzaW5nIHN1YnNlcXVlbmNlLCBzaW5jZSB0aGV5IGRvIG5vdCBtb3ZlIGFtb25nIGVhY2ggb3RoZXJcblx0ICogbWVhbmluZyB0aGF0IHRoZXkgbXVzdCBiZSBhbHJlYWR5IG9yZGVyZWQgYW1vbmcgZWFjaCBvdGhlci4gVGh1cywgdGhlIG1heGltYWxcblx0ICogc2V0IG9mIG5vZGVzIHRoYXQgZG8gbm90IG1vdmUgZm9ybSBhIGxvbmdlc3QgaW5jcmVhc2luZyBzdWJzZXF1ZW5jZS5cblx0ICovXG5cdC8vIENvbXB1dGUgbG9uZ2VzdCBpbmNyZWFzaW5nIHN1YnNlcXVlbmNlXG5cdC8vIG06IHN1YnNlcXVlbmNlIGxlbmd0aCBqID0+IGluZGV4IGsgb2Ygc21hbGxlc3QgdmFsdWUgdGhhdCBlbmRzIGFuIGluY3JlYXNpbmcgc3Vic2VxdWVuY2Ugb2YgbGVuZ3RoIGpcblx0Y29uc3QgbSA9IG5ldyBJbnQzMkFycmF5KGNoaWxkcmVuLmxlbmd0aCArIDEpO1xuXHQvLyBQcmVkZWNlc3NvciBpbmRpY2VzICsgMVxuXHRjb25zdCBwID0gbmV3IEludDMyQXJyYXkoY2hpbGRyZW4ubGVuZ3RoKTtcblx0bVswXSA9IC0xO1xuXHRsZXQgbG9uZ2VzdCA9IDA7XG5cdGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcblx0XHRjb25zdCBjdXJyZW50ID0gY2hpbGRyZW5baV0uY2xhaW1fb3JkZXI7XG5cdFx0Ly8gRmluZCB0aGUgbGFyZ2VzdCBzdWJzZXF1ZW5jZSBsZW5ndGggc3VjaCB0aGF0IGl0IGVuZHMgaW4gYSB2YWx1ZSBsZXNzIHRoYW4gb3VyIGN1cnJlbnQgdmFsdWVcblx0XHQvLyB1cHBlcl9ib3VuZCByZXR1cm5zIGZpcnN0IGdyZWF0ZXIgdmFsdWUsIHNvIHdlIHN1YnRyYWN0IG9uZVxuXHRcdC8vIHdpdGggZmFzdCBwYXRoIGZvciB3aGVuIHdlIGFyZSBvbiB0aGUgY3VycmVudCBsb25nZXN0IHN1YnNlcXVlbmNlXG5cdFx0Y29uc3Qgc2VxTGVuID1cblx0XHRcdChsb25nZXN0ID4gMCAmJiBjaGlsZHJlblttW2xvbmdlc3RdXS5jbGFpbV9vcmRlciA8PSBjdXJyZW50XG5cdFx0XHRcdD8gbG9uZ2VzdCArIDFcblx0XHRcdFx0OiB1cHBlcl9ib3VuZCgxLCBsb25nZXN0LCAoaWR4KSA9PiBjaGlsZHJlblttW2lkeF1dLmNsYWltX29yZGVyLCBjdXJyZW50KSkgLSAxO1xuXHRcdHBbaV0gPSBtW3NlcUxlbl0gKyAxO1xuXHRcdGNvbnN0IG5ld0xlbiA9IHNlcUxlbiArIDE7XG5cdFx0Ly8gV2UgY2FuIGd1YXJhbnRlZSB0aGF0IGN1cnJlbnQgaXMgdGhlIHNtYWxsZXN0IHZhbHVlLiBPdGhlcndpc2UsIHdlIHdvdWxkIGhhdmUgZ2VuZXJhdGVkIGEgbG9uZ2VyIHNlcXVlbmNlLlxuXHRcdG1bbmV3TGVuXSA9IGk7XG5cdFx0bG9uZ2VzdCA9IE1hdGgubWF4KG5ld0xlbiwgbG9uZ2VzdCk7XG5cdH1cblx0Ly8gVGhlIGxvbmdlc3QgaW5jcmVhc2luZyBzdWJzZXF1ZW5jZSBvZiBub2RlcyAoaW5pdGlhbGx5IHJldmVyc2VkKVxuXG5cdC8qKlxuXHQgKiBAdHlwZSB7Tm9kZUV4MltdfVxuXHQgKi9cblx0Y29uc3QgbGlzID0gW107XG5cdC8vIFRoZSByZXN0IG9mIHRoZSBub2Rlcywgbm9kZXMgdGhhdCB3aWxsIGJlIG1vdmVkXG5cblx0LyoqXG5cdCAqIEB0eXBlIHtOb2RlRXgyW119XG5cdCAqL1xuXHRjb25zdCB0b01vdmUgPSBbXTtcblx0bGV0IGxhc3QgPSBjaGlsZHJlbi5sZW5ndGggLSAxO1xuXHRmb3IgKGxldCBjdXIgPSBtW2xvbmdlc3RdICsgMTsgY3VyICE9IDA7IGN1ciA9IHBbY3VyIC0gMV0pIHtcblx0XHRsaXMucHVzaChjaGlsZHJlbltjdXIgLSAxXSk7XG5cdFx0Zm9yICg7IGxhc3QgPj0gY3VyOyBsYXN0LS0pIHtcblx0XHRcdHRvTW92ZS5wdXNoKGNoaWxkcmVuW2xhc3RdKTtcblx0XHR9XG5cdFx0bGFzdC0tO1xuXHR9XG5cdGZvciAoOyBsYXN0ID49IDA7IGxhc3QtLSkge1xuXHRcdHRvTW92ZS5wdXNoKGNoaWxkcmVuW2xhc3RdKTtcblx0fVxuXHRsaXMucmV2ZXJzZSgpO1xuXHQvLyBXZSBzb3J0IHRoZSBub2RlcyBiZWluZyBtb3ZlZCB0byBndWFyYW50ZWUgdGhhdCB0aGVpciBpbnNlcnRpb24gb3JkZXIgbWF0Y2hlcyB0aGUgY2xhaW0gb3JkZXJcblx0dG9Nb3ZlLnNvcnQoKGEsIGIpID0+IGEuY2xhaW1fb3JkZXIgLSBiLmNsYWltX29yZGVyKTtcblx0Ly8gRmluYWxseSwgd2UgbW92ZSB0aGUgbm9kZXNcblx0Zm9yIChsZXQgaSA9IDAsIGogPSAwOyBpIDwgdG9Nb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0d2hpbGUgKGogPCBsaXMubGVuZ3RoICYmIHRvTW92ZVtpXS5jbGFpbV9vcmRlciA+PSBsaXNbal0uY2xhaW1fb3JkZXIpIHtcblx0XHRcdGorKztcblx0XHR9XG5cdFx0Y29uc3QgYW5jaG9yID0gaiA8IGxpcy5sZW5ndGggPyBsaXNbal0gOiBudWxsO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUodG9Nb3ZlW2ldLCBhbmNob3IpO1xuXHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtOb2RlfSB0YXJnZXRcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmQodGFyZ2V0LCBub2RlKSB7XG5cdHRhcmdldC5hcHBlbmRDaGlsZChub2RlKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge05vZGV9IHRhcmdldFxuICogQHBhcmFtIHtzdHJpbmd9IHN0eWxlX3NoZWV0X2lkXG4gKiBAcGFyYW0ge3N0cmluZ30gc3R5bGVzXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGVuZF9zdHlsZXModGFyZ2V0LCBzdHlsZV9zaGVldF9pZCwgc3R5bGVzKSB7XG5cdGNvbnN0IGFwcGVuZF9zdHlsZXNfdG8gPSBnZXRfcm9vdF9mb3Jfc3R5bGUodGFyZ2V0KTtcblx0aWYgKCFhcHBlbmRfc3R5bGVzX3RvLmdldEVsZW1lbnRCeUlkKHN0eWxlX3NoZWV0X2lkKSkge1xuXHRcdGNvbnN0IHN0eWxlID0gZWxlbWVudCgnc3R5bGUnKTtcblx0XHRzdHlsZS5pZCA9IHN0eWxlX3NoZWV0X2lkO1xuXHRcdHN0eWxlLnRleHRDb250ZW50ID0gc3R5bGVzO1xuXHRcdGFwcGVuZF9zdHlsZXNoZWV0KGFwcGVuZF9zdHlsZXNfdG8sIHN0eWxlKTtcblx0fVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybnMge1NoYWRvd1Jvb3QgfCBEb2N1bWVudH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldF9yb290X2Zvcl9zdHlsZShub2RlKSB7XG5cdGlmICghbm9kZSkgcmV0dXJuIGRvY3VtZW50O1xuXHRjb25zdCByb290ID0gbm9kZS5nZXRSb290Tm9kZSA/IG5vZGUuZ2V0Um9vdE5vZGUoKSA6IG5vZGUub3duZXJEb2N1bWVudDtcblx0aWYgKHJvb3QgJiYgLyoqIEB0eXBlIHtTaGFkb3dSb290fSAqLyAocm9vdCkuaG9zdCkge1xuXHRcdHJldHVybiAvKiogQHR5cGUge1NoYWRvd1Jvb3R9ICovIChyb290KTtcblx0fVxuXHRyZXR1cm4gbm9kZS5vd25lckRvY3VtZW50O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybnMge0NTU1N0eWxlU2hlZXR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmRfZW1wdHlfc3R5bGVzaGVldChub2RlKSB7XG5cdGNvbnN0IHN0eWxlX2VsZW1lbnQgPSBlbGVtZW50KCdzdHlsZScpO1xuXHQvLyBGb3IgdHJhbnNpdGlvbnMgdG8gd29yayB3aXRob3V0ICdzdHlsZS1zcmM6IHVuc2FmZS1pbmxpbmUnIENvbnRlbnQgU2VjdXJpdHkgUG9saWN5LFxuXHQvLyB0aGVzZSBlbXB0eSB0YWdzIG5lZWQgdG8gYmUgYWxsb3dlZCB3aXRoIGEgaGFzaCBhcyBhIHdvcmthcm91bmQgdW50aWwgd2UgbW92ZSB0byB0aGUgV2ViIEFuaW1hdGlvbnMgQVBJLlxuXHQvLyBVc2luZyB0aGUgaGFzaCBmb3IgdGhlIGVtcHR5IHN0cmluZyAoZm9yIGFuIGVtcHR5IHRhZykgd29ya3MgaW4gYWxsIGJyb3dzZXJzIGV4Y2VwdCBTYWZhcmkuXG5cdC8vIFNvIGFzIGEgd29ya2Fyb3VuZCBmb3IgdGhlIHdvcmthcm91bmQsIHdoZW4gd2UgYXBwZW5kIGVtcHR5IHN0eWxlIHRhZ3Mgd2Ugc2V0IHRoZWlyIGNvbnRlbnQgdG8gLyogZW1wdHkgKi8uXG5cdC8vIFRoZSBoYXNoICdzaGEyNTYtOU9sTk8wRE5FZWFWekhMNFJad0NMc0JIQThXQlE4dG9CcC80RjVYVjJuYz0nIHdpbGwgdGhlbiB3b3JrIGV2ZW4gaW4gU2FmYXJpLlxuXHRzdHlsZV9lbGVtZW50LnRleHRDb250ZW50ID0gJy8qIGVtcHR5ICovJztcblx0YXBwZW5kX3N0eWxlc2hlZXQoZ2V0X3Jvb3RfZm9yX3N0eWxlKG5vZGUpLCBzdHlsZV9lbGVtZW50KTtcblx0cmV0dXJuIHN0eWxlX2VsZW1lbnQuc2hlZXQ7XG59XG5cbi8qKlxuICogQHBhcmFtIHtTaGFkb3dSb290IHwgRG9jdW1lbnR9IG5vZGVcbiAqIEBwYXJhbSB7SFRNTFN0eWxlRWxlbWVudH0gc3R5bGVcbiAqIEByZXR1cm5zIHtDU1NTdHlsZVNoZWV0fVxuICovXG5mdW5jdGlvbiBhcHBlbmRfc3R5bGVzaGVldChub2RlLCBzdHlsZSkge1xuXHRhcHBlbmQoLyoqIEB0eXBlIHtEb2N1bWVudH0gKi8gKG5vZGUpLmhlYWQgfHwgbm9kZSwgc3R5bGUpO1xuXHRyZXR1cm4gc3R5bGUuc2hlZXQ7XG59XG5cbi8qKlxuICogQHBhcmFtIHtOb2RlRXh9IHRhcmdldFxuICogQHBhcmFtIHtOb2RlRXh9IG5vZGVcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kX2h5ZHJhdGlvbih0YXJnZXQsIG5vZGUpIHtcblx0aWYgKGlzX2h5ZHJhdGluZykge1xuXHRcdGluaXRfaHlkcmF0ZSh0YXJnZXQpO1xuXHRcdGlmIChcblx0XHRcdHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkID09PSB1bmRlZmluZWQgfHxcblx0XHRcdCh0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCAhPT0gbnVsbCAmJiB0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZC5wYXJlbnROb2RlICE9PSB0YXJnZXQpXG5cdFx0KSB7XG5cdFx0XHR0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCA9IHRhcmdldC5maXJzdENoaWxkO1xuXHRcdH1cblx0XHQvLyBTa2lwIG5vZGVzIG9mIHVuZGVmaW5lZCBvcmRlcmluZ1xuXHRcdHdoaWxlICh0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCAhPT0gbnVsbCAmJiB0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZC5jbGFpbV9vcmRlciA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHR0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCA9IHRhcmdldC5hY3R1YWxfZW5kX2NoaWxkLm5leHRTaWJsaW5nO1xuXHRcdH1cblx0XHRpZiAobm9kZSAhPT0gdGFyZ2V0LmFjdHVhbF9lbmRfY2hpbGQpIHtcblx0XHRcdC8vIFdlIG9ubHkgaW5zZXJ0IGlmIHRoZSBvcmRlcmluZyBvZiB0aGlzIG5vZGUgc2hvdWxkIGJlIG1vZGlmaWVkIG9yIHRoZSBwYXJlbnQgbm9kZSBpcyBub3QgdGFyZ2V0XG5cdFx0XHRpZiAobm9kZS5jbGFpbV9vcmRlciAhPT0gdW5kZWZpbmVkIHx8IG5vZGUucGFyZW50Tm9kZSAhPT0gdGFyZ2V0KSB7XG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUobm9kZSwgdGFyZ2V0LmFjdHVhbF9lbmRfY2hpbGQpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYWN0dWFsX2VuZF9jaGlsZCA9IG5vZGUubmV4dFNpYmxpbmc7XG5cdFx0fVxuXHR9IGVsc2UgaWYgKG5vZGUucGFyZW50Tm9kZSAhPT0gdGFyZ2V0IHx8IG5vZGUubmV4dFNpYmxpbmcgIT09IG51bGwpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQobm9kZSk7XG5cdH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge05vZGV9IHRhcmdldFxuICogQHBhcmFtIHtOb2RlfSBub2RlXG4gKiBAcGFyYW0ge05vZGV9IFthbmNob3JdXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluc2VydCh0YXJnZXQsIG5vZGUsIGFuY2hvcikge1xuXHR0YXJnZXQuaW5zZXJ0QmVmb3JlKG5vZGUsIGFuY2hvciB8fCBudWxsKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge05vZGVFeH0gdGFyZ2V0XG4gKiBAcGFyYW0ge05vZGVFeH0gbm9kZVxuICogQHBhcmFtIHtOb2RlRXh9IFthbmNob3JdXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluc2VydF9oeWRyYXRpb24odGFyZ2V0LCBub2RlLCBhbmNob3IpIHtcblx0aWYgKGlzX2h5ZHJhdGluZyAmJiAhYW5jaG9yKSB7XG5cdFx0YXBwZW5kX2h5ZHJhdGlvbih0YXJnZXQsIG5vZGUpO1xuXHR9IGVsc2UgaWYgKG5vZGUucGFyZW50Tm9kZSAhPT0gdGFyZ2V0IHx8IG5vZGUubmV4dFNpYmxpbmcgIT0gYW5jaG9yKSB7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShub2RlLCBhbmNob3IgfHwgbnVsbCk7XG5cdH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGV0YWNoKG5vZGUpIHtcblx0aWYgKG5vZGUucGFyZW50Tm9kZSkge1xuXHRcdG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcblx0fVxufVxuXG4vKipcbiAqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlc3Ryb3lfZWFjaChpdGVyYXRpb25zLCBkZXRhY2hpbmcpIHtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBpdGVyYXRpb25zLmxlbmd0aDsgaSArPSAxKSB7XG5cdFx0aWYgKGl0ZXJhdGlvbnNbaV0pIGl0ZXJhdGlvbnNbaV0uZChkZXRhY2hpbmcpO1xuXHR9XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtrZXlvZiBIVE1MRWxlbWVudFRhZ05hbWVNYXB9IEtcbiAqIEBwYXJhbSB7S30gbmFtZVxuICogQHJldHVybnMge0hUTUxFbGVtZW50VGFnTmFtZU1hcFtLXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVsZW1lbnQobmFtZSkge1xuXHRyZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKTtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUge2tleW9mIEhUTUxFbGVtZW50VGFnTmFtZU1hcH0gS1xuICogQHBhcmFtIHtLfSBuYW1lXG4gKiBAcGFyYW0ge3N0cmluZ30gaXNcbiAqIEByZXR1cm5zIHtIVE1MRWxlbWVudFRhZ05hbWVNYXBbS119XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbGVtZW50X2lzKG5hbWUsIGlzKSB7XG5cdHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KG5hbWUsIHsgaXMgfSk7XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0ZW1wbGF0ZSB7a2V5b2YgVH0gS1xuICogQHBhcmFtIHtUfSBvYmpcbiAqIEBwYXJhbSB7S1tdfSBleGNsdWRlXG4gKiBAcmV0dXJucyB7UGljazxULCBFeGNsdWRlPGtleW9mIFQsIEs+Pn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9iamVjdF93aXRob3V0X3Byb3BlcnRpZXMob2JqLCBleGNsdWRlKSB7XG5cdGNvbnN0IHRhcmdldCA9IC8qKiBAdHlwZSB7UGljazxULCBFeGNsdWRlPGtleW9mIFQsIEs+Pn0gKi8gKHt9KTtcblx0Zm9yIChjb25zdCBrIGluIG9iaikge1xuXHRcdGlmIChcblx0XHRcdGhhc19wcm9wKG9iaiwgaykgJiZcblx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdGV4Y2x1ZGUuaW5kZXhPZihrKSA9PT0gLTFcblx0XHQpIHtcblx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdHRhcmdldFtrXSA9IG9ialtrXTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHRhcmdldDtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUge2tleW9mIFNWR0VsZW1lbnRUYWdOYW1lTWFwfSBLXG4gKiBAcGFyYW0ge0t9IG5hbWVcbiAqIEByZXR1cm5zIHtTVkdFbGVtZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gc3ZnX2VsZW1lbnQobmFtZSkge1xuXHRyZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsIG5hbWUpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhXG4gKiBAcmV0dXJucyB7VGV4dH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRleHQoZGF0YSkge1xuXHRyZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZGF0YSk7XG59XG5cbi8qKlxuICogQHJldHVybnMge1RleHR9ICovXG5leHBvcnQgZnVuY3Rpb24gc3BhY2UoKSB7XG5cdHJldHVybiB0ZXh0KCcgJyk7XG59XG5cbi8qKlxuICogQHJldHVybnMge1RleHR9ICovXG5leHBvcnQgZnVuY3Rpb24gZW1wdHkoKSB7XG5cdHJldHVybiB0ZXh0KCcnKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29udGVudFxuICogQHJldHVybnMge0NvbW1lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21tZW50KGNvbnRlbnQpIHtcblx0cmV0dXJuIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoY29udGVudCk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtFdmVudFRhcmdldH0gbm9kZVxuICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50XG4gKiBAcGFyYW0ge0V2ZW50TGlzdGVuZXJPckV2ZW50TGlzdGVuZXJPYmplY3R9IGhhbmRsZXJcbiAqIEBwYXJhbSB7Ym9vbGVhbiB8IEFkZEV2ZW50TGlzdGVuZXJPcHRpb25zIHwgRXZlbnRMaXN0ZW5lck9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMgeygpID0+IHZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsaXN0ZW4obm9kZSwgZXZlbnQsIGhhbmRsZXIsIG9wdGlvbnMpIHtcblx0bm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKTtcblx0cmV0dXJuICgpID0+IG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgb3B0aW9ucyk7XG59XG5cbi8qKlxuICogQHJldHVybnMgeyhldmVudDogYW55KSA9PiBhbnl9ICovXG5leHBvcnQgZnVuY3Rpb24gcHJldmVudF9kZWZhdWx0KGZuKSB7XG5cdHJldHVybiBmdW5jdGlvbiAoZXZlbnQpIHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdC8vIEB0cy1pZ25vcmVcblx0XHRyZXR1cm4gZm4uY2FsbCh0aGlzLCBldmVudCk7XG5cdH07XG59XG5cbi8qKlxuICogQHJldHVybnMgeyhldmVudDogYW55KSA9PiBhbnl9ICovXG5leHBvcnQgZnVuY3Rpb24gc3RvcF9wcm9wYWdhdGlvbihmbikge1xuXHRyZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG5cdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdHJldHVybiBmbi5jYWxsKHRoaXMsIGV2ZW50KTtcblx0fTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7KGV2ZW50OiBhbnkpID0+IGFueX0gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdG9wX2ltbWVkaWF0ZV9wcm9wYWdhdGlvbihmbikge1xuXHRyZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG5cdFx0ZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdHJldHVybiBmbi5jYWxsKHRoaXMsIGV2ZW50KTtcblx0fTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7KGV2ZW50OiBhbnkpID0+IHZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gc2VsZihmbikge1xuXHRyZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG5cdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdGlmIChldmVudC50YXJnZXQgPT09IHRoaXMpIGZuLmNhbGwodGhpcywgZXZlbnQpO1xuXHR9O1xufVxuXG4vKipcbiAqIEByZXR1cm5zIHsoZXZlbnQ6IGFueSkgPT4gdm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cnVzdGVkKGZuKSB7XG5cdHJldHVybiBmdW5jdGlvbiAoZXZlbnQpIHtcblx0XHQvLyBAdHMtaWdub3JlXG5cdFx0aWYgKGV2ZW50LmlzVHJ1c3RlZCkgZm4uY2FsbCh0aGlzLCBldmVudCk7XG5cdH07XG59XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSBub2RlXG4gKiBAcGFyYW0ge3N0cmluZ30gYXR0cmlidXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gW3ZhbHVlXVxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhdHRyKG5vZGUsIGF0dHJpYnV0ZSwgdmFsdWUpIHtcblx0aWYgKHZhbHVlID09IG51bGwpIG5vZGUucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZSk7XG5cdGVsc2UgaWYgKG5vZGUuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZSkgIT09IHZhbHVlKSBub2RlLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGUsIHZhbHVlKTtcbn1cbi8qKlxuICogTGlzdCBvZiBhdHRyaWJ1dGVzIHRoYXQgc2hvdWxkIGFsd2F5cyBiZSBzZXQgdGhyb3VnaCB0aGUgYXR0ciBtZXRob2QsXG4gKiBiZWNhdXNlIHVwZGF0aW5nIHRoZW0gdGhyb3VnaCB0aGUgcHJvcGVydHkgc2V0dGVyIGRvZXNuJ3Qgd29yayByZWxpYWJseS5cbiAqIEluIHRoZSBleGFtcGxlIG9mIGB3aWR0aGAvYGhlaWdodGAsIHRoZSBwcm9ibGVtIGlzIHRoYXQgdGhlIHNldHRlciBvbmx5XG4gKiBhY2NlcHRzIG51bWVyaWMgdmFsdWVzLCBidXQgdGhlIGF0dHJpYnV0ZSBjYW4gYWxzbyBiZSBzZXQgdG8gYSBzdHJpbmcgbGlrZSBgNTAlYC5cbiAqIElmIHRoaXMgbGlzdCBiZWNvbWVzIHRvbyBiaWcsIHJldGhpbmsgdGhpcyBhcHByb2FjaC5cbiAqL1xuY29uc3QgYWx3YXlzX3NldF90aHJvdWdoX3NldF9hdHRyaWJ1dGUgPSBbJ3dpZHRoJywgJ2hlaWdodCddO1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudCAmIEVsZW1lbnRDU1NJbmxpbmVTdHlsZX0gbm9kZVxuICogQHBhcmFtIHt7IFt4OiBzdHJpbmddOiBzdHJpbmcgfX0gYXR0cmlidXRlc1xuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRfYXR0cmlidXRlcyhub2RlLCBhdHRyaWJ1dGVzKSB7XG5cdC8vIEB0cy1pZ25vcmVcblx0Y29uc3QgZGVzY3JpcHRvcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhub2RlLl9fcHJvdG9fXyk7XG5cdGZvciAoY29uc3Qga2V5IGluIGF0dHJpYnV0ZXMpIHtcblx0XHRpZiAoYXR0cmlidXRlc1trZXldID09IG51bGwpIHtcblx0XHRcdG5vZGUucmVtb3ZlQXR0cmlidXRlKGtleSk7XG5cdFx0fSBlbHNlIGlmIChrZXkgPT09ICdzdHlsZScpIHtcblx0XHRcdG5vZGUuc3R5bGUuY3NzVGV4dCA9IGF0dHJpYnV0ZXNba2V5XTtcblx0XHR9IGVsc2UgaWYgKGtleSA9PT0gJ19fdmFsdWUnKSB7XG5cdFx0XHQvKiogQHR5cGUge2FueX0gKi8gKG5vZGUpLnZhbHVlID0gbm9kZVtrZXldID0gYXR0cmlidXRlc1trZXldO1xuXHRcdH0gZWxzZSBpZiAoXG5cdFx0XHRkZXNjcmlwdG9yc1trZXldICYmXG5cdFx0XHRkZXNjcmlwdG9yc1trZXldLnNldCAmJlxuXHRcdFx0YWx3YXlzX3NldF90aHJvdWdoX3NldF9hdHRyaWJ1dGUuaW5kZXhPZihrZXkpID09PSAtMVxuXHRcdCkge1xuXHRcdFx0bm9kZVtrZXldID0gYXR0cmlidXRlc1trZXldO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRhdHRyKG5vZGUsIGtleSwgYXR0cmlidXRlc1trZXldKTtcblx0XHR9XG5cdH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnQgJiBFbGVtZW50Q1NTSW5saW5lU3R5bGV9IG5vZGVcbiAqIEBwYXJhbSB7eyBbeDogc3RyaW5nXTogc3RyaW5nIH19IGF0dHJpYnV0ZXNcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X3N2Z19hdHRyaWJ1dGVzKG5vZGUsIGF0dHJpYnV0ZXMpIHtcblx0Zm9yIChjb25zdCBrZXkgaW4gYXR0cmlidXRlcykge1xuXHRcdGF0dHIobm9kZSwga2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuXHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtSZWNvcmQ8c3RyaW5nLCB1bmtub3duPn0gZGF0YV9tYXBcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X2N1c3RvbV9lbGVtZW50X2RhdGFfbWFwKG5vZGUsIGRhdGFfbWFwKSB7XG5cdE9iamVjdC5rZXlzKGRhdGFfbWFwKS5mb3JFYWNoKChrZXkpID0+IHtcblx0XHRzZXRfY3VzdG9tX2VsZW1lbnRfZGF0YShub2RlLCBrZXksIGRhdGFfbWFwW2tleV0pO1xuXHR9KTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRfY3VzdG9tX2VsZW1lbnRfZGF0YShub2RlLCBwcm9wLCB2YWx1ZSkge1xuXHRpZiAocHJvcCBpbiBub2RlKSB7XG5cdFx0bm9kZVtwcm9wXSA9IHR5cGVvZiBub2RlW3Byb3BdID09PSAnYm9vbGVhbicgJiYgdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuXHR9IGVsc2Uge1xuXHRcdGF0dHIobm9kZSwgcHJvcCwgdmFsdWUpO1xuXHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHRhZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X2R5bmFtaWNfZWxlbWVudF9kYXRhKHRhZykge1xuXHRyZXR1cm4gLy0vLnRlc3QodGFnKSA/IHNldF9jdXN0b21fZWxlbWVudF9kYXRhX21hcCA6IHNldF9hdHRyaWJ1dGVzO1xufVxuXG4vKipcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24geGxpbmtfYXR0cihub2RlLCBhdHRyaWJ1dGUsIHZhbHVlKSB7XG5cdG5vZGUuc2V0QXR0cmlidXRlTlMoJ2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnLCBhdHRyaWJ1dGUsIHZhbHVlKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBub2RlXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0X3N2ZWx0ZV9kYXRhc2V0KG5vZGUpIHtcblx0cmV0dXJuIG5vZGUuZGF0YXNldC5zdmVsdGVIO1xufVxuXG4vKipcbiAqIEByZXR1cm5zIHt1bmtub3duW119ICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0X2JpbmRpbmdfZ3JvdXBfdmFsdWUoZ3JvdXAsIF9fdmFsdWUsIGNoZWNrZWQpIHtcblx0Y29uc3QgdmFsdWUgPSBuZXcgU2V0KCk7XG5cdGZvciAobGV0IGkgPSAwOyBpIDwgZ3JvdXAubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRpZiAoZ3JvdXBbaV0uY2hlY2tlZCkgdmFsdWUuYWRkKGdyb3VwW2ldLl9fdmFsdWUpO1xuXHR9XG5cdGlmICghY2hlY2tlZCkge1xuXHRcdHZhbHVlLmRlbGV0ZShfX3ZhbHVlKTtcblx0fVxuXHRyZXR1cm4gQXJyYXkuZnJvbSh2YWx1ZSk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50W119IGdyb3VwXG4gKiBAcmV0dXJucyB7eyBwKC4uLmlucHV0czogSFRNTElucHV0RWxlbWVudFtdKTogdm9pZDsgcigpOiB2b2lkOyB9fVxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5pdF9iaW5kaW5nX2dyb3VwKGdyb3VwKSB7XG5cdC8qKlxuXHQgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudFtdfSAqL1xuXHRsZXQgX2lucHV0cztcblx0cmV0dXJuIHtcblx0XHQvKiBwdXNoICovIHAoLi4uaW5wdXRzKSB7XG5cdFx0XHRfaW5wdXRzID0gaW5wdXRzO1xuXHRcdFx0X2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4gZ3JvdXAucHVzaChpbnB1dCkpO1xuXHRcdH0sXG5cdFx0LyogcmVtb3ZlICovIHIoKSB7XG5cdFx0XHRfaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiBncm91cC5zcGxpY2UoZ3JvdXAuaW5kZXhPZihpbnB1dCksIDEpKTtcblx0XHR9XG5cdH07XG59XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJbXX0gaW5kZXhlc1xuICogQHJldHVybnMge3sgdShuZXdfaW5kZXhlczogbnVtYmVyW10pOiB2b2lkOyBwKC4uLmlucHV0czogSFRNTElucHV0RWxlbWVudFtdKTogdm9pZDsgcjogKCkgPT4gdm9pZDsgfX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluaXRfYmluZGluZ19ncm91cF9keW5hbWljKGdyb3VwLCBpbmRleGVzKSB7XG5cdC8qKlxuXHQgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudFtdfSAqL1xuXHRsZXQgX2dyb3VwID0gZ2V0X2JpbmRpbmdfZ3JvdXAoZ3JvdXApO1xuXG5cdC8qKlxuXHQgKiBAdHlwZSB7SFRNTElucHV0RWxlbWVudFtdfSAqL1xuXHRsZXQgX2lucHV0cztcblxuXHRmdW5jdGlvbiBnZXRfYmluZGluZ19ncm91cChncm91cCkge1xuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgaW5kZXhlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0Z3JvdXAgPSBncm91cFtpbmRleGVzW2ldXSA9IGdyb3VwW2luZGV4ZXNbaV1dIHx8IFtdO1xuXHRcdH1cblx0XHRyZXR1cm4gZ3JvdXA7XG5cdH1cblxuXHQvKipcblx0ICogQHJldHVybnMge3ZvaWR9ICovXG5cdGZ1bmN0aW9uIHB1c2goKSB7XG5cdFx0X2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4gX2dyb3VwLnB1c2goaW5wdXQpKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcmV0dXJucyB7dm9pZH0gKi9cblx0ZnVuY3Rpb24gcmVtb3ZlKCkge1xuXHRcdF9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IF9ncm91cC5zcGxpY2UoX2dyb3VwLmluZGV4T2YoaW5wdXQpLCAxKSk7XG5cdH1cblx0cmV0dXJuIHtcblx0XHQvKiB1cGRhdGUgKi8gdShuZXdfaW5kZXhlcykge1xuXHRcdFx0aW5kZXhlcyA9IG5ld19pbmRleGVzO1xuXHRcdFx0Y29uc3QgbmV3X2dyb3VwID0gZ2V0X2JpbmRpbmdfZ3JvdXAoZ3JvdXApO1xuXHRcdFx0aWYgKG5ld19ncm91cCAhPT0gX2dyb3VwKSB7XG5cdFx0XHRcdHJlbW92ZSgpO1xuXHRcdFx0XHRfZ3JvdXAgPSBuZXdfZ3JvdXA7XG5cdFx0XHRcdHB1c2goKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdC8qIHB1c2ggKi8gcCguLi5pbnB1dHMpIHtcblx0XHRcdF9pbnB1dHMgPSBpbnB1dHM7XG5cdFx0XHRwdXNoKCk7XG5cdFx0fSxcblx0XHQvKiByZW1vdmUgKi8gcjogcmVtb3ZlXG5cdH07XG59XG5cbi8qKlxuICogQHJldHVybnMge251bWJlcn0gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b19udW1iZXIodmFsdWUpIHtcblx0cmV0dXJuIHZhbHVlID09PSAnJyA/IG51bGwgOiArdmFsdWU7XG59XG5cbi8qKlxuICogQHJldHVybnMge2FueVtdfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRpbWVfcmFuZ2VzX3RvX2FycmF5KHJhbmdlcykge1xuXHRjb25zdCBhcnJheSA9IFtdO1xuXHRmb3IgKGxldCBpID0gMDsgaSA8IHJhbmdlcy5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdGFycmF5LnB1c2goeyBzdGFydDogcmFuZ2VzLnN0YXJ0KGkpLCBlbmQ6IHJhbmdlcy5lbmQoaSkgfSk7XG5cdH1cblx0cmV0dXJuIGFycmF5O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogQHJldHVybnMge0NoaWxkTm9kZVtdfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2hpbGRyZW4oZWxlbWVudCkge1xuXHRyZXR1cm4gQXJyYXkuZnJvbShlbGVtZW50LmNoaWxkTm9kZXMpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Q2hpbGROb2RlQXJyYXl9IG5vZGVzXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gaW5pdF9jbGFpbV9pbmZvKG5vZGVzKSB7XG5cdGlmIChub2Rlcy5jbGFpbV9pbmZvID09PSB1bmRlZmluZWQpIHtcblx0XHRub2Rlcy5jbGFpbV9pbmZvID0geyBsYXN0X2luZGV4OiAwLCB0b3RhbF9jbGFpbWVkOiAwIH07XG5cdH1cbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUge0NoaWxkTm9kZUV4fSBSXG4gKiBAcGFyYW0ge0NoaWxkTm9kZUFycmF5fSBub2Rlc1xuICogQHBhcmFtIHsobm9kZTogQ2hpbGROb2RlRXgpID0+IG5vZGUgaXMgUn0gcHJlZGljYXRlXG4gKiBAcGFyYW0geyhub2RlOiBDaGlsZE5vZGVFeCkgPT4gQ2hpbGROb2RlRXggfCB1bmRlZmluZWR9IHByb2Nlc3NOb2RlXG4gKiBAcGFyYW0geygpID0+IFJ9IGNyZWF0ZU5vZGVcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gZG9udFVwZGF0ZUxhc3RJbmRleFxuICogQHJldHVybnMge1J9XG4gKi9cbmZ1bmN0aW9uIGNsYWltX25vZGUobm9kZXMsIHByZWRpY2F0ZSwgcHJvY2Vzc05vZGUsIGNyZWF0ZU5vZGUsIGRvbnRVcGRhdGVMYXN0SW5kZXggPSBmYWxzZSkge1xuXHQvLyBUcnkgdG8gZmluZCBub2RlcyBpbiBhbiBvcmRlciBzdWNoIHRoYXQgd2UgbGVuZ3RoZW4gdGhlIGxvbmdlc3QgaW5jcmVhc2luZyBzdWJzZXF1ZW5jZVxuXHRpbml0X2NsYWltX2luZm8obm9kZXMpO1xuXHRjb25zdCByZXN1bHROb2RlID0gKCgpID0+IHtcblx0XHQvLyBXZSBmaXJzdCB0cnkgdG8gZmluZCBhbiBlbGVtZW50IGFmdGVyIHRoZSBwcmV2aW91cyBvbmVcblx0XHRmb3IgKGxldCBpID0gbm9kZXMuY2xhaW1faW5mby5sYXN0X2luZGV4OyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGNvbnN0IG5vZGUgPSBub2Rlc1tpXTtcblx0XHRcdGlmIChwcmVkaWNhdGUobm9kZSkpIHtcblx0XHRcdFx0Y29uc3QgcmVwbGFjZW1lbnQgPSBwcm9jZXNzTm9kZShub2RlKTtcblx0XHRcdFx0aWYgKHJlcGxhY2VtZW50ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRub2Rlcy5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bm9kZXNbaV0gPSByZXBsYWNlbWVudDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIWRvbnRVcGRhdGVMYXN0SW5kZXgpIHtcblx0XHRcdFx0XHRub2Rlcy5jbGFpbV9pbmZvLmxhc3RfaW5kZXggPSBpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBub2RlO1xuXHRcdFx0fVxuXHRcdH1cblx0XHQvLyBPdGhlcndpc2UsIHdlIHRyeSB0byBmaW5kIG9uZSBiZWZvcmVcblx0XHQvLyBXZSBpdGVyYXRlIGluIHJldmVyc2Ugc28gdGhhdCB3ZSBkb24ndCBnbyB0b28gZmFyIGJhY2tcblx0XHRmb3IgKGxldCBpID0gbm9kZXMuY2xhaW1faW5mby5sYXN0X2luZGV4IC0gMTsgaSA+PSAwOyBpLS0pIHtcblx0XHRcdGNvbnN0IG5vZGUgPSBub2Rlc1tpXTtcblx0XHRcdGlmIChwcmVkaWNhdGUobm9kZSkpIHtcblx0XHRcdFx0Y29uc3QgcmVwbGFjZW1lbnQgPSBwcm9jZXNzTm9kZShub2RlKTtcblx0XHRcdFx0aWYgKHJlcGxhY2VtZW50ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRub2Rlcy5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bm9kZXNbaV0gPSByZXBsYWNlbWVudDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIWRvbnRVcGRhdGVMYXN0SW5kZXgpIHtcblx0XHRcdFx0XHRub2Rlcy5jbGFpbV9pbmZvLmxhc3RfaW5kZXggPSBpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHJlcGxhY2VtZW50ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHQvLyBTaW5jZSB3ZSBzcGxpY2VkIGJlZm9yZSB0aGUgbGFzdF9pbmRleCwgd2UgZGVjcmVhc2UgaXRcblx0XHRcdFx0XHRub2Rlcy5jbGFpbV9pbmZvLmxhc3RfaW5kZXgtLTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gbm9kZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0Ly8gSWYgd2UgY2FuJ3QgZmluZCBhbnkgbWF0Y2hpbmcgbm9kZSwgd2UgY3JlYXRlIGEgbmV3IG9uZVxuXHRcdHJldHVybiBjcmVhdGVOb2RlKCk7XG5cdH0pKCk7XG5cdHJlc3VsdE5vZGUuY2xhaW1fb3JkZXIgPSBub2Rlcy5jbGFpbV9pbmZvLnRvdGFsX2NsYWltZWQ7XG5cdG5vZGVzLmNsYWltX2luZm8udG90YWxfY2xhaW1lZCArPSAxO1xuXHRyZXR1cm4gcmVzdWx0Tm9kZTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0NoaWxkTm9kZUFycmF5fSBub2Rlc1xuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7eyBba2V5OiBzdHJpbmddOiBib29sZWFuIH19IGF0dHJpYnV0ZXNcbiAqIEBwYXJhbSB7KG5hbWU6IHN0cmluZykgPT4gRWxlbWVudCB8IFNWR0VsZW1lbnR9IGNyZWF0ZV9lbGVtZW50XG4gKiBAcmV0dXJucyB7RWxlbWVudCB8IFNWR0VsZW1lbnR9XG4gKi9cbmZ1bmN0aW9uIGNsYWltX2VsZW1lbnRfYmFzZShub2RlcywgbmFtZSwgYXR0cmlidXRlcywgY3JlYXRlX2VsZW1lbnQpIHtcblx0cmV0dXJuIGNsYWltX25vZGUoXG5cdFx0bm9kZXMsXG5cdFx0LyoqIEByZXR1cm5zIHtub2RlIGlzIEVsZW1lbnQgfCBTVkdFbGVtZW50fSAqL1xuXHRcdChub2RlKSA9PiBub2RlLm5vZGVOYW1lID09PSBuYW1lLFxuXHRcdC8qKiBAcGFyYW0ge0VsZW1lbnR9IG5vZGUgKi9cblx0XHQobm9kZSkgPT4ge1xuXHRcdFx0Y29uc3QgcmVtb3ZlID0gW107XG5cdFx0XHRmb3IgKGxldCBqID0gMDsgaiA8IG5vZGUuYXR0cmlidXRlcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRjb25zdCBhdHRyaWJ1dGUgPSBub2RlLmF0dHJpYnV0ZXNbal07XG5cdFx0XHRcdGlmICghYXR0cmlidXRlc1thdHRyaWJ1dGUubmFtZV0pIHtcblx0XHRcdFx0XHRyZW1vdmUucHVzaChhdHRyaWJ1dGUubmFtZSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJlbW92ZS5mb3JFYWNoKCh2KSA9PiBub2RlLnJlbW92ZUF0dHJpYnV0ZSh2KSk7XG5cdFx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHRcdH0sXG5cdFx0KCkgPT4gY3JlYXRlX2VsZW1lbnQobmFtZSlcblx0KTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0NoaWxkTm9kZUFycmF5fSBub2Rlc1xuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7eyBba2V5OiBzdHJpbmddOiBib29sZWFuIH19IGF0dHJpYnV0ZXNcbiAqIEByZXR1cm5zIHtFbGVtZW50IHwgU1ZHRWxlbWVudH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsYWltX2VsZW1lbnQobm9kZXMsIG5hbWUsIGF0dHJpYnV0ZXMpIHtcblx0cmV0dXJuIGNsYWltX2VsZW1lbnRfYmFzZShub2RlcywgbmFtZSwgYXR0cmlidXRlcywgZWxlbWVudCk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtDaGlsZE5vZGVBcnJheX0gbm9kZXNcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0ge3sgW2tleTogc3RyaW5nXTogYm9vbGVhbiB9fSBhdHRyaWJ1dGVzXG4gKiBAcmV0dXJucyB7RWxlbWVudCB8IFNWR0VsZW1lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFpbV9zdmdfZWxlbWVudChub2RlcywgbmFtZSwgYXR0cmlidXRlcykge1xuXHRyZXR1cm4gY2xhaW1fZWxlbWVudF9iYXNlKG5vZGVzLCBuYW1lLCBhdHRyaWJ1dGVzLCBzdmdfZWxlbWVudCk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtDaGlsZE5vZGVBcnJheX0gbm9kZXNcbiAqIEByZXR1cm5zIHtUZXh0fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xhaW1fdGV4dChub2RlcywgZGF0YSkge1xuXHRyZXR1cm4gY2xhaW1fbm9kZShcblx0XHRub2Rlcyxcblx0XHQvKiogQHJldHVybnMge25vZGUgaXMgVGV4dH0gKi9cblx0XHQobm9kZSkgPT4gbm9kZS5ub2RlVHlwZSA9PT0gMyxcblx0XHQvKiogQHBhcmFtIHtUZXh0fSBub2RlICovXG5cdFx0KG5vZGUpID0+IHtcblx0XHRcdGNvbnN0IGRhdGFTdHIgPSAnJyArIGRhdGE7XG5cdFx0XHRpZiAobm9kZS5kYXRhLnN0YXJ0c1dpdGgoZGF0YVN0cikpIHtcblx0XHRcdFx0aWYgKG5vZGUuZGF0YS5sZW5ndGggIT09IGRhdGFTdHIubGVuZ3RoKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG5vZGUuc3BsaXRUZXh0KGRhdGFTdHIubGVuZ3RoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bm9kZS5kYXRhID0gZGF0YVN0cjtcblx0XHRcdH1cblx0XHR9LFxuXHRcdCgpID0+IHRleHQoZGF0YSksXG5cdFx0dHJ1ZSAvLyBUZXh0IG5vZGVzIHNob3VsZCBub3QgdXBkYXRlIGxhc3QgaW5kZXggc2luY2UgaXQgaXMgbGlrZWx5IG5vdCB3b3J0aCBpdCB0byBlbGltaW5hdGUgYW4gaW5jcmVhc2luZyBzdWJzZXF1ZW5jZSBvZiBhY3R1YWwgZWxlbWVudHNcblx0KTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7VGV4dH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFpbV9zcGFjZShub2Rlcykge1xuXHRyZXR1cm4gY2xhaW1fdGV4dChub2RlcywgJyAnKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0NoaWxkTm9kZUFycmF5fSBub2Rlc1xuICogQHJldHVybnMge0NvbW1lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFpbV9jb21tZW50KG5vZGVzLCBkYXRhKSB7XG5cdHJldHVybiBjbGFpbV9ub2RlKFxuXHRcdG5vZGVzLFxuXHRcdC8qKiBAcmV0dXJucyB7bm9kZSBpcyBDb21tZW50fSAqL1xuXHRcdChub2RlKSA9PiBub2RlLm5vZGVUeXBlID09PSA4LFxuXHRcdC8qKiBAcGFyYW0ge0NvbW1lbnR9IG5vZGUgKi9cblx0XHQobm9kZSkgPT4ge1xuXHRcdFx0bm9kZS5kYXRhID0gJycgKyBkYXRhO1xuXHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0XHR9LFxuXHRcdCgpID0+IGNvbW1lbnQoZGF0YSksXG5cdFx0dHJ1ZVxuXHQpO1xufVxuXG5mdW5jdGlvbiBnZXRfY29tbWVudF9pZHgobm9kZXMsIHRleHQsIHN0YXJ0KSB7XG5cdGZvciAobGV0IGkgPSBzdGFydDsgaSA8IG5vZGVzLmxlbmd0aDsgaSArPSAxKSB7XG5cdFx0Y29uc3Qgbm9kZSA9IG5vZGVzW2ldO1xuXHRcdGlmIChub2RlLm5vZGVUeXBlID09PSA4IC8qIGNvbW1lbnQgbm9kZSAqLyAmJiBub2RlLnRleHRDb250ZW50LnRyaW0oKSA9PT0gdGV4dCkge1xuXHRcdFx0cmV0dXJuIGk7XG5cdFx0fVxuXHR9XG5cdHJldHVybiAtMTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzX3N2Z1xuICogQHJldHVybnMge0h0bWxUYWdIeWRyYXRpb259XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFpbV9odG1sX3RhZyhub2RlcywgaXNfc3ZnKSB7XG5cdC8vIGZpbmQgaHRtbCBvcGVuaW5nIHRhZ1xuXHRjb25zdCBzdGFydF9pbmRleCA9IGdldF9jb21tZW50X2lkeChub2RlcywgJ0hUTUxfVEFHX1NUQVJUJywgMCk7XG5cdGNvbnN0IGVuZF9pbmRleCA9IGdldF9jb21tZW50X2lkeChub2RlcywgJ0hUTUxfVEFHX0VORCcsIHN0YXJ0X2luZGV4ICsgMSk7XG5cdGlmIChzdGFydF9pbmRleCA9PT0gLTEgfHwgZW5kX2luZGV4ID09PSAtMSkge1xuXHRcdHJldHVybiBuZXcgSHRtbFRhZ0h5ZHJhdGlvbihpc19zdmcpO1xuXHR9XG5cblx0aW5pdF9jbGFpbV9pbmZvKG5vZGVzKTtcblx0Y29uc3QgaHRtbF90YWdfbm9kZXMgPSBub2Rlcy5zcGxpY2Uoc3RhcnRfaW5kZXgsIGVuZF9pbmRleCAtIHN0YXJ0X2luZGV4ICsgMSk7XG5cdGRldGFjaChodG1sX3RhZ19ub2Rlc1swXSk7XG5cdGRldGFjaChodG1sX3RhZ19ub2Rlc1todG1sX3RhZ19ub2Rlcy5sZW5ndGggLSAxXSk7XG5cdGNvbnN0IGNsYWltZWRfbm9kZXMgPSBodG1sX3RhZ19ub2Rlcy5zbGljZSgxLCBodG1sX3RhZ19ub2Rlcy5sZW5ndGggLSAxKTtcblx0Zm9yIChjb25zdCBuIG9mIGNsYWltZWRfbm9kZXMpIHtcblx0XHRuLmNsYWltX29yZGVyID0gbm9kZXMuY2xhaW1faW5mby50b3RhbF9jbGFpbWVkO1xuXHRcdG5vZGVzLmNsYWltX2luZm8udG90YWxfY2xhaW1lZCArPSAxO1xuXHR9XG5cdHJldHVybiBuZXcgSHRtbFRhZ0h5ZHJhdGlvbihpc19zdmcsIGNsYWltZWRfbm9kZXMpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VGV4dH0gdGV4dFxuICogQHBhcmFtIHt1bmtub3dufSBkYXRhXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldF9kYXRhKHRleHQsIGRhdGEpIHtcblx0ZGF0YSA9ICcnICsgZGF0YTtcblx0aWYgKHRleHQuZGF0YSA9PT0gZGF0YSkgcmV0dXJuO1xuXHR0ZXh0LmRhdGEgPSAvKiogQHR5cGUge3N0cmluZ30gKi8gKGRhdGEpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VGV4dH0gdGV4dFxuICogQHBhcmFtIHt1bmtub3dufSBkYXRhXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldF9kYXRhX2NvbnRlbnRlZGl0YWJsZSh0ZXh0LCBkYXRhKSB7XG5cdGRhdGEgPSAnJyArIGRhdGE7XG5cdGlmICh0ZXh0Lndob2xlVGV4dCA9PT0gZGF0YSkgcmV0dXJuO1xuXHR0ZXh0LmRhdGEgPSAvKiogQHR5cGUge3N0cmluZ30gKi8gKGRhdGEpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7VGV4dH0gdGV4dFxuICogQHBhcmFtIHt1bmtub3dufSBkYXRhXG4gKiBAcGFyYW0ge3N0cmluZ30gYXR0cl92YWx1ZVxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRfZGF0YV9tYXliZV9jb250ZW50ZWRpdGFibGUodGV4dCwgZGF0YSwgYXR0cl92YWx1ZSkge1xuXHRpZiAofmNvbnRlbnRlZGl0YWJsZV90cnV0aHlfdmFsdWVzLmluZGV4T2YoYXR0cl92YWx1ZSkpIHtcblx0XHRzZXRfZGF0YV9jb250ZW50ZWRpdGFibGUodGV4dCwgZGF0YSk7XG5cdH0gZWxzZSB7XG5cdFx0c2V0X2RhdGEodGV4dCwgZGF0YSk7XG5cdH1cbn1cblxuLyoqXG4gKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIHZhbHVlKSB7XG5cdGlucHV0LnZhbHVlID0gdmFsdWUgPT0gbnVsbCA/ICcnIDogdmFsdWU7XG59XG5cbi8qKlxuICogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X2lucHV0X3R5cGUoaW5wdXQsIHR5cGUpIHtcblx0dHJ5IHtcblx0XHRpbnB1dC50eXBlID0gdHlwZTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdC8vIGRvIG5vdGhpbmdcblx0fVxufVxuXG4vKipcbiAqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldF9zdHlsZShub2RlLCBrZXksIHZhbHVlLCBpbXBvcnRhbnQpIHtcblx0aWYgKHZhbHVlID09IG51bGwpIHtcblx0XHRub2RlLnN0eWxlLnJlbW92ZVByb3BlcnR5KGtleSk7XG5cdH0gZWxzZSB7XG5cdFx0bm9kZS5zdHlsZS5zZXRQcm9wZXJ0eShrZXksIHZhbHVlLCBpbXBvcnRhbnQgPyAnaW1wb3J0YW50JyA6ICcnKTtcblx0fVxufVxuXG4vKipcbiAqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdF9vcHRpb24oc2VsZWN0LCB2YWx1ZSwgbW91bnRpbmcpIHtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBzZWxlY3Qub3B0aW9ucy5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdGNvbnN0IG9wdGlvbiA9IHNlbGVjdC5vcHRpb25zW2ldO1xuXHRcdGlmIChvcHRpb24uX192YWx1ZSA9PT0gdmFsdWUpIHtcblx0XHRcdG9wdGlvbi5zZWxlY3RlZCA9IHRydWU7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHR9XG5cdGlmICghbW91bnRpbmcgfHwgdmFsdWUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHNlbGVjdC5zZWxlY3RlZEluZGV4ID0gLTE7IC8vIG5vIG9wdGlvbiBzaG91bGQgYmUgc2VsZWN0ZWRcblx0fVxufVxuXG4vKipcbiAqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdF9vcHRpb25zKHNlbGVjdCwgdmFsdWUpIHtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBzZWxlY3Qub3B0aW9ucy5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdGNvbnN0IG9wdGlvbiA9IHNlbGVjdC5vcHRpb25zW2ldO1xuXHRcdG9wdGlvbi5zZWxlY3RlZCA9IH52YWx1ZS5pbmRleE9mKG9wdGlvbi5fX3ZhbHVlKTtcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VsZWN0X3ZhbHVlKHNlbGVjdCkge1xuXHRjb25zdCBzZWxlY3RlZF9vcHRpb24gPSBzZWxlY3QucXVlcnlTZWxlY3RvcignOmNoZWNrZWQnKTtcblx0cmV0dXJuIHNlbGVjdGVkX29wdGlvbiAmJiBzZWxlY3RlZF9vcHRpb24uX192YWx1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdF9tdWx0aXBsZV92YWx1ZShzZWxlY3QpIHtcblx0cmV0dXJuIFtdLm1hcC5jYWxsKHNlbGVjdC5xdWVyeVNlbGVjdG9yQWxsKCc6Y2hlY2tlZCcpLCAob3B0aW9uKSA9PiBvcHRpb24uX192YWx1ZSk7XG59XG4vLyB1bmZvcnR1bmF0ZWx5IHRoaXMgY2FuJ3QgYmUgYSBjb25zdGFudCBhcyB0aGF0IHdvdWxkbid0IGJlIHRyZWUtc2hha2VhYmxlXG4vLyBzbyB3ZSBjYWNoZSB0aGUgcmVzdWx0IGluc3RlYWRcblxuLyoqXG4gKiBAdHlwZSB7Ym9vbGVhbn0gKi9cbmxldCBjcm9zc29yaWdpbjtcblxuLyoqXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc19jcm9zc29yaWdpbigpIHtcblx0aWYgKGNyb3Nzb3JpZ2luID09PSB1bmRlZmluZWQpIHtcblx0XHRjcm9zc29yaWdpbiA9IGZhbHNlO1xuXHRcdHRyeSB7XG5cdFx0XHRpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LnBhcmVudCkge1xuXHRcdFx0XHR2b2lkIHdpbmRvdy5wYXJlbnQuZG9jdW1lbnQ7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdGNyb3Nzb3JpZ2luID0gdHJ1ZTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGNyb3Nzb3JpZ2luO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IG5vZGVcbiAqIEBwYXJhbSB7KCkgPT4gdm9pZH0gZm5cbiAqIEByZXR1cm5zIHsoKSA9PiB2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYWRkX2lmcmFtZV9yZXNpemVfbGlzdGVuZXIobm9kZSwgZm4pIHtcblx0Y29uc3QgY29tcHV0ZWRfc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKG5vZGUpO1xuXHRpZiAoY29tcHV0ZWRfc3R5bGUucG9zaXRpb24gPT09ICdzdGF0aWMnKSB7XG5cdFx0bm9kZS5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG5cdH1cblx0Y29uc3QgaWZyYW1lID0gZWxlbWVudCgnaWZyYW1lJyk7XG5cdGlmcmFtZS5zZXRBdHRyaWJ1dGUoXG5cdFx0J3N0eWxlJyxcblx0XHQnZGlzcGxheTogYmxvY2s7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAwOyBsZWZ0OiAwOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOyAnICtcblx0XHRcdCdvdmVyZmxvdzogaGlkZGVuOyBib3JkZXI6IDA7IG9wYWNpdHk6IDA7IHBvaW50ZXItZXZlbnRzOiBub25lOyB6LWluZGV4OiAtMTsnXG5cdCk7XG5cdGlmcmFtZS5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKTtcblx0aWZyYW1lLnRhYkluZGV4ID0gLTE7XG5cdGNvbnN0IGNyb3Nzb3JpZ2luID0gaXNfY3Jvc3NvcmlnaW4oKTtcblxuXHQvKipcblx0ICogQHR5cGUgeygpID0+IHZvaWR9XG5cdCAqL1xuXHRsZXQgdW5zdWJzY3JpYmU7XG5cdGlmIChjcm9zc29yaWdpbikge1xuXHRcdGlmcmFtZS5zcmMgPSBcImRhdGE6dGV4dC9odG1sLDxzY3JpcHQ+b25yZXNpemU9ZnVuY3Rpb24oKXtwYXJlbnQucG9zdE1lc3NhZ2UoMCwnKicpfTwvc2NyaXB0PlwiO1xuXHRcdHVuc3Vic2NyaWJlID0gbGlzdGVuKFxuXHRcdFx0d2luZG93LFxuXHRcdFx0J21lc3NhZ2UnLFxuXHRcdFx0LyoqIEBwYXJhbSB7TWVzc2FnZUV2ZW50fSBldmVudCAqLyAoZXZlbnQpID0+IHtcblx0XHRcdFx0aWYgKGV2ZW50LnNvdXJjZSA9PT0gaWZyYW1lLmNvbnRlbnRXaW5kb3cpIGZuKCk7XG5cdFx0XHR9XG5cdFx0KTtcblx0fSBlbHNlIHtcblx0XHRpZnJhbWUuc3JjID0gJ2Fib3V0OmJsYW5rJztcblx0XHRpZnJhbWUub25sb2FkID0gKCkgPT4ge1xuXHRcdFx0dW5zdWJzY3JpYmUgPSBsaXN0ZW4oaWZyYW1lLmNvbnRlbnRXaW5kb3csICdyZXNpemUnLCBmbik7XG5cdFx0XHQvLyBtYWtlIHN1cmUgYW4gaW5pdGlhbCByZXNpemUgZXZlbnQgaXMgZmlyZWQgX2FmdGVyXyB0aGUgaWZyYW1lIGlzIGxvYWRlZCAod2hpY2ggaXMgYXN5bmNocm9ub3VzKVxuXHRcdFx0Ly8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zdmVsdGVqcy9zdmVsdGUvaXNzdWVzLzQyMzNcblx0XHRcdGZuKCk7XG5cdFx0fTtcblx0fVxuXHRhcHBlbmQobm9kZSwgaWZyYW1lKTtcblx0cmV0dXJuICgpID0+IHtcblx0XHRpZiAoY3Jvc3NvcmlnaW4pIHtcblx0XHRcdHVuc3Vic2NyaWJlKCk7XG5cdFx0fSBlbHNlIGlmICh1bnN1YnNjcmliZSAmJiBpZnJhbWUuY29udGVudFdpbmRvdykge1xuXHRcdFx0dW5zdWJzY3JpYmUoKTtcblx0XHR9XG5cdFx0ZGV0YWNoKGlmcmFtZSk7XG5cdH07XG59XG5leHBvcnQgY29uc3QgcmVzaXplX29ic2VydmVyX2NvbnRlbnRfYm94ID0gLyogQF9fUFVSRV9fICovIG5ldyBSZXNpemVPYnNlcnZlclNpbmdsZXRvbih7XG5cdGJveDogJ2NvbnRlbnQtYm94J1xufSk7XG5leHBvcnQgY29uc3QgcmVzaXplX29ic2VydmVyX2JvcmRlcl9ib3ggPSAvKiBAX19QVVJFX18gKi8gbmV3IFJlc2l6ZU9ic2VydmVyU2luZ2xldG9uKHtcblx0Ym94OiAnYm9yZGVyLWJveCdcbn0pO1xuZXhwb3J0IGNvbnN0IHJlc2l6ZV9vYnNlcnZlcl9kZXZpY2VfcGl4ZWxfY29udGVudF9ib3ggPSAvKiBAX19QVVJFX18gKi8gbmV3IFJlc2l6ZU9ic2VydmVyU2luZ2xldG9uKFxuXHR7IGJveDogJ2RldmljZS1waXhlbC1jb250ZW50LWJveCcgfVxuKTtcbmV4cG9ydCB7IFJlc2l6ZU9ic2VydmVyU2luZ2xldG9uIH07XG5cbi8qKlxuICogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlX2NsYXNzKGVsZW1lbnQsIG5hbWUsIHRvZ2dsZSkge1xuXHQvLyBUaGUgYCEhYCBpcyByZXF1aXJlZCBiZWNhdXNlIGFuIGB1bmRlZmluZWRgIGZsYWcgbWVhbnMgZmxpcHBpbmcgdGhlIGN1cnJlbnQgc3RhdGUuXG5cdGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZShuYW1lLCAhIXRvZ2dsZSk7XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gKiBAcGFyYW0ge1R9IFtkZXRhaWxdXG4gKiBAcGFyYW0ge3sgYnViYmxlcz86IGJvb2xlYW4sIGNhbmNlbGFibGU/OiBib29sZWFuIH19IFtvcHRpb25zXVxuICogQHJldHVybnMge0N1c3RvbUV2ZW50PFQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3VzdG9tX2V2ZW50KHR5cGUsIGRldGFpbCwgeyBidWJibGVzID0gZmFsc2UsIGNhbmNlbGFibGUgPSBmYWxzZSB9ID0ge30pIHtcblx0cmV0dXJuIG5ldyBDdXN0b21FdmVudCh0eXBlLCB7IGRldGFpbCwgYnViYmxlcywgY2FuY2VsYWJsZSB9KTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3JcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHBhcmVudFxuICogQHJldHVybnMge0NoaWxkTm9kZUFycmF5fVxuICovXG5leHBvcnQgZnVuY3Rpb24gcXVlcnlfc2VsZWN0b3JfYWxsKHNlbGVjdG9yLCBwYXJlbnQgPSBkb2N1bWVudC5ib2R5KSB7XG5cdHJldHVybiBBcnJheS5mcm9tKHBhcmVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKSk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IG5vZGVJZFxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gaGVhZFxuICogQHJldHVybnMge2FueVtdfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaGVhZF9zZWxlY3Rvcihub2RlSWQsIGhlYWQpIHtcblx0Y29uc3QgcmVzdWx0ID0gW107XG5cdGxldCBzdGFydGVkID0gMDtcblx0Zm9yIChjb25zdCBub2RlIG9mIGhlYWQuY2hpbGROb2Rlcykge1xuXHRcdGlmIChub2RlLm5vZGVUeXBlID09PSA4IC8qIGNvbW1lbnQgbm9kZSAqLykge1xuXHRcdFx0Y29uc3QgY29tbWVudCA9IG5vZGUudGV4dENvbnRlbnQudHJpbSgpO1xuXHRcdFx0aWYgKGNvbW1lbnQgPT09IGBIRUFEXyR7bm9kZUlkfV9FTkRgKSB7XG5cdFx0XHRcdHN0YXJ0ZWQgLT0gMTtcblx0XHRcdFx0cmVzdWx0LnB1c2gobm9kZSk7XG5cdFx0XHR9IGVsc2UgaWYgKGNvbW1lbnQgPT09IGBIRUFEXyR7bm9kZUlkfV9TVEFSVGApIHtcblx0XHRcdFx0c3RhcnRlZCArPSAxO1xuXHRcdFx0XHRyZXN1bHQucHVzaChub2RlKTtcblx0XHRcdH1cblx0XHR9IGVsc2UgaWYgKHN0YXJ0ZWQgPiAwKSB7XG5cdFx0XHRyZXN1bHQucHVzaChub2RlKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHJlc3VsdDtcbn1cbi8qKiAqL1xuZXhwb3J0IGNsYXNzIEh0bWxUYWcge1xuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGRlZmF1bHQgZmFsc2Vcblx0ICovXG5cdGlzX3N2ZyA9IGZhbHNlO1xuXHQvKiogcGFyZW50IGZvciBjcmVhdGluZyBub2RlICovXG5cdGUgPSB1bmRlZmluZWQ7XG5cdC8qKiBodG1sIHRhZyBub2RlcyAqL1xuXHRuID0gdW5kZWZpbmVkO1xuXHQvKiogdGFyZ2V0ICovXG5cdHQgPSB1bmRlZmluZWQ7XG5cdC8qKiBhbmNob3IgKi9cblx0YSA9IHVuZGVmaW5lZDtcblx0Y29uc3RydWN0b3IoaXNfc3ZnID0gZmFsc2UpIHtcblx0XHR0aGlzLmlzX3N2ZyA9IGlzX3N2Zztcblx0XHR0aGlzLmUgPSB0aGlzLm4gPSBudWxsO1xuXHR9XG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBodG1sXG5cdCAqIEByZXR1cm5zIHt2b2lkfVxuXHQgKi9cblx0YyhodG1sKSB7XG5cdFx0dGhpcy5oKGh0bWwpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBodG1sXG5cdCAqIEBwYXJhbSB7SFRNTEVsZW1lbnQgfCBTVkdFbGVtZW50fSB0YXJnZXRcblx0ICogQHBhcmFtIHtIVE1MRWxlbWVudCB8IFNWR0VsZW1lbnR9IGFuY2hvclxuXHQgKiBAcmV0dXJucyB7dm9pZH1cblx0ICovXG5cdG0oaHRtbCwgdGFyZ2V0LCBhbmNob3IgPSBudWxsKSB7XG5cdFx0aWYgKCF0aGlzLmUpIHtcblx0XHRcdGlmICh0aGlzLmlzX3N2Zylcblx0XHRcdFx0dGhpcy5lID0gc3ZnX2VsZW1lbnQoLyoqIEB0eXBlIHtrZXlvZiBTVkdFbGVtZW50VGFnTmFtZU1hcH0gKi8gKHRhcmdldC5ub2RlTmFtZSkpO1xuXHRcdFx0LyoqICM3MzY0ICB0YXJnZXQgZm9yIDx0ZW1wbGF0ZT4gbWF5IGJlIHByb3ZpZGVkIGFzICNkb2N1bWVudC1mcmFnbWVudCgxMSkgKi8gZWxzZVxuXHRcdFx0XHR0aGlzLmUgPSBlbGVtZW50KFxuXHRcdFx0XHRcdC8qKiBAdHlwZSB7a2V5b2YgSFRNTEVsZW1lbnRUYWdOYW1lTWFwfSAqLyAoXG5cdFx0XHRcdFx0XHR0YXJnZXQubm9kZVR5cGUgPT09IDExID8gJ1RFTVBMQVRFJyA6IHRhcmdldC5ub2RlTmFtZVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KTtcblx0XHRcdHRoaXMudCA9XG5cdFx0XHRcdHRhcmdldC50YWdOYW1lICE9PSAnVEVNUExBVEUnXG5cdFx0XHRcdFx0PyB0YXJnZXRcblx0XHRcdFx0XHQ6IC8qKiBAdHlwZSB7SFRNTFRlbXBsYXRlRWxlbWVudH0gKi8gKHRhcmdldCkuY29udGVudDtcblx0XHRcdHRoaXMuYyhodG1sKTtcblx0XHR9XG5cdFx0dGhpcy5pKGFuY2hvcik7XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtzdHJpbmd9IGh0bWxcblx0ICogQHJldHVybnMge3ZvaWR9XG5cdCAqL1xuXHRoKGh0bWwpIHtcblx0XHR0aGlzLmUuaW5uZXJIVE1MID0gaHRtbDtcblx0XHR0aGlzLm4gPSBBcnJheS5mcm9tKFxuXHRcdFx0dGhpcy5lLm5vZGVOYW1lID09PSAnVEVNUExBVEUnID8gdGhpcy5lLmNvbnRlbnQuY2hpbGROb2RlcyA6IHRoaXMuZS5jaGlsZE5vZGVzXG5cdFx0KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcmV0dXJucyB7dm9pZH0gKi9cblx0aShhbmNob3IpIHtcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubi5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdFx0aW5zZXJ0KHRoaXMudCwgdGhpcy5uW2ldLCBhbmNob3IpO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge3N0cmluZ30gaHRtbFxuXHQgKiBAcmV0dXJucyB7dm9pZH1cblx0ICovXG5cdHAoaHRtbCkge1xuXHRcdHRoaXMuZCgpO1xuXHRcdHRoaXMuaChodG1sKTtcblx0XHR0aGlzLmkodGhpcy5hKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcmV0dXJucyB7dm9pZH0gKi9cblx0ZCgpIHtcblx0XHR0aGlzLm4uZm9yRWFjaChkZXRhY2gpO1xuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBIdG1sVGFnSHlkcmF0aW9uIGV4dGVuZHMgSHRtbFRhZyB7XG5cdC8qKiBAdHlwZSB7RWxlbWVudFtdfSBoeWRyYXRpb24gY2xhaW1lZCBub2RlcyAqL1xuXHRsID0gdW5kZWZpbmVkO1xuXG5cdGNvbnN0cnVjdG9yKGlzX3N2ZyA9IGZhbHNlLCBjbGFpbWVkX25vZGVzKSB7XG5cdFx0c3VwZXIoaXNfc3ZnKTtcblx0XHR0aGlzLmUgPSB0aGlzLm4gPSBudWxsO1xuXHRcdHRoaXMubCA9IGNsYWltZWRfbm9kZXM7XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtzdHJpbmd9IGh0bWxcblx0ICogQHJldHVybnMge3ZvaWR9XG5cdCAqL1xuXHRjKGh0bWwpIHtcblx0XHRpZiAodGhpcy5sKSB7XG5cdFx0XHR0aGlzLm4gPSB0aGlzLmw7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN1cGVyLmMoaHRtbCk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIEByZXR1cm5zIHt2b2lkfSAqL1xuXHRpKGFuY2hvcikge1xuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5uLmxlbmd0aDsgaSArPSAxKSB7XG5cdFx0XHRpbnNlcnRfaHlkcmF0aW9uKHRoaXMudCwgdGhpcy5uW2ldLCBhbmNob3IpO1xuXHRcdH1cblx0fVxufVxuXG4vKipcbiAqIEBwYXJhbSB7TmFtZWROb2RlTWFwfSBhdHRyaWJ1dGVzXG4gKiBAcmV0dXJucyB7e319XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhdHRyaWJ1dGVfdG9fb2JqZWN0KGF0dHJpYnV0ZXMpIHtcblx0Y29uc3QgcmVzdWx0ID0ge307XG5cdGZvciAoY29uc3QgYXR0cmlidXRlIG9mIGF0dHJpYnV0ZXMpIHtcblx0XHRyZXN1bHRbYXR0cmlidXRlLm5hbWVdID0gYXR0cmlidXRlLnZhbHVlO1xuXHR9XG5cdHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICogQHJldHVybnMge3t9fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0X2N1c3RvbV9lbGVtZW50c19zbG90cyhlbGVtZW50KSB7XG5cdGNvbnN0IHJlc3VsdCA9IHt9O1xuXHRlbGVtZW50LmNoaWxkTm9kZXMuZm9yRWFjaChcblx0XHQvKiogQHBhcmFtIHtFbGVtZW50fSBub2RlICovIChub2RlKSA9PiB7XG5cdFx0XHRyZXN1bHRbbm9kZS5zbG90IHx8ICdkZWZhdWx0J10gPSB0cnVlO1xuXHRcdH1cblx0KTtcblx0cmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnN0cnVjdF9zdmVsdGVfY29tcG9uZW50KGNvbXBvbmVudCwgcHJvcHMpIHtcblx0cmV0dXJuIG5ldyBjb21wb25lbnQocHJvcHMpO1xufVxuXG4vKipcbiAqIEB0eXBlZGVmIHtOb2RlICYge1xuICogXHRjbGFpbV9vcmRlcj86IG51bWJlcjtcbiAqIFx0aHlkcmF0ZV9pbml0PzogdHJ1ZTtcbiAqIFx0YWN0dWFsX2VuZF9jaGlsZD86IE5vZGVFeDtcbiAqIFx0Y2hpbGROb2RlczogTm9kZUxpc3RPZjxOb2RlRXg+O1xuICogfX0gTm9kZUV4XG4gKi9cblxuLyoqIEB0eXBlZGVmIHtDaGlsZE5vZGUgJiBOb2RlRXh9IENoaWxkTm9kZUV4ICovXG5cbi8qKiBAdHlwZWRlZiB7Tm9kZUV4ICYgeyBjbGFpbV9vcmRlcjogbnVtYmVyIH19IE5vZGVFeDIgKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7Q2hpbGROb2RlRXhbXSAmIHtcbiAqIFx0Y2xhaW1faW5mbz86IHtcbiAqIFx0XHRsYXN0X2luZGV4OiBudW1iZXI7XG4gKiBcdFx0dG90YWxfY2xhaW1lZDogbnVtYmVyO1xuICogXHR9O1xuICogfX0gQ2hpbGROb2RlQXJyYXlcbiAqL1xuIiwiaW1wb3J0IHsgY3VzdG9tX2V2ZW50IH0gZnJvbSAnLi9kb20uanMnO1xuXG5leHBvcnQgbGV0IGN1cnJlbnRfY29tcG9uZW50O1xuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gc2V0X2N1cnJlbnRfY29tcG9uZW50KGNvbXBvbmVudCkge1xuXHRjdXJyZW50X2NvbXBvbmVudCA9IGNvbXBvbmVudDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldF9jdXJyZW50X2NvbXBvbmVudCgpIHtcblx0aWYgKCFjdXJyZW50X2NvbXBvbmVudCkgdGhyb3cgbmV3IEVycm9yKCdGdW5jdGlvbiBjYWxsZWQgb3V0c2lkZSBjb21wb25lbnQgaW5pdGlhbGl6YXRpb24nKTtcblx0cmV0dXJuIGN1cnJlbnRfY29tcG9uZW50O1xufVxuXG4vKipcbiAqIFNjaGVkdWxlcyBhIGNhbGxiYWNrIHRvIHJ1biBpbW1lZGlhdGVseSBiZWZvcmUgdGhlIGNvbXBvbmVudCBpcyB1cGRhdGVkIGFmdGVyIGFueSBzdGF0ZSBjaGFuZ2UuXG4gKlxuICogVGhlIGZpcnN0IHRpbWUgdGhlIGNhbGxiYWNrIHJ1bnMgd2lsbCBiZSBiZWZvcmUgdGhlIGluaXRpYWwgYG9uTW91bnRgXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI2JlZm9yZXVwZGF0ZVxuICogQHBhcmFtIHsoKSA9PiBhbnl9IGZuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJlZm9yZVVwZGF0ZShmbikge1xuXHRnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5iZWZvcmVfdXBkYXRlLnB1c2goZm4pO1xufVxuXG4vKipcbiAqIFRoZSBgb25Nb3VudGAgZnVuY3Rpb24gc2NoZWR1bGVzIGEgY2FsbGJhY2sgdG8gcnVuIGFzIHNvb24gYXMgdGhlIGNvbXBvbmVudCBoYXMgYmVlbiBtb3VudGVkIHRvIHRoZSBET00uXG4gKiBJdCBtdXN0IGJlIGNhbGxlZCBkdXJpbmcgdGhlIGNvbXBvbmVudCdzIGluaXRpYWxpc2F0aW9uIChidXQgZG9lc24ndCBuZWVkIHRvIGxpdmUgKmluc2lkZSogdGhlIGNvbXBvbmVudDtcbiAqIGl0IGNhbiBiZSBjYWxsZWQgZnJvbSBhbiBleHRlcm5hbCBtb2R1bGUpLlxuICpcbiAqIElmIGEgZnVuY3Rpb24gaXMgcmV0dXJuZWQgX3N5bmNocm9ub3VzbHlfIGZyb20gYG9uTW91bnRgLCBpdCB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkLlxuICpcbiAqIGBvbk1vdW50YCBkb2VzIG5vdCBydW4gaW5zaWRlIGEgW3NlcnZlci1zaWRlIGNvbXBvbmVudF0oL2RvY3MjcnVuLXRpbWUtc2VydmVyLXNpZGUtY29tcG9uZW50LWFwaSkuXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI29ubW91bnRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0geygpID0+IGltcG9ydCgnLi9wcml2YXRlLmpzJykuTm90RnVuY3Rpb248VD4gfCBQcm9taXNlPGltcG9ydCgnLi9wcml2YXRlLmpzJykuTm90RnVuY3Rpb248VD4+IHwgKCgpID0+IGFueSl9IGZuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoZm4pIHtcblx0Z2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQub25fbW91bnQucHVzaChmbik7XG59XG5cbi8qKlxuICogU2NoZWR1bGVzIGEgY2FsbGJhY2sgdG8gcnVuIGltbWVkaWF0ZWx5IGFmdGVyIHRoZSBjb21wb25lbnQgaGFzIGJlZW4gdXBkYXRlZC5cbiAqXG4gKiBUaGUgZmlyc3QgdGltZSB0aGUgY2FsbGJhY2sgcnVucyB3aWxsIGJlIGFmdGVyIHRoZSBpbml0aWFsIGBvbk1vdW50YFxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZSNhZnRlcnVwZGF0ZVxuICogQHBhcmFtIHsoKSA9PiBhbnl9IGZuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFmdGVyVXBkYXRlKGZuKSB7XG5cdGdldF9jdXJyZW50X2NvbXBvbmVudCgpLiQkLmFmdGVyX3VwZGF0ZS5wdXNoKGZuKTtcbn1cblxuLyoqXG4gKiBTY2hlZHVsZXMgYSBjYWxsYmFjayB0byBydW4gaW1tZWRpYXRlbHkgYmVmb3JlIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkLlxuICpcbiAqIE91dCBvZiBgb25Nb3VudGAsIGBiZWZvcmVVcGRhdGVgLCBgYWZ0ZXJVcGRhdGVgIGFuZCBgb25EZXN0cm95YCwgdGhpcyBpcyB0aGVcbiAqIG9ubHkgb25lIHRoYXQgcnVucyBpbnNpZGUgYSBzZXJ2ZXItc2lkZSBjb21wb25lbnQuXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI29uZGVzdHJveVxuICogQHBhcmFtIHsoKSA9PiBhbnl9IGZuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uRGVzdHJveShmbikge1xuXHRnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5vbl9kZXN0cm95LnB1c2goZm4pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYW4gZXZlbnQgZGlzcGF0Y2hlciB0aGF0IGNhbiBiZSB1c2VkIHRvIGRpc3BhdGNoIFtjb21wb25lbnQgZXZlbnRzXSgvZG9jcyN0ZW1wbGF0ZS1zeW50YXgtY29tcG9uZW50LWRpcmVjdGl2ZXMtb24tZXZlbnRuYW1lKS5cbiAqIEV2ZW50IGRpc3BhdGNoZXJzIGFyZSBmdW5jdGlvbnMgdGhhdCBjYW4gdGFrZSB0d28gYXJndW1lbnRzOiBgbmFtZWAgYW5kIGBkZXRhaWxgLlxuICpcbiAqIENvbXBvbmVudCBldmVudHMgY3JlYXRlZCB3aXRoIGBjcmVhdGVFdmVudERpc3BhdGNoZXJgIGNyZWF0ZSBhXG4gKiBbQ3VzdG9tRXZlbnRdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9DdXN0b21FdmVudCkuXG4gKiBUaGVzZSBldmVudHMgZG8gbm90IFtidWJibGVdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvTGVhcm4vSmF2YVNjcmlwdC9CdWlsZGluZ19ibG9ja3MvRXZlbnRzI0V2ZW50X2J1YmJsaW5nX2FuZF9jYXB0dXJlKS5cbiAqIFRoZSBgZGV0YWlsYCBhcmd1bWVudCBjb3JyZXNwb25kcyB0byB0aGUgW0N1c3RvbUV2ZW50LmRldGFpbF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0N1c3RvbUV2ZW50L2RldGFpbClcbiAqIHByb3BlcnR5IGFuZCBjYW4gY29udGFpbiBhbnkgdHlwZSBvZiBkYXRhLlxuICpcbiAqIFRoZSBldmVudCBkaXNwYXRjaGVyIGNhbiBiZSB0eXBlZCB0byBuYXJyb3cgdGhlIGFsbG93ZWQgZXZlbnQgbmFtZXMgYW5kIHRoZSB0eXBlIG9mIHRoZSBgZGV0YWlsYCBhcmd1bWVudDpcbiAqIGBgYHRzXG4gKiBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcjx7XG4gKiAgbG9hZGVkOiBuZXZlcjsgLy8gZG9lcyBub3QgdGFrZSBhIGRldGFpbCBhcmd1bWVudFxuICogIGNoYW5nZTogc3RyaW5nOyAvLyB0YWtlcyBhIGRldGFpbCBhcmd1bWVudCBvZiB0eXBlIHN0cmluZywgd2hpY2ggaXMgcmVxdWlyZWRcbiAqICBvcHRpb25hbDogbnVtYmVyIHwgbnVsbDsgLy8gdGFrZXMgYW4gb3B0aW9uYWwgZGV0YWlsIGFyZ3VtZW50IG9mIHR5cGUgbnVtYmVyXG4gKiB9PigpO1xuICogYGBgXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI2NyZWF0ZWV2ZW50ZGlzcGF0Y2hlclxuICogQHRlbXBsYXRlIHtSZWNvcmQ8c3RyaW5nLCBhbnk+fSBbRXZlbnRNYXA9YW55XVxuICogQHJldHVybnMge2ltcG9ydCgnLi9wdWJsaWMuanMnKS5FdmVudERpc3BhdGNoZXI8RXZlbnRNYXA+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCkge1xuXHRjb25zdCBjb21wb25lbnQgPSBnZXRfY3VycmVudF9jb21wb25lbnQoKTtcblx0cmV0dXJuICh0eXBlLCBkZXRhaWwsIHsgY2FuY2VsYWJsZSA9IGZhbHNlIH0gPSB7fSkgPT4ge1xuXHRcdGNvbnN0IGNhbGxiYWNrcyA9IGNvbXBvbmVudC4kJC5jYWxsYmFja3NbdHlwZV07XG5cdFx0aWYgKGNhbGxiYWNrcykge1xuXHRcdFx0Ly8gVE9ETyBhcmUgdGhlcmUgc2l0dWF0aW9ucyB3aGVyZSBldmVudHMgY291bGQgYmUgZGlzcGF0Y2hlZFxuXHRcdFx0Ly8gaW4gYSBzZXJ2ZXIgKG5vbi1ET00pIGVudmlyb25tZW50P1xuXHRcdFx0Y29uc3QgZXZlbnQgPSBjdXN0b21fZXZlbnQoLyoqIEB0eXBlIHtzdHJpbmd9ICovICh0eXBlKSwgZGV0YWlsLCB7IGNhbmNlbGFibGUgfSk7XG5cdFx0XHRjYWxsYmFja3Muc2xpY2UoKS5mb3JFYWNoKChmbikgPT4ge1xuXHRcdFx0XHRmbi5jYWxsKGNvbXBvbmVudCwgZXZlbnQpO1xuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQ7XG5cdFx0fVxuXHRcdHJldHVybiB0cnVlO1xuXHR9O1xufVxuXG4vKipcbiAqIEFzc29jaWF0ZXMgYW4gYXJiaXRyYXJ5IGBjb250ZXh0YCBvYmplY3Qgd2l0aCB0aGUgY3VycmVudCBjb21wb25lbnQgYW5kIHRoZSBzcGVjaWZpZWQgYGtleWBcbiAqIGFuZCByZXR1cm5zIHRoYXQgb2JqZWN0LiBUaGUgY29udGV4dCBpcyB0aGVuIGF2YWlsYWJsZSB0byBjaGlsZHJlbiBvZiB0aGUgY29tcG9uZW50XG4gKiAoaW5jbHVkaW5nIHNsb3R0ZWQgY29udGVudCkgd2l0aCBgZ2V0Q29udGV4dGAuXG4gKlxuICogTGlrZSBsaWZlY3ljbGUgZnVuY3Rpb25zLCB0aGlzIG11c3QgYmUgY2FsbGVkIGR1cmluZyBjb21wb25lbnQgaW5pdGlhbGlzYXRpb24uXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI3NldGNvbnRleHRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2FueX0ga2V5XG4gKiBAcGFyYW0ge1R9IGNvbnRleHRcbiAqIEByZXR1cm5zIHtUfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0Q29udGV4dChrZXksIGNvbnRleHQpIHtcblx0Z2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQuY29udGV4dC5zZXQoa2V5LCBjb250ZXh0KTtcblx0cmV0dXJuIGNvbnRleHQ7XG59XG5cbi8qKlxuICogUmV0cmlldmVzIHRoZSBjb250ZXh0IHRoYXQgYmVsb25ncyB0byB0aGUgY2xvc2VzdCBwYXJlbnQgY29tcG9uZW50IHdpdGggdGhlIHNwZWNpZmllZCBga2V5YC5cbiAqIE11c3QgYmUgY2FsbGVkIGR1cmluZyBjb21wb25lbnQgaW5pdGlhbGlzYXRpb24uXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI2dldGNvbnRleHRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2FueX0ga2V5XG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRleHQoa2V5KSB7XG5cdHJldHVybiBnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5jb250ZXh0LmdldChrZXkpO1xufVxuXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgd2hvbGUgY29udGV4dCBtYXAgdGhhdCBiZWxvbmdzIHRvIHRoZSBjbG9zZXN0IHBhcmVudCBjb21wb25lbnQuXG4gKiBNdXN0IGJlIGNhbGxlZCBkdXJpbmcgY29tcG9uZW50IGluaXRpYWxpc2F0aW9uLiBVc2VmdWwsIGZvciBleGFtcGxlLCBpZiB5b3VcbiAqIHByb2dyYW1tYXRpY2FsbHkgY3JlYXRlIGEgY29tcG9uZW50IGFuZCB3YW50IHRvIHBhc3MgdGhlIGV4aXN0aW5nIGNvbnRleHQgdG8gaXQuXG4gKlxuICogaHR0cHM6Ly9zdmVsdGUuZGV2L2RvY3Mvc3ZlbHRlI2dldGFsbGNvbnRleHRzXG4gKiBAdGVtcGxhdGUge01hcDxhbnksIGFueT59IFtUPU1hcDxhbnksIGFueT5dXG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFsbENvbnRleHRzKCkge1xuXHRyZXR1cm4gZ2V0X2N1cnJlbnRfY29tcG9uZW50KCkuJCQuY29udGV4dDtcbn1cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBhIGdpdmVuIGBrZXlgIGhhcyBiZWVuIHNldCBpbiB0aGUgY29udGV4dCBvZiBhIHBhcmVudCBjb21wb25lbnQuXG4gKiBNdXN0IGJlIGNhbGxlZCBkdXJpbmcgY29tcG9uZW50IGluaXRpYWxpc2F0aW9uLlxuICpcbiAqIGh0dHBzOi8vc3ZlbHRlLmRldi9kb2NzL3N2ZWx0ZSNoYXNjb250ZXh0XG4gKiBAcGFyYW0ge2FueX0ga2V5XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0NvbnRleHQoa2V5KSB7XG5cdHJldHVybiBnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5jb250ZXh0LmhhcyhrZXkpO1xufVxuXG4vLyBUT0RPIGZpZ3VyZSBvdXQgaWYgd2Ugc3RpbGwgd2FudCB0byBzdXBwb3J0XG4vLyBzaG9ydGhhbmQgZXZlbnRzLCBvciBpZiB3ZSB3YW50IHRvIGltcGxlbWVudFxuLy8gYSByZWFsIGJ1YmJsaW5nIG1lY2hhbmlzbVxuLyoqXG4gKiBAcGFyYW0gY29tcG9uZW50XG4gKiBAcGFyYW0gZXZlbnRcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYnViYmxlKGNvbXBvbmVudCwgZXZlbnQpIHtcblx0Y29uc3QgY2FsbGJhY2tzID0gY29tcG9uZW50LiQkLmNhbGxiYWNrc1tldmVudC50eXBlXTtcblx0aWYgKGNhbGxiYWNrcykge1xuXHRcdC8vIEB0cy1pZ25vcmVcblx0XHRjYWxsYmFja3Muc2xpY2UoKS5mb3JFYWNoKChmbikgPT4gZm4uY2FsbCh0aGlzLCBldmVudCkpO1xuXHR9XG59XG4iLCJpbXBvcnQgeyBydW5fYWxsIH0gZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgeyBjdXJyZW50X2NvbXBvbmVudCwgc2V0X2N1cnJlbnRfY29tcG9uZW50IH0gZnJvbSAnLi9saWZlY3ljbGUuanMnO1xuXG5leHBvcnQgY29uc3QgZGlydHlfY29tcG9uZW50cyA9IFtdO1xuZXhwb3J0IGNvbnN0IGludHJvcyA9IHsgZW5hYmxlZDogZmFsc2UgfTtcbmV4cG9ydCBjb25zdCBiaW5kaW5nX2NhbGxiYWNrcyA9IFtdO1xuXG5sZXQgcmVuZGVyX2NhbGxiYWNrcyA9IFtdO1xuXG5jb25zdCBmbHVzaF9jYWxsYmFja3MgPSBbXTtcblxuY29uc3QgcmVzb2x2ZWRfcHJvbWlzZSA9IC8qIEBfX1BVUkVfXyAqLyBQcm9taXNlLnJlc29sdmUoKTtcblxubGV0IHVwZGF0ZV9zY2hlZHVsZWQgPSBmYWxzZTtcblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNjaGVkdWxlX3VwZGF0ZSgpIHtcblx0aWYgKCF1cGRhdGVfc2NoZWR1bGVkKSB7XG5cdFx0dXBkYXRlX3NjaGVkdWxlZCA9IHRydWU7XG5cdFx0cmVzb2x2ZWRfcHJvbWlzZS50aGVuKGZsdXNoKTtcblx0fVxufVxuXG4vKiogQHJldHVybnMge1Byb21pc2U8dm9pZD59ICovXG5leHBvcnQgZnVuY3Rpb24gdGljaygpIHtcblx0c2NoZWR1bGVfdXBkYXRlKCk7XG5cdHJldHVybiByZXNvbHZlZF9wcm9taXNlO1xufVxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gYWRkX3JlbmRlcl9jYWxsYmFjayhmbikge1xuXHRyZW5kZXJfY2FsbGJhY2tzLnB1c2goZm4pO1xufVxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gYWRkX2ZsdXNoX2NhbGxiYWNrKGZuKSB7XG5cdGZsdXNoX2NhbGxiYWNrcy5wdXNoKGZuKTtcbn1cblxuLy8gZmx1c2goKSBjYWxscyBjYWxsYmFja3MgaW4gdGhpcyBvcmRlcjpcbi8vIDEuIEFsbCBiZWZvcmVVcGRhdGUgY2FsbGJhY2tzLCBpbiBvcmRlcjogcGFyZW50cyBiZWZvcmUgY2hpbGRyZW5cbi8vIDIuIEFsbCBiaW5kOnRoaXMgY2FsbGJhY2tzLCBpbiByZXZlcnNlIG9yZGVyOiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cy5cbi8vIDMuIEFsbCBhZnRlclVwZGF0ZSBjYWxsYmFja3MsIGluIG9yZGVyOiBwYXJlbnRzIGJlZm9yZSBjaGlsZHJlbi4gRVhDRVBUXG4vLyAgICBmb3IgYWZ0ZXJVcGRhdGVzIGNhbGxlZCBkdXJpbmcgdGhlIGluaXRpYWwgb25Nb3VudCwgd2hpY2ggYXJlIGNhbGxlZCBpblxuLy8gICAgcmV2ZXJzZSBvcmRlcjogY2hpbGRyZW4gYmVmb3JlIHBhcmVudHMuXG4vLyBTaW5jZSBjYWxsYmFja3MgbWlnaHQgdXBkYXRlIGNvbXBvbmVudCB2YWx1ZXMsIHdoaWNoIGNvdWxkIHRyaWdnZXIgYW5vdGhlclxuLy8gY2FsbCB0byBmbHVzaCgpLCB0aGUgZm9sbG93aW5nIHN0ZXBzIGd1YXJkIGFnYWluc3QgdGhpczpcbi8vIDEuIER1cmluZyBiZWZvcmVVcGRhdGUsIGFueSB1cGRhdGVkIGNvbXBvbmVudHMgd2lsbCBiZSBhZGRlZCB0byB0aGVcbi8vICAgIGRpcnR5X2NvbXBvbmVudHMgYXJyYXkgYW5kIHdpbGwgY2F1c2UgYSByZWVudHJhbnQgY2FsbCB0byBmbHVzaCgpLiBCZWNhdXNlXG4vLyAgICB0aGUgZmx1c2ggaW5kZXggaXMga2VwdCBvdXRzaWRlIHRoZSBmdW5jdGlvbiwgdGhlIHJlZW50cmFudCBjYWxsIHdpbGwgcGlja1xuLy8gICAgdXAgd2hlcmUgdGhlIGVhcmxpZXIgY2FsbCBsZWZ0IG9mZiBhbmQgZ28gdGhyb3VnaCBhbGwgZGlydHkgY29tcG9uZW50cy4gVGhlXG4vLyAgICBjdXJyZW50X2NvbXBvbmVudCB2YWx1ZSBpcyBzYXZlZCBhbmQgcmVzdG9yZWQgc28gdGhhdCB0aGUgcmVlbnRyYW50IGNhbGwgd2lsbFxuLy8gICAgbm90IGludGVyZmVyZSB3aXRoIHRoZSBcInBhcmVudFwiIGZsdXNoKCkgY2FsbC5cbi8vIDIuIGJpbmQ6dGhpcyBjYWxsYmFja3MgY2Fubm90IHRyaWdnZXIgbmV3IGZsdXNoKCkgY2FsbHMuXG4vLyAzLiBEdXJpbmcgYWZ0ZXJVcGRhdGUsIGFueSB1cGRhdGVkIGNvbXBvbmVudHMgd2lsbCBOT1QgaGF2ZSB0aGVpciBhZnRlclVwZGF0ZVxuLy8gICAgY2FsbGJhY2sgY2FsbGVkIGEgc2Vjb25kIHRpbWU7IHRoZSBzZWVuX2NhbGxiYWNrcyBzZXQsIG91dHNpZGUgdGhlIGZsdXNoKClcbi8vICAgIGZ1bmN0aW9uLCBndWFyYW50ZWVzIHRoaXMgYmVoYXZpb3IuXG5jb25zdCBzZWVuX2NhbGxiYWNrcyA9IG5ldyBTZXQoKTtcblxubGV0IGZsdXNoaWR4ID0gMDsgLy8gRG8gKm5vdCogbW92ZSB0aGlzIGluc2lkZSB0aGUgZmx1c2goKSBmdW5jdGlvblxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gZmx1c2goKSB7XG5cdC8vIERvIG5vdCByZWVudGVyIGZsdXNoIHdoaWxlIGRpcnR5IGNvbXBvbmVudHMgYXJlIHVwZGF0ZWQsIGFzIHRoaXMgY2FuXG5cdC8vIHJlc3VsdCBpbiBhbiBpbmZpbml0ZSBsb29wLiBJbnN0ZWFkLCBsZXQgdGhlIGlubmVyIGZsdXNoIGhhbmRsZSBpdC5cblx0Ly8gUmVlbnRyYW5jeSBpcyBvayBhZnRlcndhcmRzIGZvciBiaW5kaW5ncyBldGMuXG5cdGlmIChmbHVzaGlkeCAhPT0gMCkge1xuXHRcdHJldHVybjtcblx0fVxuXHRjb25zdCBzYXZlZF9jb21wb25lbnQgPSBjdXJyZW50X2NvbXBvbmVudDtcblx0ZG8ge1xuXHRcdC8vIGZpcnN0LCBjYWxsIGJlZm9yZVVwZGF0ZSBmdW5jdGlvbnNcblx0XHQvLyBhbmQgdXBkYXRlIGNvbXBvbmVudHNcblx0XHR0cnkge1xuXHRcdFx0d2hpbGUgKGZsdXNoaWR4IDwgZGlydHlfY29tcG9uZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0Y29uc3QgY29tcG9uZW50ID0gZGlydHlfY29tcG9uZW50c1tmbHVzaGlkeF07XG5cdFx0XHRcdGZsdXNoaWR4Kys7XG5cdFx0XHRcdHNldF9jdXJyZW50X2NvbXBvbmVudChjb21wb25lbnQpO1xuXHRcdFx0XHR1cGRhdGUoY29tcG9uZW50LiQkKTtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHQvLyByZXNldCBkaXJ0eSBzdGF0ZSB0byBub3QgZW5kIHVwIGluIGEgZGVhZGxvY2tlZCBzdGF0ZSBhbmQgdGhlbiByZXRocm93XG5cdFx0XHRkaXJ0eV9jb21wb25lbnRzLmxlbmd0aCA9IDA7XG5cdFx0XHRmbHVzaGlkeCA9IDA7XG5cdFx0XHR0aHJvdyBlO1xuXHRcdH1cblx0XHRzZXRfY3VycmVudF9jb21wb25lbnQobnVsbCk7XG5cdFx0ZGlydHlfY29tcG9uZW50cy5sZW5ndGggPSAwO1xuXHRcdGZsdXNoaWR4ID0gMDtcblx0XHR3aGlsZSAoYmluZGluZ19jYWxsYmFja3MubGVuZ3RoKSBiaW5kaW5nX2NhbGxiYWNrcy5wb3AoKSgpO1xuXHRcdC8vIHRoZW4sIG9uY2UgY29tcG9uZW50cyBhcmUgdXBkYXRlZCwgY2FsbFxuXHRcdC8vIGFmdGVyVXBkYXRlIGZ1bmN0aW9ucy4gVGhpcyBtYXkgY2F1c2Vcblx0XHQvLyBzdWJzZXF1ZW50IHVwZGF0ZXMuLi5cblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHJlbmRlcl9jYWxsYmFja3MubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRcdGNvbnN0IGNhbGxiYWNrID0gcmVuZGVyX2NhbGxiYWNrc1tpXTtcblx0XHRcdGlmICghc2Vlbl9jYWxsYmFja3MuaGFzKGNhbGxiYWNrKSkge1xuXHRcdFx0XHQvLyAuLi5zbyBndWFyZCBhZ2FpbnN0IGluZmluaXRlIGxvb3BzXG5cdFx0XHRcdHNlZW5fY2FsbGJhY2tzLmFkZChjYWxsYmFjayk7XG5cdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJlbmRlcl9jYWxsYmFja3MubGVuZ3RoID0gMDtcblx0fSB3aGlsZSAoZGlydHlfY29tcG9uZW50cy5sZW5ndGgpO1xuXHR3aGlsZSAoZmx1c2hfY2FsbGJhY2tzLmxlbmd0aCkge1xuXHRcdGZsdXNoX2NhbGxiYWNrcy5wb3AoKSgpO1xuXHR9XG5cdHVwZGF0ZV9zY2hlZHVsZWQgPSBmYWxzZTtcblx0c2Vlbl9jYWxsYmFja3MuY2xlYXIoKTtcblx0c2V0X2N1cnJlbnRfY29tcG9uZW50KHNhdmVkX2NvbXBvbmVudCk7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmZ1bmN0aW9uIHVwZGF0ZSgkJCkge1xuXHRpZiAoJCQuZnJhZ21lbnQgIT09IG51bGwpIHtcblx0XHQkJC51cGRhdGUoKTtcblx0XHRydW5fYWxsKCQkLmJlZm9yZV91cGRhdGUpO1xuXHRcdGNvbnN0IGRpcnR5ID0gJCQuZGlydHk7XG5cdFx0JCQuZGlydHkgPSBbLTFdO1xuXHRcdCQkLmZyYWdtZW50ICYmICQkLmZyYWdtZW50LnAoJCQuY3R4LCBkaXJ0eSk7XG5cdFx0JCQuYWZ0ZXJfdXBkYXRlLmZvckVhY2goYWRkX3JlbmRlcl9jYWxsYmFjayk7XG5cdH1cbn1cblxuLyoqXG4gKiBVc2VmdWwgZm9yIGV4YW1wbGUgdG8gZXhlY3V0ZSByZW1haW5pbmcgYGFmdGVyVXBkYXRlYCBjYWxsYmFja3MgYmVmb3JlIGV4ZWN1dGluZyBgZGVzdHJveWAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9uW119IGZuc1xuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmbHVzaF9yZW5kZXJfY2FsbGJhY2tzKGZucykge1xuXHRjb25zdCBmaWx0ZXJlZCA9IFtdO1xuXHRjb25zdCB0YXJnZXRzID0gW107XG5cdHJlbmRlcl9jYWxsYmFja3MuZm9yRWFjaCgoYykgPT4gKGZucy5pbmRleE9mKGMpID09PSAtMSA/IGZpbHRlcmVkLnB1c2goYykgOiB0YXJnZXRzLnB1c2goYykpKTtcblx0dGFyZ2V0cy5mb3JFYWNoKChjKSA9PiBjKCkpO1xuXHRyZW5kZXJfY2FsbGJhY2tzID0gZmlsdGVyZWQ7XG59XG4iLCJpbXBvcnQgeyBpZGVudGl0eSBhcyBsaW5lYXIsIGlzX2Z1bmN0aW9uLCBub29wLCBydW5fYWxsIH0gZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgeyBub3cgfSBmcm9tICcuL2Vudmlyb25tZW50LmpzJztcbmltcG9ydCB7IGxvb3AgfSBmcm9tICcuL2xvb3AuanMnO1xuaW1wb3J0IHsgY3JlYXRlX3J1bGUsIGRlbGV0ZV9ydWxlIH0gZnJvbSAnLi9zdHlsZV9tYW5hZ2VyLmpzJztcbmltcG9ydCB7IGN1c3RvbV9ldmVudCB9IGZyb20gJy4vZG9tLmpzJztcbmltcG9ydCB7IGFkZF9yZW5kZXJfY2FsbGJhY2sgfSBmcm9tICcuL3NjaGVkdWxlci5qcyc7XG5cbi8qKlxuICogQHR5cGUge1Byb21pc2U8dm9pZD4gfCBudWxsfVxuICovXG5sZXQgcHJvbWlzZTtcblxuLyoqXG4gKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cbiAqL1xuZnVuY3Rpb24gd2FpdCgpIHtcblx0aWYgKCFwcm9taXNlKSB7XG5cdFx0cHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xuXHRcdHByb21pc2UudGhlbigoKSA9PiB7XG5cdFx0XHRwcm9taXNlID0gbnVsbDtcblx0XHR9KTtcblx0fVxuXHRyZXR1cm4gcHJvbWlzZTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IG5vZGVcbiAqIEBwYXJhbSB7SU5UUk8gfCBPVVRSTyB8IGJvb2xlYW59IGRpcmVjdGlvblxuICogQHBhcmFtIHsnc3RhcnQnIHwgJ2VuZCd9IGtpbmRcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiBkaXNwYXRjaChub2RlLCBkaXJlY3Rpb24sIGtpbmQpIHtcblx0bm9kZS5kaXNwYXRjaEV2ZW50KGN1c3RvbV9ldmVudChgJHtkaXJlY3Rpb24gPyAnaW50cm8nIDogJ291dHJvJ30ke2tpbmR9YCkpO1xufVxuXG5jb25zdCBvdXRyb2luZyA9IG5ldyBTZXQoKTtcblxuLyoqXG4gKiBAdHlwZSB7T3V0cm99XG4gKi9cbmxldCBvdXRyb3M7XG5cbi8qKlxuICogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gZ3JvdXBfb3V0cm9zKCkge1xuXHRvdXRyb3MgPSB7XG5cdFx0cjogMCxcblx0XHRjOiBbXSxcblx0XHRwOiBvdXRyb3MgLy8gcGFyZW50IGdyb3VwXG5cdH07XG59XG5cbi8qKlxuICogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tfb3V0cm9zKCkge1xuXHRpZiAoIW91dHJvcy5yKSB7XG5cdFx0cnVuX2FsbChvdXRyb3MuYyk7XG5cdH1cblx0b3V0cm9zID0gb3V0cm9zLnA7XG59XG5cbi8qKlxuICogQHBhcmFtIHtpbXBvcnQoJy4vcHJpdmF0ZS5qcycpLkZyYWdtZW50fSBibG9ja1xuICogQHBhcmFtIHswIHwgMX0gW2xvY2FsXVxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2l0aW9uX2luKGJsb2NrLCBsb2NhbCkge1xuXHRpZiAoYmxvY2sgJiYgYmxvY2suaSkge1xuXHRcdG91dHJvaW5nLmRlbGV0ZShibG9jayk7XG5cdFx0YmxvY2suaShsb2NhbCk7XG5cdH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9wcml2YXRlLmpzJykuRnJhZ21lbnR9IGJsb2NrXG4gKiBAcGFyYW0gezAgfCAxfSBsb2NhbFxuICogQHBhcmFtIHswIHwgMX0gW2RldGFjaF1cbiAqIEBwYXJhbSB7KCkgPT4gdm9pZH0gW2NhbGxiYWNrXVxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2l0aW9uX291dChibG9jaywgbG9jYWwsIGRldGFjaCwgY2FsbGJhY2spIHtcblx0aWYgKGJsb2NrICYmIGJsb2NrLm8pIHtcblx0XHRpZiAob3V0cm9pbmcuaGFzKGJsb2NrKSkgcmV0dXJuO1xuXHRcdG91dHJvaW5nLmFkZChibG9jayk7XG5cdFx0b3V0cm9zLmMucHVzaCgoKSA9PiB7XG5cdFx0XHRvdXRyb2luZy5kZWxldGUoYmxvY2spO1xuXHRcdFx0aWYgKGNhbGxiYWNrKSB7XG5cdFx0XHRcdGlmIChkZXRhY2gpIGJsb2NrLmQoMSk7XG5cdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0YmxvY2subyhsb2NhbCk7XG5cdH0gZWxzZSBpZiAoY2FsbGJhY2spIHtcblx0XHRjYWxsYmFjaygpO1xuXHR9XG59XG5cbi8qKlxuICogQHR5cGUge2ltcG9ydCgnLi4vdHJhbnNpdGlvbi9wdWJsaWMuanMnKS5UcmFuc2l0aW9uQ29uZmlnfVxuICovXG5jb25zdCBudWxsX3RyYW5zaXRpb24gPSB7IGR1cmF0aW9uOiAwIH07XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50ICYgRWxlbWVudENTU0lubGluZVN0eWxlfSBub2RlXG4gKiBAcGFyYW0ge1RyYW5zaXRpb25Gbn0gZm5cbiAqIEBwYXJhbSB7YW55fSBwYXJhbXNcbiAqIEByZXR1cm5zIHt7IHN0YXJ0KCk6IHZvaWQ7IGludmFsaWRhdGUoKTogdm9pZDsgZW5kKCk6IHZvaWQ7IH19XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVfaW5fdHJhbnNpdGlvbihub2RlLCBmbiwgcGFyYW1zKSB7XG5cdC8qKlxuXHQgKiBAdHlwZSB7VHJhbnNpdGlvbk9wdGlvbnN9ICovXG5cdGNvbnN0IG9wdGlvbnMgPSB7IGRpcmVjdGlvbjogJ2luJyB9O1xuXHRsZXQgY29uZmlnID0gZm4obm9kZSwgcGFyYW1zLCBvcHRpb25zKTtcblx0bGV0IHJ1bm5pbmcgPSBmYWxzZTtcblx0bGV0IGFuaW1hdGlvbl9uYW1lO1xuXHRsZXQgdGFzaztcblx0bGV0IHVpZCA9IDA7XG5cblx0LyoqXG5cdCAqIEByZXR1cm5zIHt2b2lkfSAqL1xuXHRmdW5jdGlvbiBjbGVhbnVwKCkge1xuXHRcdGlmIChhbmltYXRpb25fbmFtZSkgZGVsZXRlX3J1bGUobm9kZSwgYW5pbWF0aW9uX25hbWUpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEByZXR1cm5zIHt2b2lkfSAqL1xuXHRmdW5jdGlvbiBnbygpIHtcblx0XHRjb25zdCB7XG5cdFx0XHRkZWxheSA9IDAsXG5cdFx0XHRkdXJhdGlvbiA9IDMwMCxcblx0XHRcdGVhc2luZyA9IGxpbmVhcixcblx0XHRcdHRpY2sgPSBub29wLFxuXHRcdFx0Y3NzXG5cdFx0fSA9IGNvbmZpZyB8fCBudWxsX3RyYW5zaXRpb247XG5cdFx0aWYgKGNzcykgYW5pbWF0aW9uX25hbWUgPSBjcmVhdGVfcnVsZShub2RlLCAwLCAxLCBkdXJhdGlvbiwgZGVsYXksIGVhc2luZywgY3NzLCB1aWQrKyk7XG5cdFx0dGljaygwLCAxKTtcblx0XHRjb25zdCBzdGFydF90aW1lID0gbm93KCkgKyBkZWxheTtcblx0XHRjb25zdCBlbmRfdGltZSA9IHN0YXJ0X3RpbWUgKyBkdXJhdGlvbjtcblx0XHRpZiAodGFzaykgdGFzay5hYm9ydCgpO1xuXHRcdHJ1bm5pbmcgPSB0cnVlO1xuXHRcdGFkZF9yZW5kZXJfY2FsbGJhY2soKCkgPT4gZGlzcGF0Y2gobm9kZSwgdHJ1ZSwgJ3N0YXJ0JykpO1xuXHRcdHRhc2sgPSBsb29wKChub3cpID0+IHtcblx0XHRcdGlmIChydW5uaW5nKSB7XG5cdFx0XHRcdGlmIChub3cgPj0gZW5kX3RpbWUpIHtcblx0XHRcdFx0XHR0aWNrKDEsIDApO1xuXHRcdFx0XHRcdGRpc3BhdGNoKG5vZGUsIHRydWUsICdlbmQnKTtcblx0XHRcdFx0XHRjbGVhbnVwKCk7XG5cdFx0XHRcdFx0cmV0dXJuIChydW5uaW5nID0gZmFsc2UpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChub3cgPj0gc3RhcnRfdGltZSkge1xuXHRcdFx0XHRcdGNvbnN0IHQgPSBlYXNpbmcoKG5vdyAtIHN0YXJ0X3RpbWUpIC8gZHVyYXRpb24pO1xuXHRcdFx0XHRcdHRpY2sodCwgMSAtIHQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcnVubmluZztcblx0XHR9KTtcblx0fVxuXHRsZXQgc3RhcnRlZCA9IGZhbHNlO1xuXHRyZXR1cm4ge1xuXHRcdHN0YXJ0KCkge1xuXHRcdFx0aWYgKHN0YXJ0ZWQpIHJldHVybjtcblx0XHRcdHN0YXJ0ZWQgPSB0cnVlO1xuXHRcdFx0ZGVsZXRlX3J1bGUobm9kZSk7XG5cdFx0XHRpZiAoaXNfZnVuY3Rpb24oY29uZmlnKSkge1xuXHRcdFx0XHRjb25maWcgPSBjb25maWcob3B0aW9ucyk7XG5cdFx0XHRcdHdhaXQoKS50aGVuKGdvKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGdvKCk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRpbnZhbGlkYXRlKCkge1xuXHRcdFx0c3RhcnRlZCA9IGZhbHNlO1xuXHRcdH0sXG5cdFx0ZW5kKCkge1xuXHRcdFx0aWYgKHJ1bm5pbmcpIHtcblx0XHRcdFx0Y2xlYW51cCgpO1xuXHRcdFx0XHRydW5uaW5nID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudCAmIEVsZW1lbnRDU1NJbmxpbmVTdHlsZX0gbm9kZVxuICogQHBhcmFtIHtUcmFuc2l0aW9uRm59IGZuXG4gKiBAcGFyYW0ge2FueX0gcGFyYW1zXG4gKiBAcmV0dXJucyB7eyBlbmQocmVzZXQ6IGFueSk6IHZvaWQ7IH19XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVfb3V0X3RyYW5zaXRpb24obm9kZSwgZm4sIHBhcmFtcykge1xuXHQvKiogQHR5cGUge1RyYW5zaXRpb25PcHRpb25zfSAqL1xuXHRjb25zdCBvcHRpb25zID0geyBkaXJlY3Rpb246ICdvdXQnIH07XG5cdGxldCBjb25maWcgPSBmbihub2RlLCBwYXJhbXMsIG9wdGlvbnMpO1xuXHRsZXQgcnVubmluZyA9IHRydWU7XG5cdGxldCBhbmltYXRpb25fbmFtZTtcblx0Y29uc3QgZ3JvdXAgPSBvdXRyb3M7XG5cdGdyb3VwLnIgKz0gMTtcblx0LyoqIEB0eXBlIHtib29sZWFufSAqL1xuXHRsZXQgb3JpZ2luYWxfaW5lcnRfdmFsdWU7XG5cblx0LyoqXG5cdCAqIEByZXR1cm5zIHt2b2lkfSAqL1xuXHRmdW5jdGlvbiBnbygpIHtcblx0XHRjb25zdCB7XG5cdFx0XHRkZWxheSA9IDAsXG5cdFx0XHRkdXJhdGlvbiA9IDMwMCxcblx0XHRcdGVhc2luZyA9IGxpbmVhcixcblx0XHRcdHRpY2sgPSBub29wLFxuXHRcdFx0Y3NzXG5cdFx0fSA9IGNvbmZpZyB8fCBudWxsX3RyYW5zaXRpb247XG5cblx0XHRpZiAoY3NzKSBhbmltYXRpb25fbmFtZSA9IGNyZWF0ZV9ydWxlKG5vZGUsIDEsIDAsIGR1cmF0aW9uLCBkZWxheSwgZWFzaW5nLCBjc3MpO1xuXG5cdFx0Y29uc3Qgc3RhcnRfdGltZSA9IG5vdygpICsgZGVsYXk7XG5cdFx0Y29uc3QgZW5kX3RpbWUgPSBzdGFydF90aW1lICsgZHVyYXRpb247XG5cdFx0YWRkX3JlbmRlcl9jYWxsYmFjaygoKSA9PiBkaXNwYXRjaChub2RlLCBmYWxzZSwgJ3N0YXJ0JykpO1xuXG5cdFx0aWYgKCdpbmVydCcgaW4gbm9kZSkge1xuXHRcdFx0b3JpZ2luYWxfaW5lcnRfdmFsdWUgPSAvKiogQHR5cGUge0hUTUxFbGVtZW50fSAqLyAobm9kZSkuaW5lcnQ7XG5cdFx0XHRub2RlLmluZXJ0ID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRsb29wKChub3cpID0+IHtcblx0XHRcdGlmIChydW5uaW5nKSB7XG5cdFx0XHRcdGlmIChub3cgPj0gZW5kX3RpbWUpIHtcblx0XHRcdFx0XHR0aWNrKDAsIDEpO1xuXHRcdFx0XHRcdGRpc3BhdGNoKG5vZGUsIGZhbHNlLCAnZW5kJyk7XG5cdFx0XHRcdFx0aWYgKCEtLWdyb3VwLnIpIHtcblx0XHRcdFx0XHRcdC8vIHRoaXMgd2lsbCByZXN1bHQgaW4gYGVuZCgpYCBiZWluZyBjYWxsZWQsXG5cdFx0XHRcdFx0XHQvLyBzbyB3ZSBkb24ndCBuZWVkIHRvIGNsZWFuIHVwIGhlcmVcblx0XHRcdFx0XHRcdHJ1bl9hbGwoZ3JvdXAuYyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAobm93ID49IHN0YXJ0X3RpbWUpIHtcblx0XHRcdFx0XHRjb25zdCB0ID0gZWFzaW5nKChub3cgLSBzdGFydF90aW1lKSAvIGR1cmF0aW9uKTtcblx0XHRcdFx0XHR0aWNrKDEgLSB0LCB0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJ1bm5pbmc7XG5cdFx0fSk7XG5cdH1cblxuXHRpZiAoaXNfZnVuY3Rpb24oY29uZmlnKSkge1xuXHRcdHdhaXQoKS50aGVuKCgpID0+IHtcblx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdGNvbmZpZyA9IGNvbmZpZyhvcHRpb25zKTtcblx0XHRcdGdvKCk7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0Z28oKTtcblx0fVxuXG5cdHJldHVybiB7XG5cdFx0ZW5kKHJlc2V0KSB7XG5cdFx0XHRpZiAocmVzZXQgJiYgJ2luZXJ0JyBpbiBub2RlKSB7XG5cdFx0XHRcdG5vZGUuaW5lcnQgPSBvcmlnaW5hbF9pbmVydF92YWx1ZTtcblx0XHRcdH1cblx0XHRcdGlmIChyZXNldCAmJiBjb25maWcudGljaykge1xuXHRcdFx0XHRjb25maWcudGljaygxLCAwKTtcblx0XHRcdH1cblx0XHRcdGlmIChydW5uaW5nKSB7XG5cdFx0XHRcdGlmIChhbmltYXRpb25fbmFtZSkgZGVsZXRlX3J1bGUobm9kZSwgYW5pbWF0aW9uX25hbWUpO1xuXHRcdFx0XHRydW5uaW5nID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudCAmIEVsZW1lbnRDU1NJbmxpbmVTdHlsZX0gbm9kZVxuICogQHBhcmFtIHtUcmFuc2l0aW9uRm59IGZuXG4gKiBAcGFyYW0ge2FueX0gcGFyYW1zXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGludHJvXG4gKiBAcmV0dXJucyB7eyBydW4oYjogMCB8IDEpOiB2b2lkOyBlbmQoKTogdm9pZDsgfX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZV9iaWRpcmVjdGlvbmFsX3RyYW5zaXRpb24obm9kZSwgZm4sIHBhcmFtcywgaW50cm8pIHtcblx0LyoqXG5cdCAqIEB0eXBlIHtUcmFuc2l0aW9uT3B0aW9uc30gKi9cblx0Y29uc3Qgb3B0aW9ucyA9IHsgZGlyZWN0aW9uOiAnYm90aCcgfTtcblx0bGV0IGNvbmZpZyA9IGZuKG5vZGUsIHBhcmFtcywgb3B0aW9ucyk7XG5cdGxldCB0ID0gaW50cm8gPyAwIDogMTtcblxuXHQvKipcblx0ICogQHR5cGUge1Byb2dyYW0gfCBudWxsfSAqL1xuXHRsZXQgcnVubmluZ19wcm9ncmFtID0gbnVsbDtcblxuXHQvKipcblx0ICogQHR5cGUge1BlbmRpbmdQcm9ncmFtIHwgbnVsbH0gKi9cblx0bGV0IHBlbmRpbmdfcHJvZ3JhbSA9IG51bGw7XG5cdGxldCBhbmltYXRpb25fbmFtZSA9IG51bGw7XG5cblx0LyoqIEB0eXBlIHtib29sZWFufSAqL1xuXHRsZXQgb3JpZ2luYWxfaW5lcnRfdmFsdWU7XG5cblx0LyoqXG5cdCAqIEByZXR1cm5zIHt2b2lkfSAqL1xuXHRmdW5jdGlvbiBjbGVhcl9hbmltYXRpb24oKSB7XG5cdFx0aWYgKGFuaW1hdGlvbl9uYW1lKSBkZWxldGVfcnVsZShub2RlLCBhbmltYXRpb25fbmFtZSk7XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtQZW5kaW5nUHJvZ3JhbX0gcHJvZ3JhbVxuXHQgKiBAcGFyYW0ge251bWJlcn0gZHVyYXRpb25cblx0ICogQHJldHVybnMge1Byb2dyYW19XG5cdCAqL1xuXHRmdW5jdGlvbiBpbml0KHByb2dyYW0sIGR1cmF0aW9uKSB7XG5cdFx0Y29uc3QgZCA9IC8qKiBAdHlwZSB7UHJvZ3JhbVsnZCddfSAqLyAocHJvZ3JhbS5iIC0gdCk7XG5cdFx0ZHVyYXRpb24gKj0gTWF0aC5hYnMoZCk7XG5cdFx0cmV0dXJuIHtcblx0XHRcdGE6IHQsXG5cdFx0XHRiOiBwcm9ncmFtLmIsXG5cdFx0XHRkLFxuXHRcdFx0ZHVyYXRpb24sXG5cdFx0XHRzdGFydDogcHJvZ3JhbS5zdGFydCxcblx0XHRcdGVuZDogcHJvZ3JhbS5zdGFydCArIGR1cmF0aW9uLFxuXHRcdFx0Z3JvdXA6IHByb2dyYW0uZ3JvdXBcblx0XHR9O1xuXHR9XG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7SU5UUk8gfCBPVVRST30gYlxuXHQgKiBAcmV0dXJucyB7dm9pZH1cblx0ICovXG5cdGZ1bmN0aW9uIGdvKGIpIHtcblx0XHRjb25zdCB7XG5cdFx0XHRkZWxheSA9IDAsXG5cdFx0XHRkdXJhdGlvbiA9IDMwMCxcblx0XHRcdGVhc2luZyA9IGxpbmVhcixcblx0XHRcdHRpY2sgPSBub29wLFxuXHRcdFx0Y3NzXG5cdFx0fSA9IGNvbmZpZyB8fCBudWxsX3RyYW5zaXRpb247XG5cblx0XHQvKipcblx0XHQgKiBAdHlwZSB7UGVuZGluZ1Byb2dyYW19ICovXG5cdFx0Y29uc3QgcHJvZ3JhbSA9IHtcblx0XHRcdHN0YXJ0OiBub3coKSArIGRlbGF5LFxuXHRcdFx0YlxuXHRcdH07XG5cblx0XHRpZiAoIWIpIHtcblx0XHRcdC8vIEB0cy1pZ25vcmUgdG9kbzogaW1wcm92ZSB0eXBpbmdzXG5cdFx0XHRwcm9ncmFtLmdyb3VwID0gb3V0cm9zO1xuXHRcdFx0b3V0cm9zLnIgKz0gMTtcblx0XHR9XG5cblx0XHRpZiAoJ2luZXJ0JyBpbiBub2RlKSB7XG5cdFx0XHRpZiAoYikge1xuXHRcdFx0XHRpZiAob3JpZ2luYWxfaW5lcnRfdmFsdWUgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdC8vIGFib3J0ZWQvcmV2ZXJzZWQgb3V0cm8g4oCUIHJlc3RvcmUgcHJldmlvdXMgaW5lcnQgdmFsdWVcblx0XHRcdFx0XHRub2RlLmluZXJ0ID0gb3JpZ2luYWxfaW5lcnRfdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9yaWdpbmFsX2luZXJ0X3ZhbHVlID0gLyoqIEB0eXBlIHtIVE1MRWxlbWVudH0gKi8gKG5vZGUpLmluZXJ0O1xuXHRcdFx0XHRub2RlLmluZXJ0ID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAocnVubmluZ19wcm9ncmFtIHx8IHBlbmRpbmdfcHJvZ3JhbSkge1xuXHRcdFx0cGVuZGluZ19wcm9ncmFtID0gcHJvZ3JhbTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gaWYgdGhpcyBpcyBhbiBpbnRybywgYW5kIHRoZXJlJ3MgYSBkZWxheSwgd2UgbmVlZCB0byBkb1xuXHRcdFx0Ly8gYW4gaW5pdGlhbCB0aWNrIGFuZC9vciBhcHBseSBDU1MgYW5pbWF0aW9uIGltbWVkaWF0ZWx5XG5cdFx0XHRpZiAoY3NzKSB7XG5cdFx0XHRcdGNsZWFyX2FuaW1hdGlvbigpO1xuXHRcdFx0XHRhbmltYXRpb25fbmFtZSA9IGNyZWF0ZV9ydWxlKG5vZGUsIHQsIGIsIGR1cmF0aW9uLCBkZWxheSwgZWFzaW5nLCBjc3MpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGIpIHRpY2soMCwgMSk7XG5cdFx0XHRydW5uaW5nX3Byb2dyYW0gPSBpbml0KHByb2dyYW0sIGR1cmF0aW9uKTtcblx0XHRcdGFkZF9yZW5kZXJfY2FsbGJhY2soKCkgPT4gZGlzcGF0Y2gobm9kZSwgYiwgJ3N0YXJ0JykpO1xuXHRcdFx0bG9vcCgobm93KSA9PiB7XG5cdFx0XHRcdGlmIChwZW5kaW5nX3Byb2dyYW0gJiYgbm93ID4gcGVuZGluZ19wcm9ncmFtLnN0YXJ0KSB7XG5cdFx0XHRcdFx0cnVubmluZ19wcm9ncmFtID0gaW5pdChwZW5kaW5nX3Byb2dyYW0sIGR1cmF0aW9uKTtcblx0XHRcdFx0XHRwZW5kaW5nX3Byb2dyYW0gPSBudWxsO1xuXHRcdFx0XHRcdGRpc3BhdGNoKG5vZGUsIHJ1bm5pbmdfcHJvZ3JhbS5iLCAnc3RhcnQnKTtcblx0XHRcdFx0XHRpZiAoY3NzKSB7XG5cdFx0XHRcdFx0XHRjbGVhcl9hbmltYXRpb24oKTtcblx0XHRcdFx0XHRcdGFuaW1hdGlvbl9uYW1lID0gY3JlYXRlX3J1bGUoXG5cdFx0XHRcdFx0XHRcdG5vZGUsXG5cdFx0XHRcdFx0XHRcdHQsXG5cdFx0XHRcdFx0XHRcdHJ1bm5pbmdfcHJvZ3JhbS5iLFxuXHRcdFx0XHRcdFx0XHRydW5uaW5nX3Byb2dyYW0uZHVyYXRpb24sXG5cdFx0XHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0XHRcdGVhc2luZyxcblx0XHRcdFx0XHRcdFx0Y29uZmlnLmNzc1xuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHJ1bm5pbmdfcHJvZ3JhbSkge1xuXHRcdFx0XHRcdGlmIChub3cgPj0gcnVubmluZ19wcm9ncmFtLmVuZCkge1xuXHRcdFx0XHRcdFx0dGljaygodCA9IHJ1bm5pbmdfcHJvZ3JhbS5iKSwgMSAtIHQpO1xuXHRcdFx0XHRcdFx0ZGlzcGF0Y2gobm9kZSwgcnVubmluZ19wcm9ncmFtLmIsICdlbmQnKTtcblx0XHRcdFx0XHRcdGlmICghcGVuZGluZ19wcm9ncmFtKSB7XG5cdFx0XHRcdFx0XHRcdC8vIHdlJ3JlIGRvbmVcblx0XHRcdFx0XHRcdFx0aWYgKHJ1bm5pbmdfcHJvZ3JhbS5iKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ly8gaW50cm8g4oCUIHdlIGNhbiB0aWR5IHVwIGltbWVkaWF0ZWx5XG5cdFx0XHRcdFx0XHRcdFx0Y2xlYXJfYW5pbWF0aW9uKCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Ly8gb3V0cm8g4oCUIG5lZWRzIHRvIGJlIGNvb3JkaW5hdGVkXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCEtLXJ1bm5pbmdfcHJvZ3JhbS5ncm91cC5yKSBydW5fYWxsKHJ1bm5pbmdfcHJvZ3JhbS5ncm91cC5jKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0cnVubmluZ19wcm9ncmFtID0gbnVsbDtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKG5vdyA+PSBydW5uaW5nX3Byb2dyYW0uc3RhcnQpIHtcblx0XHRcdFx0XHRcdGNvbnN0IHAgPSBub3cgLSBydW5uaW5nX3Byb2dyYW0uc3RhcnQ7XG5cdFx0XHRcdFx0XHR0ID0gcnVubmluZ19wcm9ncmFtLmEgKyBydW5uaW5nX3Byb2dyYW0uZCAqIGVhc2luZyhwIC8gcnVubmluZ19wcm9ncmFtLmR1cmF0aW9uKTtcblx0XHRcdFx0XHRcdHRpY2sodCwgMSAtIHQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gISEocnVubmluZ19wcm9ncmFtIHx8IHBlbmRpbmdfcHJvZ3JhbSk7XG5cdFx0XHR9KTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHtcblx0XHRydW4oYikge1xuXHRcdFx0aWYgKGlzX2Z1bmN0aW9uKGNvbmZpZykpIHtcblx0XHRcdFx0d2FpdCgpLnRoZW4oKCkgPT4ge1xuXHRcdFx0XHRcdGNvbnN0IG9wdHMgPSB7IGRpcmVjdGlvbjogYiA/ICdpbicgOiAnb3V0JyB9O1xuXHRcdFx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdFx0XHRjb25maWcgPSBjb25maWcob3B0cyk7XG5cdFx0XHRcdFx0Z28oYik7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Z28oYik7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRlbmQoKSB7XG5cdFx0XHRjbGVhcl9hbmltYXRpb24oKTtcblx0XHRcdHJ1bm5pbmdfcHJvZ3JhbSA9IHBlbmRpbmdfcHJvZ3JhbSA9IG51bGw7XG5cdFx0fVxuXHR9O1xufVxuXG4vKiogQHR5cGVkZWYgezF9IElOVFJPICovXG4vKiogQHR5cGVkZWYgezB9IE9VVFJPICovXG4vKiogQHR5cGVkZWYge3sgZGlyZWN0aW9uOiAnaW4nIHwgJ291dCcgfCAnYm90aCcgfX0gVHJhbnNpdGlvbk9wdGlvbnMgKi9cbi8qKiBAdHlwZWRlZiB7KG5vZGU6IEVsZW1lbnQsIHBhcmFtczogYW55LCBvcHRpb25zOiBUcmFuc2l0aW9uT3B0aW9ucykgPT4gaW1wb3J0KCcuLi90cmFuc2l0aW9uL3B1YmxpYy5qcycpLlRyYW5zaXRpb25Db25maWd9IFRyYW5zaXRpb25GbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IE91dHJvXG4gKiBAcHJvcGVydHkge251bWJlcn0gclxuICogQHByb3BlcnR5IHtGdW5jdGlvbltdfSBjXG4gKiBAcHJvcGVydHkge09iamVjdH0gcFxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gUGVuZGluZ1Byb2dyYW1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBzdGFydFxuICogQHByb3BlcnR5IHtJTlRST3xPVVRST30gYlxuICogQHByb3BlcnR5IHtPdXRyb30gW2dyb3VwXVxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gUHJvZ3JhbVxuICogQHByb3BlcnR5IHtudW1iZXJ9IGFcbiAqIEBwcm9wZXJ0eSB7SU5UUk98T1VUUk99IGJcbiAqIEBwcm9wZXJ0eSB7MXwtMX0gZFxuICogQHByb3BlcnR5IHtudW1iZXJ9IGR1cmF0aW9uXG4gKiBAcHJvcGVydHkge251bWJlcn0gc3RhcnRcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBlbmRcbiAqIEBwcm9wZXJ0eSB7T3V0cm99IFtncm91cF1cbiAqL1xuIiwiaW1wb3J0IHsgdHJhbnNpdGlvbl9pbiwgdHJhbnNpdGlvbl9vdXQgfSBmcm9tICcuL3RyYW5zaXRpb25zLmpzJztcbmltcG9ydCB7IHJ1bl9hbGwgfSBmcm9tICcuL3V0aWxzLmpzJztcblxuLy8gZ2VuZXJhbCBlYWNoIGZ1bmN0aW9uczpcblxuZXhwb3J0IGZ1bmN0aW9uIGVuc3VyZV9hcnJheV9saWtlKGFycmF5X2xpa2Vfb3JfaXRlcmF0b3IpIHtcblx0cmV0dXJuIGFycmF5X2xpa2Vfb3JfaXRlcmF0b3I/Lmxlbmd0aCAhPT0gdW5kZWZpbmVkXG5cdFx0PyBhcnJheV9saWtlX29yX2l0ZXJhdG9yXG5cdFx0OiBBcnJheS5mcm9tKGFycmF5X2xpa2Vfb3JfaXRlcmF0b3IpO1xufVxuXG4vLyBrZXllZCBlYWNoIGZ1bmN0aW9uczpcblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlc3Ryb3lfYmxvY2soYmxvY2ssIGxvb2t1cCkge1xuXHRibG9jay5kKDEpO1xuXHRsb29rdXAuZGVsZXRlKGJsb2NrLmtleSk7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBvdXRyb19hbmRfZGVzdHJveV9ibG9jayhibG9jaywgbG9va3VwKSB7XG5cdHRyYW5zaXRpb25fb3V0KGJsb2NrLCAxLCAxLCAoKSA9PiB7XG5cdFx0bG9va3VwLmRlbGV0ZShibG9jay5rZXkpO1xuXHR9KTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpeF9hbmRfZGVzdHJveV9ibG9jayhibG9jaywgbG9va3VwKSB7XG5cdGJsb2NrLmYoKTtcblx0ZGVzdHJveV9ibG9jayhibG9jaywgbG9va3VwKTtcbn1cblxuLyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpeF9hbmRfb3V0cm9fYW5kX2Rlc3Ryb3lfYmxvY2soYmxvY2ssIGxvb2t1cCkge1xuXHRibG9jay5mKCk7XG5cdG91dHJvX2FuZF9kZXN0cm95X2Jsb2NrKGJsb2NrLCBsb29rdXApO1xufVxuXG4vKiogQHJldHVybnMge2FueVtdfSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZV9rZXllZF9lYWNoKFxuXHRvbGRfYmxvY2tzLFxuXHRkaXJ0eSxcblx0Z2V0X2tleSxcblx0ZHluYW1pYyxcblx0Y3R4LFxuXHRsaXN0LFxuXHRsb29rdXAsXG5cdG5vZGUsXG5cdGRlc3Ryb3ksXG5cdGNyZWF0ZV9lYWNoX2Jsb2NrLFxuXHRuZXh0LFxuXHRnZXRfY29udGV4dFxuKSB7XG5cdGxldCBvID0gb2xkX2Jsb2Nrcy5sZW5ndGg7XG5cdGxldCBuID0gbGlzdC5sZW5ndGg7XG5cdGxldCBpID0gbztcblx0Y29uc3Qgb2xkX2luZGV4ZXMgPSB7fTtcblx0d2hpbGUgKGktLSkgb2xkX2luZGV4ZXNbb2xkX2Jsb2Nrc1tpXS5rZXldID0gaTtcblx0Y29uc3QgbmV3X2Jsb2NrcyA9IFtdO1xuXHRjb25zdCBuZXdfbG9va3VwID0gbmV3IE1hcCgpO1xuXHRjb25zdCBkZWx0YXMgPSBuZXcgTWFwKCk7XG5cdGNvbnN0IHVwZGF0ZXMgPSBbXTtcblx0aSA9IG47XG5cdHdoaWxlIChpLS0pIHtcblx0XHRjb25zdCBjaGlsZF9jdHggPSBnZXRfY29udGV4dChjdHgsIGxpc3QsIGkpO1xuXHRcdGNvbnN0IGtleSA9IGdldF9rZXkoY2hpbGRfY3R4KTtcblx0XHRsZXQgYmxvY2sgPSBsb29rdXAuZ2V0KGtleSk7XG5cdFx0aWYgKCFibG9jaykge1xuXHRcdFx0YmxvY2sgPSBjcmVhdGVfZWFjaF9ibG9jayhrZXksIGNoaWxkX2N0eCk7XG5cdFx0XHRibG9jay5jKCk7XG5cdFx0fSBlbHNlIGlmIChkeW5hbWljKSB7XG5cdFx0XHQvLyBkZWZlciB1cGRhdGVzIHVudGlsIGFsbCB0aGUgRE9NIHNodWZmbGluZyBpcyBkb25lXG5cdFx0XHR1cGRhdGVzLnB1c2goKCkgPT4gYmxvY2sucChjaGlsZF9jdHgsIGRpcnR5KSk7XG5cdFx0fVxuXHRcdG5ld19sb29rdXAuc2V0KGtleSwgKG5ld19ibG9ja3NbaV0gPSBibG9jaykpO1xuXHRcdGlmIChrZXkgaW4gb2xkX2luZGV4ZXMpIGRlbHRhcy5zZXQoa2V5LCBNYXRoLmFicyhpIC0gb2xkX2luZGV4ZXNba2V5XSkpO1xuXHR9XG5cdGNvbnN0IHdpbGxfbW92ZSA9IG5ldyBTZXQoKTtcblx0Y29uc3QgZGlkX21vdmUgPSBuZXcgU2V0KCk7XG5cdC8qKiBAcmV0dXJucyB7dm9pZH0gKi9cblx0ZnVuY3Rpb24gaW5zZXJ0KGJsb2NrKSB7XG5cdFx0dHJhbnNpdGlvbl9pbihibG9jaywgMSk7XG5cdFx0YmxvY2subShub2RlLCBuZXh0KTtcblx0XHRsb29rdXAuc2V0KGJsb2NrLmtleSwgYmxvY2spO1xuXHRcdG5leHQgPSBibG9jay5maXJzdDtcblx0XHRuLS07XG5cdH1cblx0d2hpbGUgKG8gJiYgbikge1xuXHRcdGNvbnN0IG5ld19ibG9jayA9IG5ld19ibG9ja3NbbiAtIDFdO1xuXHRcdGNvbnN0IG9sZF9ibG9jayA9IG9sZF9ibG9ja3NbbyAtIDFdO1xuXHRcdGNvbnN0IG5ld19rZXkgPSBuZXdfYmxvY2sua2V5O1xuXHRcdGNvbnN0IG9sZF9rZXkgPSBvbGRfYmxvY2sua2V5O1xuXHRcdGlmIChuZXdfYmxvY2sgPT09IG9sZF9ibG9jaykge1xuXHRcdFx0Ly8gZG8gbm90aGluZ1xuXHRcdFx0bmV4dCA9IG5ld19ibG9jay5maXJzdDtcblx0XHRcdG8tLTtcblx0XHRcdG4tLTtcblx0XHR9IGVsc2UgaWYgKCFuZXdfbG9va3VwLmhhcyhvbGRfa2V5KSkge1xuXHRcdFx0Ly8gcmVtb3ZlIG9sZCBibG9ja1xuXHRcdFx0ZGVzdHJveShvbGRfYmxvY2ssIGxvb2t1cCk7XG5cdFx0XHRvLS07XG5cdFx0fSBlbHNlIGlmICghbG9va3VwLmhhcyhuZXdfa2V5KSB8fCB3aWxsX21vdmUuaGFzKG5ld19rZXkpKSB7XG5cdFx0XHRpbnNlcnQobmV3X2Jsb2NrKTtcblx0XHR9IGVsc2UgaWYgKGRpZF9tb3ZlLmhhcyhvbGRfa2V5KSkge1xuXHRcdFx0by0tO1xuXHRcdH0gZWxzZSBpZiAoZGVsdGFzLmdldChuZXdfa2V5KSA+IGRlbHRhcy5nZXQob2xkX2tleSkpIHtcblx0XHRcdGRpZF9tb3ZlLmFkZChuZXdfa2V5KTtcblx0XHRcdGluc2VydChuZXdfYmxvY2spO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR3aWxsX21vdmUuYWRkKG9sZF9rZXkpO1xuXHRcdFx0by0tO1xuXHRcdH1cblx0fVxuXHR3aGlsZSAoby0tKSB7XG5cdFx0Y29uc3Qgb2xkX2Jsb2NrID0gb2xkX2Jsb2Nrc1tvXTtcblx0XHRpZiAoIW5ld19sb29rdXAuaGFzKG9sZF9ibG9jay5rZXkpKSBkZXN0cm95KG9sZF9ibG9jaywgbG9va3VwKTtcblx0fVxuXHR3aGlsZSAobikgaW5zZXJ0KG5ld19ibG9ja3NbbiAtIDFdKTtcblx0cnVuX2FsbCh1cGRhdGVzKTtcblx0cmV0dXJuIG5ld19ibG9ja3M7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZV9lYWNoX2tleXMoY3R4LCBsaXN0LCBnZXRfY29udGV4dCwgZ2V0X2tleSkge1xuXHRjb25zdCBrZXlzID0gbmV3IE1hcCgpO1xuXHRmb3IgKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHRjb25zdCBrZXkgPSBnZXRfa2V5KGdldF9jb250ZXh0KGN0eCwgbGlzdCwgaSkpO1xuXHRcdGlmIChrZXlzLmhhcyhrZXkpKSB7XG5cdFx0XHRsZXQgdmFsdWUgPSAnJztcblx0XHRcdHRyeSB7XG5cdFx0XHRcdHZhbHVlID0gYHdpdGggdmFsdWUgJyR7U3RyaW5nKGtleSl9JyBgO1xuXHRcdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0XHQvLyBjYW4ndCBzdHJpbmdpZnlcblx0XHRcdH1cblx0XHRcdHRocm93IG5ldyBFcnJvcihcblx0XHRcdFx0YENhbm5vdCBoYXZlIGR1cGxpY2F0ZSBrZXlzIGluIGEga2V5ZWQgZWFjaDogS2V5cyBhdCBpbmRleCAke2tleXMuZ2V0KFxuXHRcdFx0XHRcdGtleVxuXHRcdFx0XHQpfSBhbmQgJHtpfSAke3ZhbHVlfWFyZSBkdXBsaWNhdGVzYFxuXHRcdFx0KTtcblx0XHR9XG5cdFx0a2V5cy5zZXQoa2V5LCBpKTtcblx0fVxufVxuIiwiLyoqIEByZXR1cm5zIHt7fX0gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRfc3ByZWFkX3VwZGF0ZShsZXZlbHMsIHVwZGF0ZXMpIHtcblx0Y29uc3QgdXBkYXRlID0ge307XG5cdGNvbnN0IHRvX251bGxfb3V0ID0ge307XG5cdGNvbnN0IGFjY291bnRlZF9mb3IgPSB7ICQkc2NvcGU6IDEgfTtcblx0bGV0IGkgPSBsZXZlbHMubGVuZ3RoO1xuXHR3aGlsZSAoaS0tKSB7XG5cdFx0Y29uc3QgbyA9IGxldmVsc1tpXTtcblx0XHRjb25zdCBuID0gdXBkYXRlc1tpXTtcblx0XHRpZiAobikge1xuXHRcdFx0Zm9yIChjb25zdCBrZXkgaW4gbykge1xuXHRcdFx0XHRpZiAoIShrZXkgaW4gbikpIHRvX251bGxfb3V0W2tleV0gPSAxO1xuXHRcdFx0fVxuXHRcdFx0Zm9yIChjb25zdCBrZXkgaW4gbikge1xuXHRcdFx0XHRpZiAoIWFjY291bnRlZF9mb3Jba2V5XSkge1xuXHRcdFx0XHRcdHVwZGF0ZVtrZXldID0gbltrZXldO1xuXHRcdFx0XHRcdGFjY291bnRlZF9mb3Jba2V5XSA9IDE7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGxldmVsc1tpXSA9IG47XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoY29uc3Qga2V5IGluIG8pIHtcblx0XHRcdFx0YWNjb3VudGVkX2ZvcltrZXldID0gMTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0Zm9yIChjb25zdCBrZXkgaW4gdG9fbnVsbF9vdXQpIHtcblx0XHRpZiAoIShrZXkgaW4gdXBkYXRlKSkgdXBkYXRlW2tleV0gPSB1bmRlZmluZWQ7XG5cdH1cblx0cmV0dXJuIHVwZGF0ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldF9zcHJlYWRfb2JqZWN0KHNwcmVhZF9wcm9wcykge1xuXHRyZXR1cm4gdHlwZW9mIHNwcmVhZF9wcm9wcyA9PT0gJ29iamVjdCcgJiYgc3ByZWFkX3Byb3BzICE9PSBudWxsID8gc3ByZWFkX3Byb3BzIDoge307XG59XG4iLCJpbXBvcnQge1xuXHRhZGRfcmVuZGVyX2NhbGxiYWNrLFxuXHRmbHVzaCxcblx0Zmx1c2hfcmVuZGVyX2NhbGxiYWNrcyxcblx0c2NoZWR1bGVfdXBkYXRlLFxuXHRkaXJ0eV9jb21wb25lbnRzXG59IGZyb20gJy4vc2NoZWR1bGVyLmpzJztcbmltcG9ydCB7IGN1cnJlbnRfY29tcG9uZW50LCBzZXRfY3VycmVudF9jb21wb25lbnQgfSBmcm9tICcuL2xpZmVjeWNsZS5qcyc7XG5pbXBvcnQgeyBibGFua19vYmplY3QsIGlzX2VtcHR5LCBpc19mdW5jdGlvbiwgcnVuLCBydW5fYWxsLCBub29wIH0gZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQge1xuXHRjaGlsZHJlbixcblx0ZGV0YWNoLFxuXHRzdGFydF9oeWRyYXRpbmcsXG5cdGVuZF9oeWRyYXRpbmcsXG5cdGdldF9jdXN0b21fZWxlbWVudHNfc2xvdHMsXG5cdGluc2VydCxcblx0ZWxlbWVudCxcblx0YXR0clxufSBmcm9tICcuL2RvbS5qcyc7XG5pbXBvcnQgeyB0cmFuc2l0aW9uX2luIH0gZnJvbSAnLi90cmFuc2l0aW9ucy5qcyc7XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBiaW5kKGNvbXBvbmVudCwgbmFtZSwgY2FsbGJhY2spIHtcblx0Y29uc3QgaW5kZXggPSBjb21wb25lbnQuJCQucHJvcHNbbmFtZV07XG5cdGlmIChpbmRleCAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0Y29tcG9uZW50LiQkLmJvdW5kW2luZGV4XSA9IGNhbGxiYWNrO1xuXHRcdGNhbGxiYWNrKGNvbXBvbmVudC4kJC5jdHhbaW5kZXhdKTtcblx0fVxufVxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlX2NvbXBvbmVudChibG9jaykge1xuXHRibG9jayAmJiBibG9jay5jKCk7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFpbV9jb21wb25lbnQoYmxvY2ssIHBhcmVudF9ub2Rlcykge1xuXHRibG9jayAmJiBibG9jay5sKHBhcmVudF9ub2Rlcyk7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBtb3VudF9jb21wb25lbnQoY29tcG9uZW50LCB0YXJnZXQsIGFuY2hvcikge1xuXHRjb25zdCB7IGZyYWdtZW50LCBhZnRlcl91cGRhdGUgfSA9IGNvbXBvbmVudC4kJDtcblx0ZnJhZ21lbnQgJiYgZnJhZ21lbnQubSh0YXJnZXQsIGFuY2hvcik7XG5cdC8vIG9uTW91bnQgaGFwcGVucyBiZWZvcmUgdGhlIGluaXRpYWwgYWZ0ZXJVcGRhdGVcblx0YWRkX3JlbmRlcl9jYWxsYmFjaygoKSA9PiB7XG5cdFx0Y29uc3QgbmV3X29uX2Rlc3Ryb3kgPSBjb21wb25lbnQuJCQub25fbW91bnQubWFwKHJ1bikuZmlsdGVyKGlzX2Z1bmN0aW9uKTtcblx0XHQvLyBpZiB0aGUgY29tcG9uZW50IHdhcyBkZXN0cm95ZWQgaW1tZWRpYXRlbHlcblx0XHQvLyBpdCB3aWxsIHVwZGF0ZSB0aGUgYCQkLm9uX2Rlc3Ryb3lgIHJlZmVyZW5jZSB0byBgbnVsbGAuXG5cdFx0Ly8gdGhlIGRlc3RydWN0dXJlZCBvbl9kZXN0cm95IG1heSBzdGlsbCByZWZlcmVuY2UgdG8gdGhlIG9sZCBhcnJheVxuXHRcdGlmIChjb21wb25lbnQuJCQub25fZGVzdHJveSkge1xuXHRcdFx0Y29tcG9uZW50LiQkLm9uX2Rlc3Ryb3kucHVzaCguLi5uZXdfb25fZGVzdHJveSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIEVkZ2UgY2FzZSAtIGNvbXBvbmVudCB3YXMgZGVzdHJveWVkIGltbWVkaWF0ZWx5LFxuXHRcdFx0Ly8gbW9zdCBsaWtlbHkgYXMgYSByZXN1bHQgb2YgYSBiaW5kaW5nIGluaXRpYWxpc2luZ1xuXHRcdFx0cnVuX2FsbChuZXdfb25fZGVzdHJveSk7XG5cdFx0fVxuXHRcdGNvbXBvbmVudC4kJC5vbl9tb3VudCA9IFtdO1xuXHR9KTtcblx0YWZ0ZXJfdXBkYXRlLmZvckVhY2goYWRkX3JlbmRlcl9jYWxsYmFjayk7XG59XG5cbi8qKiBAcmV0dXJucyB7dm9pZH0gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZXN0cm95X2NvbXBvbmVudChjb21wb25lbnQsIGRldGFjaGluZykge1xuXHRjb25zdCAkJCA9IGNvbXBvbmVudC4kJDtcblx0aWYgKCQkLmZyYWdtZW50ICE9PSBudWxsKSB7XG5cdFx0Zmx1c2hfcmVuZGVyX2NhbGxiYWNrcygkJC5hZnRlcl91cGRhdGUpO1xuXHRcdHJ1bl9hbGwoJCQub25fZGVzdHJveSk7XG5cdFx0JCQuZnJhZ21lbnQgJiYgJCQuZnJhZ21lbnQuZChkZXRhY2hpbmcpO1xuXHRcdC8vIFRPRE8gbnVsbCBvdXQgb3RoZXIgcmVmcywgaW5jbHVkaW5nIGNvbXBvbmVudC4kJCAoYnV0IG5lZWQgdG9cblx0XHQvLyBwcmVzZXJ2ZSBmaW5hbCBzdGF0ZT8pXG5cdFx0JCQub25fZGVzdHJveSA9ICQkLmZyYWdtZW50ID0gbnVsbDtcblx0XHQkJC5jdHggPSBbXTtcblx0fVxufVxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5mdW5jdGlvbiBtYWtlX2RpcnR5KGNvbXBvbmVudCwgaSkge1xuXHRpZiAoY29tcG9uZW50LiQkLmRpcnR5WzBdID09PSAtMSkge1xuXHRcdGRpcnR5X2NvbXBvbmVudHMucHVzaChjb21wb25lbnQpO1xuXHRcdHNjaGVkdWxlX3VwZGF0ZSgpO1xuXHRcdGNvbXBvbmVudC4kJC5kaXJ0eS5maWxsKDApO1xuXHR9XG5cdGNvbXBvbmVudC4kJC5kaXJ0eVsoaSAvIDMxKSB8IDBdIHw9IDEgPDwgaSAlIDMxO1xufVxuXG4vKiogQHJldHVybnMge3ZvaWR9ICovXG5leHBvcnQgZnVuY3Rpb24gaW5pdChcblx0Y29tcG9uZW50LFxuXHRvcHRpb25zLFxuXHRpbnN0YW5jZSxcblx0Y3JlYXRlX2ZyYWdtZW50LFxuXHRub3RfZXF1YWwsXG5cdHByb3BzLFxuXHRhcHBlbmRfc3R5bGVzLFxuXHRkaXJ0eSA9IFstMV1cbikge1xuXHRjb25zdCBwYXJlbnRfY29tcG9uZW50ID0gY3VycmVudF9jb21wb25lbnQ7XG5cdHNldF9jdXJyZW50X2NvbXBvbmVudChjb21wb25lbnQpO1xuXHQvKiogQHR5cGUge2ltcG9ydCgnLi9wcml2YXRlLmpzJykuVCQkfSAqL1xuXHRjb25zdCAkJCA9IChjb21wb25lbnQuJCQgPSB7XG5cdFx0ZnJhZ21lbnQ6IG51bGwsXG5cdFx0Y3R4OiBbXSxcblx0XHQvLyBzdGF0ZVxuXHRcdHByb3BzLFxuXHRcdHVwZGF0ZTogbm9vcCxcblx0XHRub3RfZXF1YWwsXG5cdFx0Ym91bmQ6IGJsYW5rX29iamVjdCgpLFxuXHRcdC8vIGxpZmVjeWNsZVxuXHRcdG9uX21vdW50OiBbXSxcblx0XHRvbl9kZXN0cm95OiBbXSxcblx0XHRvbl9kaXNjb25uZWN0OiBbXSxcblx0XHRiZWZvcmVfdXBkYXRlOiBbXSxcblx0XHRhZnRlcl91cGRhdGU6IFtdLFxuXHRcdGNvbnRleHQ6IG5ldyBNYXAob3B0aW9ucy5jb250ZXh0IHx8IChwYXJlbnRfY29tcG9uZW50ID8gcGFyZW50X2NvbXBvbmVudC4kJC5jb250ZXh0IDogW10pKSxcblx0XHQvLyBldmVyeXRoaW5nIGVsc2Vcblx0XHRjYWxsYmFja3M6IGJsYW5rX29iamVjdCgpLFxuXHRcdGRpcnR5LFxuXHRcdHNraXBfYm91bmQ6IGZhbHNlLFxuXHRcdHJvb3Q6IG9wdGlvbnMudGFyZ2V0IHx8IHBhcmVudF9jb21wb25lbnQuJCQucm9vdFxuXHR9KTtcblx0YXBwZW5kX3N0eWxlcyAmJiBhcHBlbmRfc3R5bGVzKCQkLnJvb3QpO1xuXHRsZXQgcmVhZHkgPSBmYWxzZTtcblx0JCQuY3R4ID0gaW5zdGFuY2Vcblx0XHQ/IGluc3RhbmNlKGNvbXBvbmVudCwgb3B0aW9ucy5wcm9wcyB8fCB7fSwgKGksIHJldCwgLi4ucmVzdCkgPT4ge1xuXHRcdFx0XHRjb25zdCB2YWx1ZSA9IHJlc3QubGVuZ3RoID8gcmVzdFswXSA6IHJldDtcblx0XHRcdFx0aWYgKCQkLmN0eCAmJiBub3RfZXF1YWwoJCQuY3R4W2ldLCAoJCQuY3R4W2ldID0gdmFsdWUpKSkge1xuXHRcdFx0XHRcdGlmICghJCQuc2tpcF9ib3VuZCAmJiAkJC5ib3VuZFtpXSkgJCQuYm91bmRbaV0odmFsdWUpO1xuXHRcdFx0XHRcdGlmIChyZWFkeSkgbWFrZV9kaXJ0eShjb21wb25lbnQsIGkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0ICB9KVxuXHRcdDogW107XG5cdCQkLnVwZGF0ZSgpO1xuXHRyZWFkeSA9IHRydWU7XG5cdHJ1bl9hbGwoJCQuYmVmb3JlX3VwZGF0ZSk7XG5cdC8vIGBmYWxzZWAgYXMgYSBzcGVjaWFsIGNhc2Ugb2Ygbm8gRE9NIGNvbXBvbmVudFxuXHQkJC5mcmFnbWVudCA9IGNyZWF0ZV9mcmFnbWVudCA/IGNyZWF0ZV9mcmFnbWVudCgkJC5jdHgpIDogZmFsc2U7XG5cdGlmIChvcHRpb25zLnRhcmdldCkge1xuXHRcdGlmIChvcHRpb25zLmh5ZHJhdGUpIHtcblx0XHRcdHN0YXJ0X2h5ZHJhdGluZygpO1xuXHRcdFx0Y29uc3Qgbm9kZXMgPSBjaGlsZHJlbihvcHRpb25zLnRhcmdldCk7XG5cdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuXHRcdFx0JCQuZnJhZ21lbnQgJiYgJCQuZnJhZ21lbnQubChub2Rlcyk7XG5cdFx0XHRub2Rlcy5mb3JFYWNoKGRldGFjaCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG5cdFx0XHQkJC5mcmFnbWVudCAmJiAkJC5mcmFnbWVudC5jKCk7XG5cdFx0fVxuXHRcdGlmIChvcHRpb25zLmludHJvKSB0cmFuc2l0aW9uX2luKGNvbXBvbmVudC4kJC5mcmFnbWVudCk7XG5cdFx0bW91bnRfY29tcG9uZW50KGNvbXBvbmVudCwgb3B0aW9ucy50YXJnZXQsIG9wdGlvbnMuYW5jaG9yKTtcblx0XHRlbmRfaHlkcmF0aW5nKCk7XG5cdFx0Zmx1c2goKTtcblx0fVxuXHRzZXRfY3VycmVudF9jb21wb25lbnQocGFyZW50X2NvbXBvbmVudCk7XG59XG5cbmV4cG9ydCBsZXQgU3ZlbHRlRWxlbWVudDtcblxuaWYgKHR5cGVvZiBIVE1MRWxlbWVudCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRTdmVsdGVFbGVtZW50ID0gY2xhc3MgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG5cdFx0LyoqIFRoZSBTdmVsdGUgY29tcG9uZW50IGNvbnN0cnVjdG9yICovXG5cdFx0JCRjdG9yO1xuXHRcdC8qKiBTbG90cyAqL1xuXHRcdCQkcztcblx0XHQvKiogVGhlIFN2ZWx0ZSBjb21wb25lbnQgaW5zdGFuY2UgKi9cblx0XHQkJGM7XG5cdFx0LyoqIFdoZXRoZXIgb3Igbm90IHRoZSBjdXN0b20gZWxlbWVudCBpcyBjb25uZWN0ZWQgKi9cblx0XHQkJGNuID0gZmFsc2U7XG5cdFx0LyoqIENvbXBvbmVudCBwcm9wcyBkYXRhICovXG5cdFx0JCRkID0ge307XG5cdFx0LyoqIGB0cnVlYCBpZiBjdXJyZW50bHkgaW4gdGhlIHByb2Nlc3Mgb2YgcmVmbGVjdGluZyBjb21wb25lbnQgcHJvcHMgYmFjayB0byBhdHRyaWJ1dGVzICovXG5cdFx0JCRyID0gZmFsc2U7XG5cdFx0LyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBDdXN0b21FbGVtZW50UHJvcERlZmluaXRpb24+fSBQcm9wcyBkZWZpbml0aW9uIChuYW1lLCByZWZsZWN0ZWQsIHR5cGUgZXRjKSAqL1xuXHRcdCQkcF9kID0ge307XG5cdFx0LyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBGdW5jdGlvbltdPn0gRXZlbnQgbGlzdGVuZXJzICovXG5cdFx0JCRsID0ge307XG5cdFx0LyoqIEB0eXBlIHtNYXA8RnVuY3Rpb24sIEZ1bmN0aW9uPn0gRXZlbnQgbGlzdGVuZXIgdW5zdWJzY3JpYmUgZnVuY3Rpb25zICovXG5cdFx0JCRsX3UgPSBuZXcgTWFwKCk7XG5cblx0XHRjb25zdHJ1Y3RvcigkJGNvbXBvbmVudEN0b3IsICQkc2xvdHMsIHVzZV9zaGFkb3dfZG9tKSB7XG5cdFx0XHRzdXBlcigpO1xuXHRcdFx0dGhpcy4kJGN0b3IgPSAkJGNvbXBvbmVudEN0b3I7XG5cdFx0XHR0aGlzLiQkcyA9ICQkc2xvdHM7XG5cdFx0XHRpZiAodXNlX3NoYWRvd19kb20pIHtcblx0XHRcdFx0dGhpcy5hdHRhY2hTaGFkb3coeyBtb2RlOiAnb3BlbicgfSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0YWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lciwgb3B0aW9ucykge1xuXHRcdFx0Ly8gV2UgY2FuJ3QgZGV0ZXJtaW5lIHVwZnJvbnQgaWYgdGhlIGV2ZW50IGlzIGEgY3VzdG9tIGV2ZW50IG9yIG5vdCwgc28gd2UgaGF2ZSB0b1xuXHRcdFx0Ly8gbGlzdGVuIHRvIGJvdGguIElmIHNvbWVvbmUgdXNlcyBhIGN1c3RvbSBldmVudCB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgYSByZWd1bGFyXG5cdFx0XHQvLyBicm93c2VyIGV2ZW50LCB0aGlzIGZpcmVzIHR3aWNlIC0gd2UgY2FuJ3QgYXZvaWQgdGhhdC5cblx0XHRcdHRoaXMuJCRsW3R5cGVdID0gdGhpcy4kJGxbdHlwZV0gfHwgW107XG5cdFx0XHR0aGlzLiQkbFt0eXBlXS5wdXNoKGxpc3RlbmVyKTtcblx0XHRcdGlmICh0aGlzLiQkYykge1xuXHRcdFx0XHRjb25zdCB1bnN1YiA9IHRoaXMuJCRjLiRvbih0eXBlLCBsaXN0ZW5lcik7XG5cdFx0XHRcdHRoaXMuJCRsX3Uuc2V0KGxpc3RlbmVyLCB1bnN1Yik7XG5cdFx0XHR9XG5cdFx0XHRzdXBlci5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRyZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyLCBvcHRpb25zKSB7XG5cdFx0XHRzdXBlci5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyLCBvcHRpb25zKTtcblx0XHRcdGlmICh0aGlzLiQkYykge1xuXHRcdFx0XHRjb25zdCB1bnN1YiA9IHRoaXMuJCRsX3UuZ2V0KGxpc3RlbmVyKTtcblx0XHRcdFx0aWYgKHVuc3ViKSB7XG5cdFx0XHRcdFx0dW5zdWIoKTtcblx0XHRcdFx0XHR0aGlzLiQkbF91LmRlbGV0ZShsaXN0ZW5lcik7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRhc3luYyBjb25uZWN0ZWRDYWxsYmFjaygpIHtcblx0XHRcdHRoaXMuJCRjbiA9IHRydWU7XG5cdFx0XHRpZiAoIXRoaXMuJCRjKSB7XG5cdFx0XHRcdC8vIFdlIHdhaXQgb25lIHRpY2sgdG8gbGV0IHBvc3NpYmxlIGNoaWxkIHNsb3QgZWxlbWVudHMgYmUgY3JlYXRlZC9tb3VudGVkXG5cdFx0XHRcdGF3YWl0IFByb21pc2UucmVzb2x2ZSgpO1xuXHRcdFx0XHRpZiAoIXRoaXMuJCRjbikge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRmdW5jdGlvbiBjcmVhdGVfc2xvdChuYW1lKSB7XG5cdFx0XHRcdFx0cmV0dXJuICgpID0+IHtcblx0XHRcdFx0XHRcdGxldCBub2RlO1xuXHRcdFx0XHRcdFx0Y29uc3Qgb2JqID0ge1xuXHRcdFx0XHRcdFx0XHRjOiBmdW5jdGlvbiBjcmVhdGUoKSB7XG5cdFx0XHRcdFx0XHRcdFx0bm9kZSA9IGVsZW1lbnQoJ3Nsb3QnKTtcblx0XHRcdFx0XHRcdFx0XHRpZiAobmFtZSAhPT0gJ2RlZmF1bHQnKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRhdHRyKG5vZGUsICduYW1lJywgbmFtZSk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHQvKipcblx0XHRcdFx0XHRcdFx0ICogQHBhcmFtIHtIVE1MRWxlbWVudH0gdGFyZ2V0XG5cdFx0XHRcdFx0XHRcdCAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IFthbmNob3JdXG5cdFx0XHRcdFx0XHRcdCAqL1xuXHRcdFx0XHRcdFx0XHRtOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikge1xuXHRcdFx0XHRcdFx0XHRcdGluc2VydCh0YXJnZXQsIG5vZGUsIGFuY2hvcik7XG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdGQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGRldGFjaGluZykge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZGV0YWNoKG5vZGUpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdHJldHVybiBvYmo7XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb25zdCAkJHNsb3RzID0ge307XG5cdFx0XHRcdGNvbnN0IGV4aXN0aW5nX3Nsb3RzID0gZ2V0X2N1c3RvbV9lbGVtZW50c19zbG90cyh0aGlzKTtcblx0XHRcdFx0Zm9yIChjb25zdCBuYW1lIG9mIHRoaXMuJCRzKSB7XG5cdFx0XHRcdFx0aWYgKG5hbWUgaW4gZXhpc3Rpbmdfc2xvdHMpIHtcblx0XHRcdFx0XHRcdCQkc2xvdHNbbmFtZV0gPSBbY3JlYXRlX3Nsb3QobmFtZSldO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRmb3IgKGNvbnN0IGF0dHJpYnV0ZSBvZiB0aGlzLmF0dHJpYnV0ZXMpIHtcblx0XHRcdFx0XHQvLyB0aGlzLiQkZGF0YSB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgdGhpcy5hdHRyaWJ1dGVzXG5cdFx0XHRcdFx0Y29uc3QgbmFtZSA9IHRoaXMuJCRnX3AoYXR0cmlidXRlLm5hbWUpO1xuXHRcdFx0XHRcdGlmICghKG5hbWUgaW4gdGhpcy4kJGQpKSB7XG5cdFx0XHRcdFx0XHR0aGlzLiQkZFtuYW1lXSA9IGdldF9jdXN0b21fZWxlbWVudF92YWx1ZShuYW1lLCBhdHRyaWJ1dGUudmFsdWUsIHRoaXMuJCRwX2QsICd0b1Byb3AnKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy4kJGMgPSBuZXcgdGhpcy4kJGN0b3Ioe1xuXHRcdFx0XHRcdHRhcmdldDogdGhpcy5zaGFkb3dSb290IHx8IHRoaXMsXG5cdFx0XHRcdFx0cHJvcHM6IHtcblx0XHRcdFx0XHRcdC4uLnRoaXMuJCRkLFxuXHRcdFx0XHRcdFx0JCRzbG90cyxcblx0XHRcdFx0XHRcdCQkc2NvcGU6IHtcblx0XHRcdFx0XHRcdFx0Y3R4OiBbXVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0Ly8gUmVmbGVjdCBjb21wb25lbnQgcHJvcHMgYXMgYXR0cmlidXRlc1xuXHRcdFx0XHRjb25zdCByZWZsZWN0X2F0dHJpYnV0ZXMgPSAoKSA9PiB7XG5cdFx0XHRcdFx0dGhpcy4kJHIgPSB0cnVlO1xuXHRcdFx0XHRcdGZvciAoY29uc3Qga2V5IGluIHRoaXMuJCRwX2QpIHtcblx0XHRcdFx0XHRcdHRoaXMuJCRkW2tleV0gPSB0aGlzLiQkYy4kJC5jdHhbdGhpcy4kJGMuJCQucHJvcHNba2V5XV07XG5cdFx0XHRcdFx0XHRpZiAodGhpcy4kJHBfZFtrZXldLnJlZmxlY3QpIHtcblx0XHRcdFx0XHRcdFx0Y29uc3QgYXR0cmlidXRlX3ZhbHVlID0gZ2V0X2N1c3RvbV9lbGVtZW50X3ZhbHVlKFxuXHRcdFx0XHRcdFx0XHRcdGtleSxcblx0XHRcdFx0XHRcdFx0XHR0aGlzLiQkZFtrZXldLFxuXHRcdFx0XHRcdFx0XHRcdHRoaXMuJCRwX2QsXG5cdFx0XHRcdFx0XHRcdFx0J3RvQXR0cmlidXRlJ1xuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRpZiAoYXR0cmlidXRlX3ZhbHVlID09IG51bGwpIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLnJlbW92ZUF0dHJpYnV0ZShrZXkpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuc2V0QXR0cmlidXRlKHRoaXMuJCRwX2Rba2V5XS5hdHRyaWJ1dGUgfHwga2V5LCBhdHRyaWJ1dGVfdmFsdWUpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRoaXMuJCRyID0gZmFsc2U7XG5cdFx0XHRcdH07XG5cdFx0XHRcdHRoaXMuJCRjLiQkLmFmdGVyX3VwZGF0ZS5wdXNoKHJlZmxlY3RfYXR0cmlidXRlcyk7XG5cdFx0XHRcdHJlZmxlY3RfYXR0cmlidXRlcygpOyAvLyBvbmNlIGluaXRpYWxseSBiZWNhdXNlIGFmdGVyX3VwZGF0ZSBpcyBhZGRlZCB0b28gbGF0ZSBmb3IgZmlyc3QgcmVuZGVyXG5cblx0XHRcdFx0Zm9yIChjb25zdCB0eXBlIGluIHRoaXMuJCRsKSB7XG5cdFx0XHRcdFx0Zm9yIChjb25zdCBsaXN0ZW5lciBvZiB0aGlzLiQkbFt0eXBlXSkge1xuXHRcdFx0XHRcdFx0Y29uc3QgdW5zdWIgPSB0aGlzLiQkYy4kb24odHlwZSwgbGlzdGVuZXIpO1xuXHRcdFx0XHRcdFx0dGhpcy4kJGxfdS5zZXQobGlzdGVuZXIsIHVuc3ViKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy4kJGwgPSB7fTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBXZSBkb24ndCBuZWVkIHRoaXMgd2hlbiB3b3JraW5nIHdpdGhpbiBTdmVsdGUgY29kZSwgYnV0IGZvciBjb21wYXRpYmlsaXR5IG9mIHBlb3BsZSB1c2luZyB0aGlzIG91dHNpZGUgb2YgU3ZlbHRlXG5cdFx0Ly8gYW5kIHNldHRpbmcgYXR0cmlidXRlcyB0aHJvdWdoIHNldEF0dHJpYnV0ZSBldGMsIHRoaXMgaXMgaGVscGZ1bFxuXHRcdGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhhdHRyLCBfb2xkVmFsdWUsIG5ld1ZhbHVlKSB7XG5cdFx0XHRpZiAodGhpcy4kJHIpIHJldHVybjtcblx0XHRcdGF0dHIgPSB0aGlzLiQkZ19wKGF0dHIpO1xuXHRcdFx0dGhpcy4kJGRbYXR0cl0gPSBnZXRfY3VzdG9tX2VsZW1lbnRfdmFsdWUoYXR0ciwgbmV3VmFsdWUsIHRoaXMuJCRwX2QsICd0b1Byb3AnKTtcblx0XHRcdHRoaXMuJCRjPy4kc2V0KHsgW2F0dHJdOiB0aGlzLiQkZFthdHRyXSB9KTtcblx0XHR9XG5cblx0XHRkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcblx0XHRcdHRoaXMuJCRjbiA9IGZhbHNlO1xuXHRcdFx0Ly8gSW4gYSBtaWNyb3Rhc2ssIGJlY2F1c2UgdGhpcyBjb3VsZCBiZSBhIG1vdmUgd2l0aGluIHRoZSBET01cblx0XHRcdFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCkgPT4ge1xuXHRcdFx0XHRpZiAoIXRoaXMuJCRjbikge1xuXHRcdFx0XHRcdHRoaXMuJCRjLiRkZXN0cm95KCk7XG5cdFx0XHRcdFx0dGhpcy4kJGMgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdCQkZ19wKGF0dHJpYnV0ZV9uYW1lKSB7XG5cdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHRPYmplY3Qua2V5cyh0aGlzLiQkcF9kKS5maW5kKFxuXHRcdFx0XHRcdChrZXkpID0+XG5cdFx0XHRcdFx0XHR0aGlzLiQkcF9kW2tleV0uYXR0cmlidXRlID09PSBhdHRyaWJ1dGVfbmFtZSB8fFxuXHRcdFx0XHRcdFx0KCF0aGlzLiQkcF9kW2tleV0uYXR0cmlidXRlICYmIGtleS50b0xvd2VyQ2FzZSgpID09PSBhdHRyaWJ1dGVfbmFtZSlcblx0XHRcdFx0KSB8fCBhdHRyaWJ1dGVfbmFtZVxuXHRcdFx0KTtcblx0XHR9XG5cdH07XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHByb3BcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHBhcmFtIHtSZWNvcmQ8c3RyaW5nLCBDdXN0b21FbGVtZW50UHJvcERlZmluaXRpb24+fSBwcm9wc19kZWZpbml0aW9uXG4gKiBAcGFyYW0geyd0b0F0dHJpYnV0ZScgfCAndG9Qcm9wJ30gW3RyYW5zZm9ybV1cbiAqL1xuZnVuY3Rpb24gZ2V0X2N1c3RvbV9lbGVtZW50X3ZhbHVlKHByb3AsIHZhbHVlLCBwcm9wc19kZWZpbml0aW9uLCB0cmFuc2Zvcm0pIHtcblx0Y29uc3QgdHlwZSA9IHByb3BzX2RlZmluaXRpb25bcHJvcF0/LnR5cGU7XG5cdHZhbHVlID0gdHlwZSA9PT0gJ0Jvb2xlYW4nICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ2Jvb2xlYW4nID8gdmFsdWUgIT0gbnVsbCA6IHZhbHVlO1xuXHRpZiAoIXRyYW5zZm9ybSB8fCAhcHJvcHNfZGVmaW5pdGlvbltwcm9wXSkge1xuXHRcdHJldHVybiB2YWx1ZTtcblx0fSBlbHNlIGlmICh0cmFuc2Zvcm0gPT09ICd0b0F0dHJpYnV0ZScpIHtcblx0XHRzd2l0Y2ggKHR5cGUpIHtcblx0XHRcdGNhc2UgJ09iamVjdCc6XG5cdFx0XHRjYXNlICdBcnJheSc6XG5cdFx0XHRcdHJldHVybiB2YWx1ZSA9PSBudWxsID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcblx0XHRcdGNhc2UgJ0Jvb2xlYW4nOlxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPyAnJyA6IG51bGw7XG5cdFx0XHRjYXNlICdOdW1iZXInOlxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT0gbnVsbCA/IG51bGwgOiB2YWx1ZTtcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9XG5cdH0gZWxzZSB7XG5cdFx0c3dpdGNoICh0eXBlKSB7XG5cdFx0XHRjYXNlICdPYmplY3QnOlxuXHRcdFx0Y2FzZSAnQXJyYXknOlxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgJiYgSlNPTi5wYXJzZSh2YWx1ZSk7XG5cdFx0XHRjYXNlICdCb29sZWFuJzpcblx0XHRcdFx0cmV0dXJuIHZhbHVlOyAvLyBjb252ZXJzaW9uIGFscmVhZHkgaGFuZGxlZCBhYm92ZVxuXHRcdFx0Y2FzZSAnTnVtYmVyJzpcblx0XHRcdFx0cmV0dXJuIHZhbHVlICE9IG51bGwgPyArdmFsdWUgOiB2YWx1ZTtcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9XG5cdH1cbn1cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqXG4gKiBUdXJuIGEgU3ZlbHRlIGNvbXBvbmVudCBpbnRvIGEgY3VzdG9tIGVsZW1lbnQuXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9wdWJsaWMuanMnKS5Db21wb25lbnRUeXBlfSBDb21wb25lbnQgIEEgU3ZlbHRlIGNvbXBvbmVudCBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtSZWNvcmQ8c3RyaW5nLCBDdXN0b21FbGVtZW50UHJvcERlZmluaXRpb24+fSBwcm9wc19kZWZpbml0aW9uICBUaGUgcHJvcHMgdG8gb2JzZXJ2ZVxuICogQHBhcmFtIHtzdHJpbmdbXX0gc2xvdHMgIFRoZSBzbG90cyB0byBjcmVhdGVcbiAqIEBwYXJhbSB7c3RyaW5nW119IGFjY2Vzc29ycyAgT3RoZXIgYWNjZXNzb3JzIGJlc2lkZXMgdGhlIG9uZXMgZm9yIHByb3BzIHRoZSBjb21wb25lbnQgaGFzXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHVzZV9zaGFkb3dfZG9tICBXaGV0aGVyIHRvIHVzZSBzaGFkb3cgRE9NXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVfY3VzdG9tX2VsZW1lbnQoXG5cdENvbXBvbmVudCxcblx0cHJvcHNfZGVmaW5pdGlvbixcblx0c2xvdHMsXG5cdGFjY2Vzc29ycyxcblx0dXNlX3NoYWRvd19kb21cbikge1xuXHRjb25zdCBDbGFzcyA9IGNsYXNzIGV4dGVuZHMgU3ZlbHRlRWxlbWVudCB7XG5cdFx0Y29uc3RydWN0b3IoKSB7XG5cdFx0XHRzdXBlcihDb21wb25lbnQsIHNsb3RzLCB1c2Vfc2hhZG93X2RvbSk7XG5cdFx0XHR0aGlzLiQkcF9kID0gcHJvcHNfZGVmaW5pdGlvbjtcblx0XHR9XG5cdFx0c3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG5cdFx0XHRyZXR1cm4gT2JqZWN0LmtleXMocHJvcHNfZGVmaW5pdGlvbikubWFwKChrZXkpID0+XG5cdFx0XHRcdChwcm9wc19kZWZpbml0aW9uW2tleV0uYXR0cmlidXRlIHx8IGtleSkudG9Mb3dlckNhc2UoKVxuXHRcdFx0KTtcblx0XHR9XG5cdH07XG5cdE9iamVjdC5rZXlzKHByb3BzX2RlZmluaXRpb24pLmZvckVhY2goKHByb3ApID0+IHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoQ2xhc3MucHJvdG90eXBlLCBwcm9wLCB7XG5cdFx0XHRnZXQoKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLiQkYyAmJiBwcm9wIGluIHRoaXMuJCRjID8gdGhpcy4kJGNbcHJvcF0gOiB0aGlzLiQkZFtwcm9wXTtcblx0XHRcdH0sXG5cdFx0XHRzZXQodmFsdWUpIHtcblx0XHRcdFx0dmFsdWUgPSBnZXRfY3VzdG9tX2VsZW1lbnRfdmFsdWUocHJvcCwgdmFsdWUsIHByb3BzX2RlZmluaXRpb24pO1xuXHRcdFx0XHR0aGlzLiQkZFtwcm9wXSA9IHZhbHVlO1xuXHRcdFx0XHR0aGlzLiQkYz8uJHNldCh7IFtwcm9wXTogdmFsdWUgfSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xuXHRhY2Nlc3NvcnMuZm9yRWFjaCgoYWNjZXNzb3IpID0+IHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoQ2xhc3MucHJvdG90eXBlLCBhY2Nlc3Nvciwge1xuXHRcdFx0Z2V0KCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy4kJGM/LlthY2Nlc3Nvcl07XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xuXHRDb21wb25lbnQuZWxlbWVudCA9IC8qKiBAdHlwZSB7YW55fSAqLyAoQ2xhc3MpO1xuXHRyZXR1cm4gQ2xhc3M7XG59XG5cbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgU3ZlbHRlIGNvbXBvbmVudHMuIFVzZWQgd2hlbiBkZXY9ZmFsc2UuXG4gKlxuICogQHRlbXBsYXRlIHtSZWNvcmQ8c3RyaW5nLCBhbnk+fSBbUHJvcHM9YW55XVxuICogQHRlbXBsYXRlIHtSZWNvcmQ8c3RyaW5nLCBhbnk+fSBbRXZlbnRzPWFueV1cbiAqL1xuZXhwb3J0IGNsYXNzIFN2ZWx0ZUNvbXBvbmVudCB7XG5cdC8qKlxuXHQgKiAjIyMgUFJJVkFURSBBUElcblx0ICpcblx0ICogRG8gbm90IHVzZSwgbWF5IGNoYW5nZSBhdCBhbnkgdGltZVxuXHQgKlxuXHQgKiBAdHlwZSB7YW55fVxuXHQgKi9cblx0JCQgPSB1bmRlZmluZWQ7XG5cdC8qKlxuXHQgKiAjIyMgUFJJVkFURSBBUElcblx0ICpcblx0ICogRG8gbm90IHVzZSwgbWF5IGNoYW5nZSBhdCBhbnkgdGltZVxuXHQgKlxuXHQgKiBAdHlwZSB7YW55fVxuXHQgKi9cblx0JCRzZXQgPSB1bmRlZmluZWQ7XG5cblx0LyoqIEByZXR1cm5zIHt2b2lkfSAqL1xuXHQkZGVzdHJveSgpIHtcblx0XHRkZXN0cm95X2NvbXBvbmVudCh0aGlzLCAxKTtcblx0XHR0aGlzLiRkZXN0cm95ID0gbm9vcDtcblx0fVxuXG5cdC8qKlxuXHQgKiBAdGVtcGxhdGUge0V4dHJhY3Q8a2V5b2YgRXZlbnRzLCBzdHJpbmc+fSBLXG5cdCAqIEBwYXJhbSB7S30gdHlwZVxuXHQgKiBAcGFyYW0geygoZTogRXZlbnRzW0tdKSA9PiB2b2lkKSB8IG51bGwgfCB1bmRlZmluZWR9IGNhbGxiYWNrXG5cdCAqIEByZXR1cm5zIHsoKSA9PiB2b2lkfVxuXHQgKi9cblx0JG9uKHR5cGUsIGNhbGxiYWNrKSB7XG5cdFx0aWYgKCFpc19mdW5jdGlvbihjYWxsYmFjaykpIHtcblx0XHRcdHJldHVybiBub29wO1xuXHRcdH1cblx0XHRjb25zdCBjYWxsYmFja3MgPSB0aGlzLiQkLmNhbGxiYWNrc1t0eXBlXSB8fCAodGhpcy4kJC5jYWxsYmFja3NbdHlwZV0gPSBbXSk7XG5cdFx0Y2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuXHRcdHJldHVybiAoKSA9PiB7XG5cdFx0XHRjb25zdCBpbmRleCA9IGNhbGxiYWNrcy5pbmRleE9mKGNhbGxiYWNrKTtcblx0XHRcdGlmIChpbmRleCAhPT0gLTEpIGNhbGxiYWNrcy5zcGxpY2UoaW5kZXgsIDEpO1xuXHRcdH07XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtQYXJ0aWFsPFByb3BzPn0gcHJvcHNcblx0ICogQHJldHVybnMge3ZvaWR9XG5cdCAqL1xuXHQkc2V0KHByb3BzKSB7XG5cdFx0aWYgKHRoaXMuJCRzZXQgJiYgIWlzX2VtcHR5KHByb3BzKSkge1xuXHRcdFx0dGhpcy4kJC5za2lwX2JvdW5kID0gdHJ1ZTtcblx0XHRcdHRoaXMuJCRzZXQocHJvcHMpO1xuXHRcdFx0dGhpcy4kJC5za2lwX2JvdW5kID0gZmFsc2U7XG5cdFx0fVxuXHR9XG59XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gQ3VzdG9tRWxlbWVudFByb3BEZWZpbml0aW9uXG4gKiBAcHJvcGVydHkge3N0cmluZ30gW2F0dHJpYnV0ZV1cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW3JlZmxlY3RdXG4gKiBAcHJvcGVydHkgeydTdHJpbmcnfCdCb29sZWFuJ3wnTnVtYmVyJ3wnQXJyYXknfCdPYmplY3QnfSBbdHlwZV1cbiAqL1xuIiwiLy8gZ2VuZXJhdGVkIGR1cmluZyByZWxlYXNlLCBkbyBub3QgbW9kaWZ5XG5cbi8qKlxuICogVGhlIGN1cnJlbnQgdmVyc2lvbiwgYXMgc2V0IGluIHBhY2thZ2UuanNvbi5cbiAqXG4gKiBodHRwczovL3N2ZWx0ZS5kZXYvZG9jcy9zdmVsdGUtY29tcGlsZXIjc3ZlbHRlLXZlcnNpb25cbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBWRVJTSU9OID0gJzQuMC41JztcbmV4cG9ydCBjb25zdCBQVUJMSUNfVkVSU0lPTiA9ICc0JztcbiIsImltcG9ydCB7IFBVQkxJQ19WRVJTSU9OIH0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL3ZlcnNpb24uanMnO1xuXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpXG5cdC8vIEB0cy1pZ25vcmVcblx0KHdpbmRvdy5fX3N2ZWx0ZSB8fCAod2luZG93Ll9fc3ZlbHRlID0geyB2OiBuZXcgU2V0KCkgfSkpLnYuYWRkKFBVQkxJQ19WRVJTSU9OKTtcbiIsIjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gIGV4cG9ydCBsZXQga2V5ID0gXCJcIjtcbiAgZXhwb3J0IGxldCB2YWx1ZTpcbiAgICB8IHN0cmluZ1xuICAgIHwgbnVtYmVyXG4gICAgfCBib29sZWFuXG4gICAgfCB1bmRlZmluZWRcbiAgICB8IG9iamVjdFxuICAgIHwgQXJyYXk8dW5rbm93bj47XG4gIGV4cG9ydCBsZXQgaW5kZW50OiBudW1iZXIgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gIGV4cG9ydCBsZXQgaW5kZXggPSAtMTtcbiAgZXhwb3J0IGxldCBwYXJlbnRBcnJheSA9IGZhbHNlO1xuPC9zY3JpcHQ+XG5cbjxkaXZcbiAgY2xhc3M9XCJsaW5lXCJcbiAgY2xhc3M6aW5saW5lPXtpbmRleCA9PSAwfVxuICBkYXRhLWluZGV4PXtpbmRleH1cbiAgZGF0YS1pbmRlbnQ9e2luZGVudH1cbiAgey4uLiQkcmVzdFByb3BzfVxuPlxuICB7I2lmIGluZGVudCAmJiBpbmRlbnQgPiAwICYmIGluZGV4ICE9IDB9XG4gICAgPCEtLSBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc3ZlbHRlL25vLWF0LWh0bWwtdGFncyAtLT5cbiAgICB7QGh0bWwgQXJyYXkoaW5kZW50ICogMiAtIDEpXG4gICAgICAuZmlsbChcIiZuYnNwO1wiKVxuICAgICAgLmpvaW4oXCJcIil9XG4gIHsvaWZ9XG4gIHsjaWYga2V5fVxuICAgIDxzcGFuIGNsYXNzPVwia2V5XCI+e2tleX06PC9zcGFuPlxuICB7OmVsc2V9XG4gICAgPHNwYW4gY2xhc3M9XCJzeW1ib2xcIj4tIDwvc3Bhbj5cbiAgey9pZn1cbiAgeyNpZiBBcnJheS5pc0FycmF5KHZhbHVlKX1cbiAgICB7I2VhY2ggdmFsdWUgYXMgdmFsdWV9XG4gICAgICA8c3ZlbHRlOnNlbGZcbiAgICAgICAge3ZhbHVlfVxuICAgICAgICBpbmRlbnQ9e2luZGVudCAhPT0gdW5kZWZpbmVkID8gaW5kZW50ICsgMSA6IDF9XG4gICAgICAgIHBhcmVudEFycmF5PXt0cnVlfVxuICAgICAgLz5cbiAgICB7L2VhY2h9XG4gIHs6ZWxzZSBpZiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCJ9XG4gICAgeyNlYWNoIE9iamVjdC5lbnRyaWVzKHZhbHVlKSBhcyBba2V5LCB2YWxdLCBpbmRleH1cbiAgICAgIDxzdmVsdGU6c2VsZlxuICAgICAgICB7a2V5fVxuICAgICAgICB2YWx1ZT17dmFsfVxuICAgICAgICBpbmRlbnQ9e2luZGVudCAhPT0gdW5kZWZpbmVkID8gaW5kZW50ICsgMSA6IDF9XG4gICAgICAgIGluZGV4PXtwYXJlbnRBcnJheSA/IGluZGV4IDogLTF9XG4gICAgICAgIGRhdGEteW9sbz17XCJhc2RmXCJ9XG4gICAgICAvPlxuICAgIHsvZWFjaH1cbiAgezplbHNlIGlmIHZhbHVlICE9PSB1bmRlZmluZWR9XG4gICAgPHNwYW5cbiAgICAgIGNsYXNzPVwidmFsdWVcIlxuICAgICAgY2xhc3M6c3RyaW5nPXt0eXBlb2YgdmFsdWUgPT0gXCJzdHJpbmdcIn1cbiAgICAgIGNsYXNzOm51bWJlcj17dHlwZW9mIHZhbHVlID09IFwibnVtYmVyXCJ9XG4gICAgICBjbGFzczpib29sZWFuPXt0eXBlb2YgdmFsdWUgPT0gXCJib29sZWFuXCJ9Pnt2YWx1ZX08L3NwYW5cbiAgICA+XG4gIHsvaWZ9XG48L2Rpdj5cblxuPHN0eWxlPlxuICAubGluZSB7XG4gICAgcGFkZGluZy1yaWdodDogMC41cmVtO1xuICB9XG4gIC5pbmxpbmUge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgfVxuICAua2V5IHtcbiAgICBjb2xvcjogdmFyKC0ta2V5LWNvbG9yKTtcbiAgfVxuXG4gIC5zdHJpbmcge1xuICAgIGNvbG9yOiB2YXIoLS1zdHJpbmctY29sb3IpO1xuICB9XG5cbiAgLm51bWJlciB7XG4gICAgY29sb3I6IHZhcigtLW51bWJlci1jb2xvcik7XG4gIH1cblxuICAuYm9vbGVhbiB7XG4gICAgY29sb3I6IHZhcigtLWJvb2xlYW4tY29sb3IpO1xuICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0ZXhwb3J0IGxldCB3aWR0aCA9IDUwO1xuXHRleHBvcnQgbGV0IGhlaWdodDogbnVtYmVyIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuPC9zY3JpcHQ+XG5cbjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHt3aWR0aH0ge2hlaWdodH0gdmlld0JveD1cIi0yLjI1IDEwMy43NSAzNjQuMDAgMTU2LjAwXCJcblx0PjxkZWZzXG5cdFx0PjxjbGlwUGF0aCBpZD1cImNsaXAtcGF0aFwiXG5cdFx0XHQ+PHBhdGhcblx0XHRcdFx0ZD1cIk0xMS45MTcgMTE3LjkwM0g0Ni4yMnYzNC4zMDNIMTEuOTE3elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTFcIlxuXHRcdFx0XHR0cmFuc2Zvcm09XCJyb3RhdGUoLTQ1LjIxMyAyOS4wNjkgMTM1LjA1NSlcIlxuXHRcdFx0Lz48L2NsaXBQYXRoXG5cdFx0PjxjbGlwUGF0aCBpZD1cImNsaXAtcGF0aC0yXCJcblx0XHRcdD48cGF0aFxuXHRcdFx0XHRkPVwiTTg1LjI5MSAxMjQuNzA4aDIwLjEydjIwLjEyaC0yMC4xMnpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0xXCJcblx0XHRcdFx0dHJhbnNmb3JtPVwicm90YXRlKC00NS4yMTMgOTUuMzUyIDEzNC43NjgpXCJcblx0XHRcdC8+PC9jbGlwUGF0aFxuXHRcdD48c3R5bGU+XG5cdFx0XHQuY2xzLTEge1xuXHRcdFx0XHRmaWxsOiBub25lO1xuXHRcdFx0fVxuXHRcdFx0LmNscy0yIHtcblx0XHRcdFx0ZmlsbDogY3VycmVudENvbG9yO1xuXHRcdFx0fVxuXHRcdFx0LmNscy0zIHtcblx0XHRcdFx0b3BhY2l0eTogMC42O1xuXHRcdFx0fVxuXHRcdDwvc3R5bGU+PC9kZWZzXG5cdD48cGF0aFxuXHRcdGQ9XCJNNDMuNTU4IDIzMy43NTZhMjcuNTEyIDI3LjUxMiAwIDAgMCA5Ljg1NyA4LjE2IDI5LjU0NiAyOS41NDYgMCAwIDAgMTMuNTE0IDMuMDY5IDI5LjAyNyAyOS4wMjcgMCAwIDAgMTEuMDk3LTEuODkzIDE5LjI2NCAxOS4yNjQgMCAwIDAgNy4zNzctNS4xNTcgMTkuODkxIDE5Ljg5MSAwIDAgMCA0LjA0OC03LjYzOSAzNC4xMTQgMzQuMTE0IDAgMCAwIDEuMjQtOS4zMzR2LTEwLjk2N2gtLjI2MWEyMy41NDcgMjMuNTQ3IDAgMCAxLTEwLjE4NCA4Ljg3OCAzMS40MTYgMzEuNDE2IDAgMCAxLTEyLjY2NSAyLjYxIDMyLjkzOCAzMi45MzggMCAwIDEtMTIuNDY4LTIuMzUgMzEuNzE1IDMxLjcxNSAwIDAgMS0xMC4xMTktNi40NjIgMjkuNzM1IDI5LjczNSAwIDAgMS02Ljc4OS05Ljg1OCAzMC45MzQgMzAuOTM0IDAgMCAxLTIuNDgxLTEyLjQwMyAzMi40NDYgMzIuNDQ2IDAgMCAxIDIuMzUtMTIuNDAzIDMxLjg4NCAzMS44ODQgMCAwIDEgNi40NjMtMTAuMDU0IDI5LjE1IDI5LjE1IDAgMCAxIDkuNzkyLTYuNzIzIDMxLjU0NiAzMS41NDYgMCAwIDEgMTIuNDctMi40MTYgMzQuODY4IDM0Ljg2OCAwIDAgMSA1LjgwOS41MjIgMjcuNTEyIDI3LjUxMiAwIDAgMSA2LjEzNiAxLjgyOCAyOC4yNjggMjguMjY4IDAgMCAxIDExLjY4NiA5LjRoLjI2di0xMC4xODNoOC42MTh2NjAuNTgxYTQ5LjE1NCA0OS4xNTQgMCAwIDEtMS4yNCAxMC41NzUgMjYuMTIxIDI2LjEyMSAwIDAgMS00LjgzMSAxMC4zMTQgMjcuNTA5IDI3LjUwOSAwIDAgMS05Ljk4OCA3LjgzNXEtNi4zOTkgMy4xMzItMTYuNzEyIDMuMTMyYTQxLjk3NyA0MS45NzcgMCAwIDEtMTYuMzItMy4wMDIgMzcuOTI5IDM3LjkyOSAwIDAgMS0xMy4wNTctOS4yN3ptMS41NjYtNDMuNjA3YTIzLjM5NCAyMy4zOTQgMCAwIDAgMS43NjQgOS4wNzQgMjMuODM3IDIzLjgzNyAwIDAgMCA0LjgzIDcuNDQyIDIzLjM2IDIzLjM2IDAgMCAwIDcuMTggNS4wOTIgMjEuMTMxIDIxLjEzMSAwIDAgMCA4Ljk0NSAxLjg5MyAyMy45NSAyMy45NSAwIDAgMCAxNi40NS02LjQ2MiAyMC44IDIwLjggMCAwIDAgNS4wMjctNy4zNzggMjMuNzYzIDIzLjc2MyAwIDAgMCAxLjYzMi05LjY2IDI1Ljk5NCAyNS45OTQgMCAwIDAtMS41NjctOS4wNzUgMjEuNzk1IDIxLjc5NSAwIDAgMC00LjU3LTcuNDQyIDIyLjA4MyAyMi4wODMgMCAwIDAtNy4zMTEtNS4wOTIgMjMuOCAyMy44IDAgMCAwLTkuNjYxLTEuODkzIDIxLjE1IDIxLjE1IDAgMCAwLTguOTQ0IDEuODkzIDIzLjQyNCAyMy40MjQgMCAwIDAtNy4xODEgNS4wOTIgMjMuODkgMjMuODkgMCAwIDAtNC44MyA3LjQ0MiAyMy40MTIgMjMuNDEyIDAgMCAwLTEuNzY0IDkuMDc0em04OS4zMDQgMzEuMzM1aC05LjR2LTkyLjQzOGgyOC40NjJxMTQuMSAwIDIyLjI2MSA2LjEzNiA4LjE1OCA2LjEzOSA4LjE2IDE4LjU0YTIzLjA5OSAyMy4wOTkgMCAwIDEtNi4wNyAxNi4yNTVxLTYuMDcyIDYuNTk1LTE3LjU2MSA3LjYzOGwyNi42MzUgNDMuODY5aC0xMS40OWwtMjUuMzMtNDIuOTU1aC0xNS42Njd6bTAtNTEuNTczaDE2LjcxMmEzNy41NjcgMzcuNTY3IDAgMCAwIDEwLjY0LTEuMzA1IDE5Ljc2MSAxOS43NjEgMCAwIDAgNi45ODYtMy40NiAxMi42MzUgMTIuNjM1IDAgMCAwIDMuNzg2LTUuMDkxIDE2Ljg5NiAxNi44OTYgMCAwIDAgMS4xNzUtNi4zMzMgMTYuNTUxIDE2LjU1MSAwIDAgMC0xLjE3NS02LjIwMiAxMy4xMzkgMTMuMTM5IDAgMCAwLTMuNzg2LTUuMTU3IDE4LjQ2NiAxOC40NjYgMCAwIDAtNi45ODUtMy40NiAzOS41MDkgMzkuNTA5IDAgMCAwLTEwLjY0MS0xLjI0aC0xNi43MTJ6bTY4LjY3NC00MC44NjVIMjMwcTE0LjEgMCAyMi4yNiA2LjEzNiA4LjE1OCA2LjEzOSA4LjE2IDE4LjU0IDAgMTIuNDA1LTguMTYgMTguNjA1LTguMTYgNi4yMDItMjIuMjYgNi4yMDJoLTE3LjQ5NnY0Mi45NTVoLTkuNHptOS40MDEgNDAuODY1aDE1LjE0NmEzNy41NzcgMzcuNTc3IDAgMCAwIDEwLjY0LTEuMzA1IDE5Ljc3MyAxOS43NzMgMCAwIDAgNi45ODYtMy40NiAxMi42MzkgMTIuNjM5IDAgMCAwIDMuNzg2LTUuMDkxIDE2Ljg4MyAxNi44ODMgMCAwIDAgMS4xNzUtNi4zMzMgMTYuNTM4IDE2LjUzOCAwIDAgMC0xLjE3NS02LjIwMiAxMy4xNDQgMTMuMTQ0IDAgMCAwLTMuNzg2LTUuMTU3IDE4LjQ3NiAxOC40NzYgMCAwIDAtNi45ODYtMy40NiAzOS41MiAzOS41MiAwIDAgMC0xMC42NC0xLjI0aC0xNS4xNDZ6bTE0Mi4zMSAzNi45NWEzNS44NTMgMzUuODUzIDAgMCAxLTUuODA5IDYuNjU5IDM2LjcyIDM2LjcyIDAgMCAxLTcuOSA1LjQxOCA0NS4wNTMgNDUuMDUzIDAgMCAxLTkuNTk1IDMuNTkgNDQuMzQyIDQ0LjM0MiAwIDAgMS0xMC45MDMgMS4zMDYgNDkuNDUgNDkuNDUgMCAwIDEtMTkuMTI2LTMuNjU2IDQ1Ljg4NSA0NS44ODUgMCAwIDEtMjUuMzk1LTI1LjQ2IDUzLjU5NSA1My41OTUgMCAwIDEgMC0zOC45MDcgNDUuODggNDUuODggMCAwIDEgMjUuMzk1LTI1LjQ2IDQ5LjQzOCA0OS40MzggMCAwIDEgMTkuMTI2LTMuNjU1IDQ2LjczMSA0Ni43MzEgMCAwIDEgMTcuMjM1IDMuMzk0IDM0Ljc2NSAzNC43NjUgMCAwIDEgMTQuNzUzIDExLjIyOWwtOC4yMjUgNi4xMzZhMjIuNTA4IDIyLjUwOCAwIDAgMC0zLjkxNy00LjQzOSAyOC41OTcgMjguNTk3IDAgMCAwLTUuNjc5LTMuOTE3IDM1LjQ1NCAzNS40NTQgMCAwIDAtNi44NTUtMi43NDIgMjYuNTIxIDI2LjUyMSAwIDAgMC03LjMxMi0xLjA0NCAzNy40OTggMzcuNDk4IDAgMCAwLTE1LjkyOCAzLjI2NCAzNi4xNzQgMzYuMTc0IDAgMCAwLTExLjk0NiA4Ljc0NyAzOC40ODIgMzguNDgyIDAgMCAwLTcuNTA4IDEyLjczIDQ1LjYxMiA0NS42MTIgMCAwIDAgMCAzMC40MiAzOC40NjUgMzguNDY1IDAgMCAwIDcuNTA4IDEyLjczIDM2LjEzIDM2LjEzIDAgMCAwIDExLjk0NiA4Ljc0OCAzNy40NTggMzcuNDU4IDAgMCAwIDE1LjkyOCAzLjI2NCA0MC4zNjIgNDAuMzYyIDAgMCAwIDcuMjQ2LS42NTIgMzAuMDk3IDMwLjA5NyAwIDAgMCA3LjA1MS0yLjIyIDI2LjY3OSAyNi42NzkgMCAwIDAgNi41MjktNC4yNDMgMzEuNDY0IDMxLjQ2NCAwIDAgMCA1LjY3OC02LjcyM3pcIlxuXHRcdGNsYXNzPVwiY2xzLTJcIlxuXHQvPjxnIGNsYXNzPVwiY2xzLTNcIlxuXHRcdD48cGF0aCBkPVwiTTQuODEzIDEzNS4xNDVMMjguOTc4IDExMC44bDI0LjM0NiAyNC4xNjYtMjQuMTY2IDI0LjM0NnpcIiBjbGFzcz1cImNscy0yXCIgLz48Z1xuXHRcdFx0Y2xpcC1wYXRoPVwidXJsKCNjbGlwLXBhdGgpXCJcblx0XHRcdD48cGF0aCBkPVwiTTUuMjQyIDExMC44bC0uNDI5IDMuNzk4VjExMC44aC40Mjl6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk01LjgxIDExMC44bC0uOTk3IDguODE3di01LjAxOWwuNDI5LTMuNzk4aC41Njh6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNNi4zNzcgMTEwLjhsLTEuNTY0IDEzLjgzNXYtNS4wMThsLjk5Ny04LjgxN2guNTY3em0uNTY3IDBsLTIuMTMxIDE4Ljg1NHYtNS4wMTlMNi4zNzcgMTEwLjhoLjU2N3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk03LjUxIDExMC44bC0yLjY5NyAyMy44NzR2LTUuMDJMNi45NDQgMTEwLjhoLjU2NnpcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTguMDc4IDExMC44bC0zLjI2NSAyOC44OTN2LTUuMDE5TDcuNTEgMTEwLjhoLjU2OHptLjU2NyAwbC0zLjgzMiAzMy45MTF2LTUuMDE4TDguMDc4IDExMC44aC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNOS4yMTIgMTEwLjhsLTQuMzk5IDM4Ljkzdi01LjAxOUw4LjY0NSAxMTAuOGguNTY3elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNOS43NzkgMTEwLjhsLTQuOTY2IDQzLjk0OXYtNS4wMTlsNC4zOTktMzguOTNoLjU2N3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0xMC4zNDcgMTEwLjhsLTUuNDc5IDQ4LjQ4LS4wNTUtLjAwNnYtNC41MjVMOS43NzkgMTEwLjhoLjU2OHptLjU2NiAwbC01LjQ4MSA0OC41MWgtLjMwMWwtLjI2My0uMDMgNS40NzktNDguNDhoLjU2NnpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk0xMS40OCAxMTAuOGwtNS40ODEgNDguNTFoLS41NjdsNS40ODEtNDguNTFoLjU2N3pcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTEyLjA0OCAxMTAuOGwtNS40ODIgNDguNTFoLS41NjdsNS40ODEtNDguNTFoLjU2OHpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0xMi42MTUgMTEwLjhsLTUuNDgyIDQ4LjUxaC0uNTY3bDUuNDgyLTQ4LjUxaC41Njd6bS41NjcgMGwtNS40ODEgNDguNTFoLS41NjhsNS40ODItNDguNTFoLjU2N3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk0xMy43NDkgMTEwLjhsLTUuNDgxIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njd6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0xNC4zMTYgMTEwLjhsLTUuNDgxIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNMTQuODgzIDExMC44bC01LjQ4MiA0OC41MWgtLjU2Nmw1LjQ4MS00OC41MWguNTY3elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTUuNDUgMTEwLjhsLTUuNDgxIDQ4LjUxaC0uNTY4bDUuNDgyLTQ4LjUxaC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTYuMDE3IDExMC44bC01LjQ4MSA0OC41MWgtLjU2N2w1LjQ4MS00OC41MWguNTY3em0uNTY4IDBsLTUuNDgyIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njh6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNMTcuMTUxIDExMC44bC01LjQ4MSA0OC41MWgtLjU2N2w1LjQ4Mi00OC41MWguNTY2elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTcuNzE4IDExMC44bC01LjQ4IDQ4LjUxaC0uNTY4bDUuNDgxLTQ4LjUxaC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTguMjg1IDExMC44bC01LjQ4MSA0OC41MWgtLjU2Nmw1LjQ4LTQ4LjUxaC41Njd6bS41NjggMGwtNS40ODIgNDguNTFoLS41NjdsNS40ODEtNDguNTFoLjU2OHpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk0xOS40MiAxMTAuOGwtNS40ODIgNDguNTFoLS41NjdsNS40ODItNDguNTFoLjU2N3pcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTE5Ljk4NyAxMTAuOGwtNS40ODEgNDguNTFoLS41NjhsNS40ODItNDguNTFoLjU2N3ptLjU2NiAwbC01LjQ4IDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41NjZ6bS41NjggMGwtNS40ODEgNDguNTFoLS41NjdsNS40OC00OC41MWguNTY4elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aCBkPVwiTTIxLjY4OCAxMTAuOGwtNS40ODIgNDguNTFoLS41NjZsNS40ODEtNDguNTFoLjU2N3pcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTIyLjI1NSAxMTAuOGwtNS40ODEgNDguNTFoLS41NjhsNS40ODItNDguNTFoLjU2N3ptLjU2NyAwbC01LjQ4MSA0OC41MWgtLjU2N2w1LjQ4MS00OC41MWguNTY3elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aCBkPVwiTTIzLjM5IDExMC44bC01LjQ4MiA0OC41MWgtLjU2N2w1LjQ4MS00OC41MWguNTY4elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMjMuOTU2IDExMC44bC01LjQ4MSA0OC41MWgtLjU2N2w1LjQ4Mi00OC41MWguNTY2em0uNTY3IDBsLTUuNDgxIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNMjUuMDkxIDExMC44bC01LjQ4MiA0OC41MWgtLjU2N2w1LjQ4MS00OC41MWguNTY4elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMjUuNjU4IDExMC44bC01LjQ4MiA0OC41MWgtLjU2N2w1LjQ4Mi00OC41MWguNTY3elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aCBkPVwiTTI2LjIyNSAxMTAuOGwtNS40ODIgNDguNTFoLS41NjdsNS40ODItNDguNTFoLjU2N3pcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTI2Ljc5MiAxMTAuOGwtNS40ODEgNDguNTFoLS41NjhsNS40ODItNDguNTFoLjU2N3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk0yNy4zNTkgMTEwLjhsLTUuNDgxIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njd6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0yNy45MjYgMTEwLjhsLTUuNDgyIDQ4LjUxaC0uNTY2bDUuNDgxLTQ4LjUxaC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMjguNDkzIDExMC44bC01LjQ4MSA0OC41MWgtLjU2OGw1LjQ4Mi00OC41MWguNTY3em0uNTY3IDBsLTUuNDgxIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNMjkuNjI4IDExMC44bC01LjQ4MiA0OC41MWgtLjU2N2w1LjQ4MS00OC41MWguNTY4elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMzAuMTk0IDExMC44bC01LjQ4MSA0OC41MWgtLjU2N2w1LjQ4Mi00OC41MWguNTY2elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aFxuXHRcdFx0XHRkPVwiTTMwLjc2MSAxMTAuOGwtNS40OCA0OC41MWgtLjU2OGw1LjQ4MS00OC41MWguNTY3em0uNTY3IDBsLTUuNDgxIDQ4LjUxaC0uNTY2bDUuNDgtNDguNTFoLjU2N3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk0zMS44OTYgMTEwLjhsLTUuNDgyIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njh6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0zMi40NjMgMTEwLjhsLTUuNDgyIDQ4LjUxaC0uNTY3bDUuNDgyLTQ4LjUxaC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNMzMuMDMgMTEwLjhsLTUuNDgxIDQ4LjUxaC0uNTY4bDUuNDgyLTQ4LjUxaC41Njd6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0zMy41OTYgMTEwLjhsLTUuNDggNDguNTFoLS41NjdsNS40ODEtNDguNTFoLjU2NnptLjU2OCAwbC01LjQ4MSA0OC41MWgtLjU2N2w1LjQ4LTQ4LjUxaC41Njh6bS41NjcgMGwtNS40ODIgNDguNTFoLS41NjZsNS40ODEtNDguNTFoLjU2N3ptLjU2NyAwbC01LjQ4MSA0OC41MWgtLjU2OGw1LjQ4Mi00OC41MWguNTY3em0uNTY3IDBsLTUuNDgxIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njd6bS41NjggMGwtNS40ODIgNDguNTFoLS41NjdsNS40ODEtNDguNTFoLjU2OHptLjU2NiAwbC01LjQ4MSA0OC41MWgtLjU2N2w1LjQ4Mi00OC41MWguNTY2em0uNTY3IDBsLTUuNDgxIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNMzguMTMzIDExMC44bC01LjQ4MSA0OC41MWgtLjU2N2w1LjQ4MS00OC41MWguNTY3elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMzguNzAxIDExMC44bC01LjQ4MiA0OC41MWgtLjU2N2w1LjQ4MS00OC41MWguNTY4elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aCBkPVwiTTM5LjI2OCAxMTAuOGwtNS40ODIgNDguNTFoLS41NjdsNS40ODItNDguNTFoLjU2N3pcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTM5LjgzNSAxMTAuOGwtNS40ODEgNDguNTFoLS41NjhsNS40ODItNDguNTFoLjU2N3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk00MC40MDIgMTEwLjhsLTUuNDgxIDQ4LjUxaC0uNTY3bDUuNDgxLTQ4LjUxaC41Njd6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk00MC45NjkgMTEwLjhsLTUuNDgyIDQ4LjUxaC0uNTY2bDUuNDgxLTQ4LjUxaC41Njd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNNDEuNTM2IDExMC44bC01LjQ4MiA0OC41MWgtLjU2N2w1LjQ4Mi00OC41MWguNTY3elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNNDIuMTAzIDExMC44bC01LjQ4MSA0OC41MWgtLjU2OGw1LjQ4Mi00OC41MWguNTY3elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aCBkPVwiTTQyLjY3MSAxMTAuOGwtNS40ODIgNDguNTFoLS41NjdsNS40ODEtNDguNTFoLjU2OHpcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTQzLjIzNyAxMTAuOGwtNS40ODEgNDguNTFoLS41NjdsNS40ODItNDguNTFoLjU2NnpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk00My44MDQgMTEwLjhsLTUuNDggNDguNTFoLS41NjhsNS40ODEtNDguNTFoLjU2N3pcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTUzLjAwNiAxMTAuOGwuMzE4LjAzNXY0OC40NzVoLTE1bDUuNDgtNDguNTFoOS4yMDJ6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjwvZ1xuXHRcdD48L2dcblx0PjxnIGNsYXNzPVwiY2xzLTNcIlxuXHRcdD48cGF0aCBkPVwiTTgxLjEyNCAxMzQuODIybDE0LjE3NC0xNC4yOCAxNC4yOCAxNC4xNzQtMTQuMTc0IDE0LjI4elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxnXG5cdFx0XHRjbGlwLXBhdGg9XCJ1cmwoI2NsaXAtcGF0aC0yKVwiXG5cdFx0XHQ+PHBhdGggZD1cIk0xMDkuNTc5IDEyOC44NTJsLS4zODctOC4zMTJoLjM4N3Y4LjMxMnpcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTEwOS41NzkgMTM3LjU4NWwtLjc5NC0xNy4wNDVoLjQwN2wuMzg3IDguMzEydjguNzMzem0wIDguNzMzbC0xLjIwMS0yNS43NzhoLjQwN2wuNzk0IDE3LjA0NXY4LjczM3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0xMDkuMjk3IDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMjAxIDI1Ljc3OHYyLjY3N2gtLjI4MnpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk0xMDguODkgMTQ4Ljk5NWwtMS4zMjUtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA3elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTA4LjQ4MyAxNDguOTk1bC0xLjMyNS0yOC40NTVoLjQwN2wxLjMyNSAyOC40NTVoLS40MDd6bS0uNDA3IDBsLTEuMzI1LTI4LjQ1NWguNDA3bDEuMzI1IDI4LjQ1NWgtLjQwN3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk0xMDcuNjcgMTQ4Ljk5NWwtMS4zMjUtMjguNDU1aC40MDZsMS4zMjUgMjguNDU1aC0uNDA2elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTA3LjI2MyAxNDguOTk1bC0xLjMyNi0yOC40NTVoLjQwOGwxLjMyNSAyOC40NTVoLS40MDd6bS0uNDA3IDBsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI2IDI4LjQ1NWgtLjQwN3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk0xMDYuNDUgMTQ4Ljk5NWwtMS4zMjYtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA2elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTA2LjA0MyAxNDguOTk1bC0xLjMyNS0yOC40NTVoLjQwNmwxLjMyNiAyOC40NTVoLS40MDd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNMTA1LjYzNiAxNDguOTk1bC0xLjMyNi0yOC40NTVoLjQwOGwxLjMyNSAyOC40NTVoLS40MDd6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0xMDUuMjI5IDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI2IDI4LjQ1NWgtLjQwN3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk0xMDQuODIzIDE0OC45OTVsLTEuMzI2LTI4LjQ1NWguNDA3bDEuMzI1IDI4LjQ1NWgtLjQwNnpcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTEwNC40MTYgMTQ4Ljk5NWwtMS4zMjYtMjguNDU1aC40MDdsMS4zMjYgMjguNDU1aC0uNDA3elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aCBkPVwiTTEwNC4wMDkgMTQ4Ljk5NWwtMS4zMjYtMjguNDU1aC40MDdsMS4zMjYgMjguNDU1aC0uNDA3elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTAzLjYwMiAxNDguOTk1bC0xLjMyNS0yOC40NTVoLjQwNmwxLjMyNiAyOC40NTVoLS40MDd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNMTAzLjE5NiAxNDguOTk1bC0xLjMyNS0yOC40NTVoLjQwNmwxLjMyNSAyOC40NTVoLS40MDZ6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0xMDIuNzg4IDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA4bDEuMzI1IDI4LjQ1NWgtLjQwOHpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGhcblx0XHRcdFx0ZD1cIk0xMDIuMzgyIDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI1IDI4LjQ1NWgtLjQwNnptLS40MDcgMGwtMS4zMjUtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA3elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aCBkPVwiTTEwMS41NjkgMTQ4Ljk5NWwtMS4zMjUtMjguNDU1aC40MDZsMS4zMjUgMjguNDU1aC0uNDA2elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTAxLjE2MSAxNDguOTk1bC0xLjMyNS0yOC40NTVoLjQwOGwxLjMyNSAyOC40NTVoLS40MDh6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNMTAwLjc1NSAxNDguOTk1TDk5LjQzIDEyMC41NGguNDA2bDEuMzI1IDI4LjQ1NWgtLjQwNnptLS40MDcgMGwtMS4zMjUtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA3elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aCBkPVwiTTk5Ljk0MiAxNDguOTk1bC0xLjMyNi0yOC40NTVoLjQwN2wxLjMyNSAyOC40NTVoLS40MDZ6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk05OS41MzUgMTQ4Ljk5NWwtMS4zMjYtMjguNDU1aC40MDdsMS4zMjYgMjguNDU1aC0uNDA3elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aCBkPVwiTTk5LjEyOCAxNDguOTk1bC0xLjMyNS0yOC40NTVoLjQwNmwxLjMyNiAyOC40NTVoLS40MDd6XCIgY2xhc3M9XCJjbHMtMlwiIC8+PHBhdGhcblx0XHRcdFx0ZD1cIk05OC43MjIgMTQ4Ljk5NWwtMS4zMjYtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA2em0tLjQwOCAwbC0xLjMyNS0yOC40NTVoLjQwN2wxLjMyNiAyOC40NTVoLS40MDh6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNOTcuOTA4IDE0OC45OTVsLTEuMzI2LTI4LjQ1NWguNDA3bDEuMzI1IDI4LjQ1NWgtLjQwNnpcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTk3LjUwMSAxNDguOTk1bC0xLjMyNS0yOC40NTVoLjQwNmwxLjMyNiAyOC40NTVoLS40MDd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNOTcuMDk1IDE0OC45OTVsLTEuMzI2LTI4LjQ1NWguNDA3bDEuMzI1IDI4LjQ1NWgtLjQwNnptLS40MDggMGwtMS4zMjUtMjguNDU1aC40MDdsMS4zMjYgMjguNDU1aC0uNDA4elwiXG5cdFx0XHRcdGNsYXNzPVwiY2xzLTJcIlxuXHRcdFx0Lz48cGF0aFxuXHRcdFx0XHRkPVwiTTk2LjI4MSAxNDguOTk1bC0xLjMyNi0yOC40NTVoLjQwN2wxLjMyNSAyOC40NTVoLS40MDZ6bS0uNDA3IDBsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI2IDI4LjQ1NWgtLjQwN3ptLS40MDcgMGwtMS4zMjUtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA3em0tLjQwNyAwbC0xLjMyNS0yOC40NTVoLjQwN2wxLjMyNSAyOC40NTVoLS40MDd6bS0uNDA2IDBsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI1IDI4LjQ1NWgtLjQwNnptLS40MDcgMGwtMS4zMjUtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA3em0tLjQwNyAwbC0xLjMyNS0yOC40NTVoLjQwN2wxLjMyNSAyOC40NTVoLS40MDd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNOTMuNDMzIDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA3bDEuMzI1IDI4LjQ1NWgtLjQwN3pcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTkzLjAyNyAxNDguOTk1bC0xLjMyNS0yOC40NTVoLjQwNmwxLjMyNSAyOC40NTVoLS40MDZ6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNOTIuNjIgMTQ4Ljk5NWwtMS4zMjUtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA3em0tLjQwNyAwbC0xLjMyNS0yOC40NTVoLjQwN2wxLjMyNSAyOC40NTVoLS40MDd6bS0uNDA3IDBsLTEuMzI1LTI4LjQ1NWguNDA3bDEuMzI1IDI4LjQ1NWgtLjQwN3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk05MS40IDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI1IDI4LjQ1NUg5MS40elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNOTAuOTkzIDE0OC45OTVsLTEuMzI2LTI4LjQ1NWguNDA4bDEuMzI1IDI4LjQ1NWgtLjQwN3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk05MC41ODYgMTQ4Ljk5NWwtMS4zMjUtMjguNDU1aC40MDZsMS4zMjYgMjguNDU1aC0uNDA3elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNOTAuMTggMTQ4Ljk5NWwtMS4zMjYtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA2em0tLjQwNyAwbC0xLjMyNS0yOC40NTVoLjQwNmwxLjMyNiAyOC40NTVoLS40MDd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNODkuMzY2IDE0OC45OTVMODguMDQgMTIwLjU0aC40MDhsMS4zMjUgMjguNDU1aC0uNDA3elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNODguOTU5IDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI2IDI4LjQ1NWgtLjQwN3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk04OC41NTMgMTQ4Ljk5NWwtMS4zMjYtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA2elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNODguMTQ2IDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI2IDI4LjQ1NWgtLjQwN3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGhcblx0XHRcdFx0ZD1cIk04Ny43MzkgMTQ4Ljk5NWwtMS4zMjYtMjguNDU1aC40MDhsMS4zMjUgMjguNDU1aC0uNDA3em0tLjQwNyAwbC0xLjMyNS0yOC40NTVoLjQwNmwxLjMyNiAyOC40NTVoLS40MDd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNODYuOTI2IDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI1IDI4LjQ1NWgtLjQwNnpcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTg2LjUxOSAxNDguOTk1bC0xLjMyNi0yOC40NTVoLjQwOGwxLjMyNSAyOC40NTVoLS40MDd6bS0uNDA3IDBsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI2IDI4LjQ1NWgtLjQwN3ptLS40MDcgMEw4NC4zOCAxMjAuNTRoLjQwN2wxLjMyNSAyOC40NTVoLS40MDd6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNODUuMjk5IDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA2bDEuMzI1IDI4LjQ1NWgtLjQwNnpcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTg0Ljg5MSAxNDguOTk1bC0xLjMyNS0yOC40NTVoLjQwOGwxLjMyNSAyOC40NTVoLS40MDh6XCJcblx0XHRcdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdFx0XHQvPjxwYXRoIGQ9XCJNODQuNDg1IDE0OC45OTVMODMuMTYgMTIwLjU0aC40MDZsMS4zMjUgMjguNDU1aC0uNDA2elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNODQuMDc4IDE0OC45OTVsLTEuMzI1LTI4LjQ1NWguNDA3bDEuMzI1IDI4LjQ1NWgtLjQwN3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk04My42NzIgMTQ4Ljk5NWwtMS4zMjYtMjguNDU1aC40MDdsMS4zMjUgMjguNDU1aC0uNDA2elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNODMuMjY1IDE0OC45OTVsLTEuMzI2LTI4LjQ1NWguNDA3bDEuMzI2IDI4LjQ1NWgtLjQwN3pcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk04Mi44NTggMTQ4Ljk5NWwtMS4zMjUtMjguNDU1aC40MDZsMS4zMjYgMjguNDU1aC0uNDA3elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNODIuNDUyIDE0OC45OTVsLTEuMzI2LTI4LjQ1NWguNDA3bDEuMzI1IDI4LjQ1NWgtLjQwNnpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk04Mi4wNDQgMTQ4Ljk5NWwtLjkxOS0xOS43NTZ2LTguNjk5aC4wMDFsMS4zMjYgMjguNDU1aC0uNDA4elwiIGNsYXNzPVwiY2xzLTJcIiAvPjxwYXRoXG5cdFx0XHRcdGQ9XCJNODEuNjM4IDE0OC45OTVsLS41MTMtMTEuMDIzdi04LjczM2wuOTE5IDE5Ljc1NmgtLjQwNnpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PHBhdGggZD1cIk04MS4yMzEgMTQ4Ljk5NWwtLjEwNi0yLjI5di04LjczM2wuNTEzIDExLjAyM2gtLjQwN3pcIiBjbGFzcz1cImNscy0yXCIgLz48cGF0aFxuXHRcdFx0XHRkPVwiTTgxLjEyNSAxNDYuNzA1bC4xMDYgMi4yOWgtLjEwNnYtMi4yOXpcIlxuXHRcdFx0XHRjbGFzcz1cImNscy0yXCJcblx0XHRcdC8+PC9nXG5cdFx0PjwvZ1xuXHQ+PHBhdGhcblx0XHRkPVwiTTMwLjA0NSAxMjAuMzg5bC0xNC42MzQgMTQuNzQzIDE0Ljc0MyAxNC42MzQgMTIuNDcyLS4wNDYtMTMuMDc5LTEyLjk3NCA2NC41ODQtLjIzOS01LjY2MSA1LjY5OCA2LjIzNy0uMDIzIDcuMzE3LTcuMzcyLTcuMzcyLTcuMzE2LTYuMjM2LjAyMyA1LjcwMyA1LjY1Ny02NC41ODQuMjQgMTIuOTgxLTEzLjA3MS0xMi40NzEuMDQ2elwiXG5cdFx0Y2xhc3M9XCJjbHMtMlwiXG5cdC8+PC9zdmdcbj5cbiIsIjxzY3JpcHQgbGFuZz1cInRzXCI+XG5cdGV4cG9ydCBsZXQgd2lkdGggPSA1MDtcblx0ZXhwb3J0IGxldCBoZWlnaHQ6IG51bWJlciB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbjwvc2NyaXB0PlxuXG48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB7d2lkdGh9IHtoZWlnaHR9IHZpZXdCb3g9XCIwIDAgMTIyNCAxMjI0XCI+XG5cdDxnIGZpbGw9XCJub25lXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiPlxuXHRcdDxwYXRoXG5cdFx0XHRmaWxsPVwiY3VycmVudENvbG9yXCJcblx0XHRcdGQ9XCJNODQ0IDEwMDJINjA4VjM5MGg2MTJ2NjEySDk4NC4zNHYtMy4zYzAtMzguNzUtMzEuNDEtNzAuMTctNzAuMTctNzAuMTctMzguNzUgMC03MC4xNyAzMS40MS03MC4xNyA3MC4xN3YzLjNaXCJcblx0XHQvPlxuXHRcdDxwYXRoXG5cdFx0XHRmaWxsPVwiI0ZGRlwiXG5cdFx0XHRkPVwiTTgyMS42NSA2MDcuMjhjLTI3LjY3MjQzLjQ0MTE0LTQxLjU2MDEyLjUyNDQ0LTQxLjY2MzA1LjI0OTkyQzc3NS4yNTA4NCA1OTQuODk4MiA3NjYuOTMxODggNTgzLjc2IDc1MS45MyA1ODMuNzZjLTE0LjI4IDAtMjYuNiAxMC4zNi0yNi42IDI1LjIgMCA0Mi44NCAxMDIuNDggMTQuODQgMTAyLjQ4IDk2LjA0IDAgMjYuNi0yMC4xNiA2Ni4zNi03My45MiA2Ni4zNi00MS40NCAwLTcxLjQtMjAuMTYtNzguMTItNjIuNzJsNDUuMzA2NTktLjEyNTMxYTYyLjAxNTEgNjIuMDE1MSAwIDAgMCAuMzE3MzUuOTk5MDFDNzI2LjE5MjggNzI0LjE4NjE3IDczNS43MzI0OSA3MzQuNCA3NTMuNjEgNzM0LjRjMTcuMDggMCAzMS4zNi04Ljk2IDMxLjM2LTI3LjcyIDAtNDMuNjgtMTAyLjQ4LTE4LjQ4LTEwMi40OC05Mi42OCAwLTM5LjIgMzMuMDQtNjcuMiA3MC44NC02Ny4yIDM2Ljk2IDAgNjQuNjggMjMuOCA2OC4zMiA2MC40OFpNODg5LjQ3IDc2OGgtNDMuNjhWNTUwLjE2aDQzLjY4Vjc2OFpcIlxuXHRcdC8+XG5cdFx0PHBhdGhcblx0XHRcdGZpbGw9XCJjdXJyZW50Q29sb3JcIlxuXHRcdFx0ZD1cIk0zNzQgMjIxdjMuM2MwIDM4Ljc2LTMxLjQyIDcwLjE3LTcwLjE3IDcwLjE3LTM4Ljc2IDAtNzAuMTctMzEuNDItNzAuMTctNzAuMTdWMjIxSC0ydjYxMmg2MTJWMjIxSDM3NFpcIlxuXHRcdC8+XG5cdFx0PHBhdGhcblx0XHRcdGZpbGw9XCIjRkZGXCJcblx0XHRcdGZpbGwtcnVsZT1cIm5vbnplcm9cIlxuXHRcdFx0ZD1cIk0xNDAuMTYgNTUwLjgxaDQwLjU2bDI3LjY5IDE0Ny40N2guNWwzMy4yOC0xNDcuNDdoMzcuOTRsMzAuMDYgMTQ5LjI4aC41OWwzMS41Ni0xNDkuMjhoMzkuNzhMMzMwLjQzIDc2Ny41aC00MC4yNWwtMjkuODEtMTQ3LjQ3aC0uNzhMMjI3LjY4IDc2Ny41aC00MWwtNDYuNTItMjE2LjY5Wm0yODcuNjkgMGg2My45NGw2My41IDIxNi42OWgtNDEuODRsLTEzLjgxLTQ4LjIySDQyNi44bC0xMC42NiA0OC4yMmgtNDAuNzVsNTIuNDYtMjE2LjY5Wm0yNC4zNCA1My40MS0xNy42OSA3OS41aDU1LjA2bC0yMC4zMS03OS41aC0xNy4wNlpcIlxuXHRcdC8+XG5cdDwvZz5cbjwvc3ZnPlxuIiwiPHNjcmlwdCBsYW5nPVwidHNcIj5cblx0ZXhwb3J0IGxldCB3aWR0aCA9IDUwO1xuXHRleHBvcnQgbGV0IGhlaWdodDogbnVtYmVyIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuPC9zY3JpcHQ+XG5cbjxzdmcge3dpZHRofSB7aGVpZ2h0fSB2aWV3Qm94PVwiMCAwIDE0Ni4zNiAzNi4zNlwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cblx0PGc+XG5cdFx0PHBhdGhcblx0XHRcdGQ9XCJNMTg2LjM2NDkyIDUyMC4wMDM1MmgyMC44di00LjRoLTIwLjh6bTMxLjItNmM2LjggMCAxMC44OC0zLjMyIDEwLjg4LTguNTYgMC0xMC0xNC42NC02LjUyLTE0LjY0LTEyLjEyIDAtMi4xNiAxLjk2LTMuMzIgNS40LTMuMzIgMi4zMiAwIDQuODQuNDQgNi44IDEuMmwxLjQ4LTQuMTJjLTIuMzItMS4wNC01LjI0LTEuNi03Ljk2LTEuNi02LjY0IDAtMTEuMDggMy40LTExLjA4IDguNiAwIDkuNDggMTQuNTYgNi40IDE0LjU2IDEyLjA0IDAgMi0xLjc2IDMuMjgtNS4yIDMuMjgtMi41MiAwLTUuNi0uNi04LjMyLTEuNzJsLTEuNDggNC4xNmMyLjk2IDEuMzIgNi4zNiAyLjE2IDkuNTYgMi4xNnptMjEuNDQtLjA4YzIuNjggMCA1LjI0LTEuMiA3LTMuNGwtLjc2LTMuMTJjLTEuMTYgMS4zMi0yLjc2IDIuMTItNC40IDIuMTItMi43NiAwLTMuNTYtMi4xMi0zLjU2LTQuMDR2LTExLjMyaC01LjEydjEyLjRjMCA0LjUyIDIuOCA3LjM2IDYuODQgNy4zNnptNi45Ni0uMzJoMy42OHYtMTkuNDRoLTUuMTJ2MTYuMDR6bTEwLjM5OTk3IDBoNC45MnYtMjIuNDhjMC0yLjA4IDEuMTYtMy4yNCAzLjI0LTMuMjQgMSAwIDIuMjQuMjQgMyAuNmwxLjA0LTMuNjhjLTEuMjQtLjY4LTIuOC0xLjE2LTQuNDQtMS4xNi00LjY0IDAtNy43NiAzLjE2LTcuNzYgNy45MnptLTMtMTUuMzZoMTMuNTJ2LTQuMDhoLTEzLjUyem0xNy45NjAwMiAxNS4zNmg0Ljkydi0yMi40OGMwLTIuMDggMS4xNi0zLjI0IDMuMjQtMy4yNCAxIDAgMi4yNC4yNCAzIC42bDEuMDQtMy42OGMtMS4yNC0uNjgtMi44LTEuMTYtNC40NC0xLjE2LTQuNjQgMC03Ljc2IDMuMTYtNy43NiA3Ljkyem0tMy0xNS4zNmgxMy41MnYtNC4wOGgtMTMuNTJ6bTE3IDE1LjM2aDUuMDh2LTE5LjQ0aC01LjA4em0yLjU2LTIzYzEuOTIgMCAzLjEyLTEuMjQgMy4xMi0zLjE2IDAtMS45Mi0xLjItMy4xNi0zLjEyLTMuMTYtMS45MiAwLTMuMTIgMS4yNC0zLjEyIDMuMTYgMCAxLjkyIDEuMiAzLjE2IDMuMTIgMy4xNnptMjAuNiAyM2g2LjU2bC04LjcyLTExLjYtLjI4IDIuMTIgOC4yNC05Ljk2aC01LjkybC03LjM2IDkuMTZ6bS0xMi4yOCAwaDUuMDR2LTI5LjU2aC01LjA0em0yOC4wMDAwMS40YzUuMzYgMCA4LjUyLTIuMzIgOC41Mi02LjI0IDAtNy4yOC0xMS00LjgtMTEtOC4wOCAwLTEuMiAxLjM2LTEuOTIgMy43Ni0xLjkyIDEuNiAwIDMuNTIuMzIgNS4zMi44NGwxLjA0LTMuODRjLTEuOC0uNjQtNC4wOC0xLTYuMjgtMS01LjU2IDAtOC44IDIuMjgtOC44IDYuMjQgMCA3LjI0IDEwLjg4IDQuNDggMTAuODggOC4wNCAwIDEuMjQtMS4zMiAyLTMuNTIgMi0xLjg4IDAtNC40NC0uNTItNi40OC0xLjMybC0xLjE2IDMuOGMyLjI0LjkyIDUuMDggMS40OCA3LjcyIDEuNDh6XCJcblx0XHRcdHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgtMTg2LjM2NDkyIC00ODMuNjQzNTIpXCJcblx0XHRcdGFyaWEtbGFiZWw9XCJfU3VmZmlrc1wiXG5cdFx0XHRmaWxsPVwiY3VycmVudENvbG9yXCJcblx0XHQvPlxuXHQ8L2c+XG48L3N2Zz5cbiIsImltcG9ydCBHcnBjIGZyb20gXCIuLi9HUlBDLnN2ZWx0ZVwiO1xuaW1wb3J0IFdhc2kgZnJvbSBcIi4uL1dBU0kuc3ZlbHRlXCI7XG5pbXBvcnQgTG9nbyBmcm9tIFwiLi4vbG9nby5zdmVsdGVcIjtcblxuZXhwb3J0IGNvbnN0IGNvZGUgPSBbXG4gIHtcbiAgICBsaW5lczoge1xuICAgICAgYXBpVmVyc2lvbjogXCJzdWZmaWtzLmlvL3YxXCIsXG4gICAgICBraW5kOiBcIkFwcGxpY2F0aW9uXCIsXG4gICAgICBtZXRhZGF0YToge1xuICAgICAgICBuYW1lOiBcIm15LWFwcGxpY2F0aW9uXCIsXG4gICAgICB9LFxuICAgICAgc3BlYzogdW5kZWZpbmVkLFxuICAgIH0sXG4gIH0sXG4gIHtcbiAgICBpbmRlbnQ6IDEsXG4gICAgbGluZXM6IHtcbiAgICAgIGltYWdlOiBcIm15LWltYWdlOmxhdGVzdFwiLFxuICAgICAgcG9ydDogMzAwMCxcbiAgICB9LFxuICAgIHNlcnZpY2U6IFwic3VmZmlrc1wiLFxuICB9LFxuICB7XG4gICAgaW5kZW50OiAxLFxuICAgIGxpbmVzOiB7XG4gICAgICBpbmdyZXNzZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGhvc3Q6IFwic3VmZmlrcy5pb1wiLFxuICAgICAgICAgIHBhdGhzOiBbXCIvXCJdLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9LFxuICAgIHNlcnZpY2U6IFwiaW5ncmVzc2VzXCIsXG4gIH0sXG4gIHtcbiAgICBpbmRlbnQ6IDEsXG4gICAgbGluZXM6IHtcbiAgICAgIHByb3h5OiB0cnVlLFxuICAgIH0sXG4gICAgc2VydmljZTogXCJwcm94eVwiLFxuICB9LFxuXTtcblxuZXhwb3J0IGNvbnN0IHNlcnZpY2VzID0gW1xuICB7XG4gICAgaWQ6IFwic3VmZmlrc1wiLFxuICAgIG5hbWU6IFwiU3VmZmlrc1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBiYXNlIHJlc291cmNlIHByb3ZpZGVkIGJ5IFN1ZmZpa3NcIixcbiAgICBjb21wb25lbnQ6IExvZ28sXG4gIH0sXG4gIHtcbiAgICBpZDogXCJpbmdyZXNzZXNcIixcbiAgICBuYW1lOiBcIkluZ3Jlc3Nlc1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIkEgR1JQQyBFeHRlbnNpb24gcHJvdmlkaW5nIEluZ3Jlc3MtcmVzb3VyY2VzXCIsXG4gICAgY29tcG9uZW50OiBHcnBjLFxuICB9LFxuICB7XG4gICAgaWQ6IFwicHJveHlcIixcbiAgICBuYW1lOiBcIkhUVFAgUHJveHlcIixcbiAgICBkZXNjcmlwdGlvbjogXCJBIFdBU0kgRXh0ZW5zaW9uIGFkZGluZyBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZVwiLFxuICAgIGNvbXBvbmVudDogV2FzaSxcbiAgfSxcbl07XG5cbmV4cG9ydCBjb25zdCByZXNvdXJjZXMgPSBbXG4gIHtcbiAgICBpZDogXCJkZXBsb3ltZW50XCIsXG4gICAgc2VydmljZTogXCJzdWZmaWtzXCIsXG4gICAgY29kZTogW1xuICAgICAge1xuICAgICAgICBsaW5lczoge1xuICAgICAgICAgIGFwaVZlcnNpb246IFwiYXBwcy92MVwiLFxuICAgICAgICAgIGtpbmQ6IFwiRGVwbG95bWVudFwiLFxuICAgICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgICBuYW1lOiBcIm15LWFwcGxpY2F0aW9uXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzcGVjOiB7XG4gICAgICAgICAgICByZXBsaWNhczogMSxcbiAgICAgICAgICAgIHNlbGVjdG9yOiB7XG4gICAgICAgICAgICAgIG1hdGNoTGFiZWxzOiB7XG4gICAgICAgICAgICAgICAgXCJhcHAua3ViZXJuZXRlcy5pby9uYW1lXCI6IFwiTXlBcHBcIixcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0ZW1wbGF0ZToge1xuICAgICAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgICAgIGxhYmVsczoge1xuICAgICAgICAgICAgICAgICAgXCJhcHAua3ViZXJuZXRlcy5pby9uYW1lXCI6IFwiTXlBcHBcIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBzcGVjOiB7XG4gICAgICAgICAgICAgICAgaW1hZ2U6IFwibXktaW1hZ2U6bGF0ZXN0XCIsXG4gICAgICAgICAgICAgICAgcG9ydHM6IFt7IGNvbnRhaW5lclBvcnQ6IDMwMDAsIG5hbWU6IFwiaHR0cFwiIH1dLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBzZXJ2aWNlOiBcInN1ZmZpa3NcIixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGVudDogMyxcbiAgICAgICAgbGluZXM6IHtcbiAgICAgICAgICBlbnY6IFtcbiAgICAgICAgICAgIHsga2V5OiBcIkhUVFBfUFJPWFlcIiwgdmFsdWU6IFwicHJveHk6ODA4MFwiIH0sXG4gICAgICAgICAgICB7IGtleTogXCJIVFRQU19QUk9YWVwiLCB2YWx1ZTogXCJwcm94eTo4MDgwXCIgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICBzZXJ2aWNlOiBcInByb3h5XCIsXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG5cbiAge1xuICAgIGlkOiBcInNlcnZpY2VcIixcbiAgICBzZXJ2aWNlOiBcInN1ZmZpa3NcIixcbiAgICBjb2RlOiBbXG4gICAgICB7XG4gICAgICAgIGxpbmVzOiB7XG4gICAgICAgICAgYXBpVmVyc2lvbjogXCJ2MVwiLFxuICAgICAgICAgIGtpbmQ6IFwiU2VydmljZVwiLFxuICAgICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgICBuYW1lOiBcIm15LWFwcGxpY2F0aW9uXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzcGVjOiB1bmRlZmluZWQsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbmRlbnQ6IDEsXG4gICAgICAgIGxpbmVzOiB7XG4gICAgICAgICAgc2VsZWN0b3I6IHsgXCJhcHAua3ViZXJuZXRlcy5pby9uYW1lXCI6IFwiTXlBcHBcIiB9LFxuICAgICAgICAgIHBvcnRzOiBbXG4gICAgICAgICAgICB7IHByb3RvY29sOiBcIlRDUFwiLCBwb3J0OiA4MCwgdGFyZ2V0UG9ydDogXCJodHRwXCIsIG5hbWU6IFwiaHR0cFwiIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAgc2VydmljZTogXCJzdWZmaWtzXCIsXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG5cbiAge1xuICAgIGlkOiBcImluZ3Jlc3NcIixcbiAgICBzZXJ2aWNlOiBcImluZ3Jlc3Nlc1wiLFxuICAgIGNvZGU6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZW50OiAwLFxuICAgICAgICBsaW5lczoge1xuICAgICAgICAgIGFwaVZlcnNpb246IFwibmV0d29ya2luZy5rOHMuaW8vdjFcIixcbiAgICAgICAgICBraW5kOiBcIkluZ3Jlc3NcIixcbiAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgbmFtZTogXCJteS1hcHBsaWNhdGlvblwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgc3BlYzoge1xuICAgICAgICAgICAgcnVsZXM6IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGh0dHA6IHtcbiAgICAgICAgICAgICAgICAgIHBhdGhzOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBcIi9cIixcbiAgICAgICAgICAgICAgICAgICAgICBwYXRoVHlwZTogXCJQcmVmaXhcIixcbiAgICAgICAgICAgICAgICAgICAgICBiYWNrZW5kOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibXktYXBwbGljYXRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcG9ydDogeyBuYW1lOiBcImh0dHBcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBzZXJ2aWNlOiBcImluZ3Jlc3Nlc1wiLFxuICAgICAgfSxcbiAgICBdLFxuICB9LFxuXTtcbiIsImV4cG9ydCB0eXBlIExpbmVQcm9wcyA9IHsgeDE6IG51bWJlcjsgeDI6IG51bWJlcjsgeTE6IG51bWJlcjsgeTI6IG51bWJlciB9O1xuXG5leHBvcnQgY29uc3QgZ2V0T2Zmc2V0ID0gKGVsOiBIVE1MRWxlbWVudCkgPT4ge1xuXHRjb25zdCByZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdHJldHVybiB7XG5cdFx0bGVmdDogcmVjdC5sZWZ0ICsgd2luZG93LnNjcm9sbFksXG5cdFx0dG9wOiByZWN0LnRvcCArIHdpbmRvdy5zY3JvbGxYLFxuXHRcdHdpZHRoOiByZWN0LndpZHRoIHx8IGVsLm9mZnNldFdpZHRoLFxuXHRcdGhlaWdodDogcmVjdC5oZWlnaHQgfHwgZWwub2Zmc2V0SGVpZ2h0LFxuXHR9O1xufTtcblxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZUxpbmUgPSAoXG5cdHByZXZpZXdFbDogSFRNTEVsZW1lbnQsXG5cdGxlZnRFbDogSFRNTEVsZW1lbnQsXG5cdHJpZ2h0RWw6IEhUTUxFbGVtZW50LFxuXHRpbnZlcnQgPSBmYWxzZSxcbik6IExpbmVQcm9wcyA9PiB7XG5cdGNvbnN0IG9mZnNldCA9IGdldE9mZnNldChwcmV2aWV3RWwpO1xuXHRjb25zdCBvZmYxID0gZ2V0T2Zmc2V0KGxlZnRFbCk7XG5cdGNvbnN0IG9mZjIgPSBnZXRPZmZzZXQocmlnaHRFbCk7XG5cblx0aWYgKGludmVydCkge1xuXHRcdGNvbnN0IHgxID0gb2ZmMi5sZWZ0ICsgb2ZmMi53aWR0aCAtIG9mZnNldC5sZWZ0O1xuXHRcdGNvbnN0IHkxID0gb2ZmMi50b3AgKyBvZmYyLmhlaWdodCAvIDIgLSBvZmZzZXQudG9wO1xuXG5cdFx0Y29uc3QgeDIgPSBvZmYxLmxlZnQgLSBvZmZzZXQubGVmdDtcblx0XHRjb25zdCB5MiA9IG9mZjEudG9wICsgb2ZmMS5oZWlnaHQgLyAyIC0gb2Zmc2V0LnRvcDtcblxuXHRcdHJldHVybiB7IHgxLCB4MiwgeTEsIHkyIH07XG5cdH1cblxuXHRjb25zdCB4MSA9IG9mZjEubGVmdCArIG9mZjEud2lkdGggLSBvZmZzZXQubGVmdDtcblx0Y29uc3QgeTEgPSBvZmYxLnRvcCArIG9mZjEuaGVpZ2h0IC8gMiAtIG9mZnNldC50b3A7XG5cblx0Y29uc3QgeDIgPSBvZmYyLmxlZnQgLSBvZmZzZXQubGVmdDtcblx0Y29uc3QgeTIgPSBvZmYyLnRvcCArIG9mZjIuaGVpZ2h0IC8gMiAtIG9mZnNldC50b3A7XG5cblx0cmV0dXJuIHsgeDEsIHgyLCB5MSwgeTIgfTtcbn07XG4iLCI8c3ZlbHRlOm9wdGlvbnNcbiAgY3VzdG9tRWxlbWVudD17e1xuICAgIHRhZzogXCJzdWZmaWtzLXByZXZpZXdcIixcbiAgICBwcm9wczogeyBkYXJrOiB7IHR5cGU6IFwiQm9vbGVhblwiLCByZWZsZWN0OiB0cnVlIH0gfSxcbiAgfX1cbi8+XG5cbjxzY3JpcHQgbGFuZz1cInRzXCI+XG4gIGltcG9ydCBMaW5lIGZyb20gXCIuL0xpbmUuc3ZlbHRlXCI7XG4gIGltcG9ydCB7IGNvZGUsIHJlc291cmNlcywgc2VydmljZXMgfSBmcm9tIFwiLi9jb2RlXCI7XG4gIGltcG9ydCB7IGNhbGN1bGF0ZUxpbmUsIGdldE9mZnNldCwgdHlwZSBMaW5lUHJvcHMgfSBmcm9tIFwiLi9oZWxwZXJzXCI7XG5cbiAgZXhwb3J0IGxldCBkYXJrID0gZmFsc2U7XG5cbiAgY29uc3Qgc2VydmljZXNFbHM6IEhUTUxFbGVtZW50W10gPSBuZXcgQXJyYXkoc2VydmljZXMubGVuZ3RoKTtcbiAgY29uc3Qgc2VydmljZURpYWxvZ3M6IEhUTUxEaWFsb2dFbGVtZW50W10gPSBuZXcgQXJyYXkoc2VydmljZXMubGVuZ3RoKTtcbiAgY29uc3QgY29kZWJsb2NrRWxzOiBIVE1MRWxlbWVudFtdID0gbmV3IEFycmF5KGNvZGUubGVuZ3RoKTtcbiAgY29uc3QgcmVzdWx0YmxvY2tFbHM6IEhUTUxFbGVtZW50W11bXSA9IG5ldyBBcnJheShyZXNvdXJjZXMubGVuZ3RoKVxuICAgIC5maWxsKFtdKVxuICAgIC5tYXAoKF8sIGkpID0+IG5ldyBBcnJheShyZXNvdXJjZXNbaV0uY29kZS5sZW5ndGgpKTtcbiAgbGV0IGFjdGl2ZUNvZGVibG9ja3M6IG51bWJlcltdID0gW107XG4gIGxldCBhY3RpdmVSZXN1bHRibG9ja3M6IG51bWJlcltdW10gPSBuZXcgQXJyYXkocmVzb3VyY2VzLmxlbmd0aCkuZmlsbChbXSk7XG4gIGxldCBhY3RpdmVTZXJ2aWNlID0gXCJcIjtcblxuICBsZXQgbGluZXM6IExpbmVQcm9wc1tdID0gW107XG5cbiAgY29uc3QgaGlnaGxpZ2h0ID0gKGlkOiBzdHJpbmcgfCB1bmRlZmluZWQpID0+IHtcbiAgICBpZiAoIWlkKSByZXR1cm47XG5cbiAgICBjb25zdCBhY3RpdmVDQnM6IG51bWJlcltdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2RlLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoY29kZVtpXS5zZXJ2aWNlID09PSBpZCkge1xuICAgICAgICBhY3RpdmVDQnMucHVzaChpKTtcbiAgICAgIH1cbiAgICB9XG4gICAgYWN0aXZlQ29kZWJsb2NrcyA9IGFjdGl2ZUNCcztcblxuICAgIGNvbnN0IHN2YyA9IHNlcnZpY2VzLmZpbmQoKHMpID0+IHMuaWQgPT09IGlkKTtcbiAgICBpZiAoIXN2YykgcmV0dXJuO1xuICAgIGNvbnN0IHN2Y0VsID0gc2VydmljZXNFbHNbc2VydmljZXMuaW5kZXhPZihzdmMpXTtcblxuICAgIGFjdGl2ZVNlcnZpY2UgPSBzdmMuaWQ7XG5cbiAgICBjb25zdCBuZXdMaW5lczogTGluZVByb3BzW10gPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFjdGl2ZUNCcy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgY29kZWJsb2NrID0gY29kZWJsb2NrRWxzW2FjdGl2ZUNCc1tpXV07XG4gICAgICBpZiAoIWNvZGVibG9jaykgY29udGludWU7XG5cbiAgICAgIGNvbnN0IGxpbmUgPSBjYWxjdWxhdGVMaW5lKHByZXZpZXdFbCwgY29kZWJsb2NrLCBzdmNFbCk7XG4gICAgICBuZXdMaW5lcy5wdXNoKGxpbmUpO1xuICAgIH1cblxuICAgIGNvbnN0IGFjdGl2ZVJlc3VsdHM6IG51bWJlcltdW10gPSBuZXcgQXJyYXkoMykuZmlsbChbXSkubWFwKCgpID0+IFtdKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc291cmNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCByZXNvdXJjZXNbaV0uY29kZS5sZW5ndGg7IGorKykge1xuICAgICAgICBpZiAocmVzb3VyY2VzW2ldLmNvZGVbal0uc2VydmljZSA9PT0gaWQpIHtcbiAgICAgICAgICBhY3RpdmVSZXN1bHRzW2ldLnB1c2goaik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFjdGl2ZVJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHJlc3VsdGJsb2NrcyA9IHJlc3VsdGJsb2NrRWxzW2ldO1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBhY3RpdmVSZXN1bHRzW2ldLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdGJsb2NrID0gcmVzdWx0YmxvY2tzW2FjdGl2ZVJlc3VsdHNbaV1bal1dO1xuICAgICAgICBpZiAoIXJlc3VsdGJsb2NrKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBsaW5lID0gY2FsY3VsYXRlTGluZShwcmV2aWV3RWwsIHJlc3VsdGJsb2NrLCBzdmNFbCwgdHJ1ZSk7XG4gICAgICAgIG5ld0xpbmVzLnB1c2gobGluZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgYWN0aXZlUmVzdWx0YmxvY2tzID0gYWN0aXZlUmVzdWx0cztcblxuICAgIGxpbmVzID0gbmV3TGluZXM7XG4gIH07XG5cbiAgbGV0IHByZXZpZXdFbDogSFRNTEVsZW1lbnQ7XG5cbiAgY29uc3QgcmVzZXQgPSAoKSA9PiB7XG4gICAgYWN0aXZlQ29kZWJsb2NrcyA9IFtdO1xuICAgIGFjdGl2ZVJlc3VsdGJsb2NrcyA9IG5ldyBBcnJheShyZXNvdXJjZXMubGVuZ3RoKS5maWxsKFtdKTtcbiAgICBsaW5lcyA9IFtdO1xuXG4gICAgc2VydmljZURpYWxvZ3MuZm9yRWFjaCgoZCkgPT4ge1xuICAgICAgZC5jbG9zZSgpO1xuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHNob3dEaWFsb2cgPSAoaW5kZXg6IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IGRpYWxvZyA9IHNlcnZpY2VEaWFsb2dzW2luZGV4XTtcbiAgICBkaWFsb2cuc2hvdygpO1xuXG4gICAgY29uc3Qgb2Zmc2V0ID0gZ2V0T2Zmc2V0KHByZXZpZXdFbCk7XG4gICAgY29uc3QgZGlhbG9nT2Zmc2V0ID0gZ2V0T2Zmc2V0KGRpYWxvZyk7XG4gICAgY29uc3QgYnV0dG9uID0gZ2V0T2Zmc2V0KHNlcnZpY2VzRWxzW2luZGV4XSk7XG5cbiAgICAvLyBDZW50ZXIgdGhlIGRpYWxvZyBhYm92ZSB0aGUgc2VydmljZSBidXR0b25cbiAgICBjb25zdCB4ID0gZGlhbG9nT2Zmc2V0LndpZHRoIC8gLTI7XG4gICAgY29uc3QgeSA9IGJ1dHRvbi50b3AgLSBkaWFsb2dPZmZzZXQuaGVpZ2h0IC0gMTAgLSBvZmZzZXQudG9wO1xuXG4gICAgZGlhbG9nLnN0eWxlLmxlZnQgPSBgJHt4fXB4YDtcbiAgICBkaWFsb2cuc3R5bGUudG9wID0gYCR7eX1weGA7XG4gIH07XG5cbiAgbGV0IHByZXZpZXdIZWlnaHQ6IG51bWJlcjtcbiAgbGV0IHByZXZpZXdXaWR0aDogbnVtYmVyO1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJ3cmFwcGVyXCIgY2xhc3M6ZGFyayBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgPGRpdlxuICAgIGNsYXNzPVwicHJldmlld1wiXG4gICAgYmluZDp0aGlzPXtwcmV2aWV3RWx9XG4gICAgYmluZDpjbGllbnRIZWlnaHQ9e3ByZXZpZXdIZWlnaHR9XG4gICAgYmluZDpjbGllbnRXaWR0aD17cHJldmlld1dpZHRofVxuICA+XG4gICAgPGRpdiBjbGFzcz1cImNvZGVcIj5cbiAgICAgIHsjZWFjaCBjb2RlIGFzIGMsIGluZGV4fVxuICAgICAgICA8IS0tIHN2ZWx0ZS1pZ25vcmUgYTExeS1uby1zdGF0aWMtZWxlbWVudC1pbnRlcmFjdGlvbnMgLS0+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzczpjb2RlYmxvY2s9eyEhYy5zZXJ2aWNlfVxuICAgICAgICAgIGNsYXNzOmhvdmVyPXshIWMuc2VydmljZX1cbiAgICAgICAgICBjbGFzczphY3RpdmU9e2FjdGl2ZUNvZGVibG9ja3MuaW5jbHVkZXMoaW5kZXgpfVxuICAgICAgICAgIG9uOm1vdXNlZW50ZXI9e2Muc2VydmljZSA/ICgpID0+IGhpZ2hsaWdodChjLnNlcnZpY2UpIDogbnVsbH1cbiAgICAgICAgICBvbjptb3VzZWxlYXZlPXtyZXNldH1cbiAgICAgICAgICBiaW5kOnRoaXM9e2NvZGVibG9ja0Vsc1tpbmRleF19XG4gICAgICAgID5cbiAgICAgICAgICB7I2VhY2ggT2JqZWN0LmVudHJpZXMoYy5saW5lcykgYXMgW2tleSwgdmFsdWVdfVxuICAgICAgICAgICAgPExpbmUge2tleX0ge3ZhbHVlfSBpbmRlbnQ9e2MuaW5kZW50fSAvPlxuICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgPC9kaXY+XG4gICAgICB7L2VhY2h9XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwic2VydmljZXNcIj5cbiAgICAgIHsjZWFjaCBzZXJ2aWNlcyBhcyBzZXJ2aWNlLCBpbmRleH1cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGNsYXNzPVwic2VydmljZVwiXG4gICAgICAgICAgb246bW91c2VlbnRlcj17KCkgPT4ge1xuICAgICAgICAgICAgaGlnaGxpZ2h0KHNlcnZpY2UuaWQpO1xuICAgICAgICAgICAgc2hvd0RpYWxvZyhpbmRleCk7XG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbjptb3VzZWxlYXZlPXtyZXNldH1cbiAgICAgICAgICBiaW5kOnRoaXM9e3NlcnZpY2VzRWxzW2luZGV4XX1cbiAgICAgICAgPlxuICAgICAgICAgIDxkaWFsb2cgYmluZDp0aGlzPXtzZXJ2aWNlRGlhbG9nc1tpbmRleF19PlxuICAgICAgICAgICAgPGgzPntzZXJ2aWNlLm5hbWV9PC9oMz5cbiAgICAgICAgICAgIDxwPntzZXJ2aWNlLmRlc2NyaXB0aW9ufTwvcD5cbiAgICAgICAgICA8L2RpYWxvZz5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwibG9nb1wiPlxuICAgICAgICAgICAgPHN2ZWx0ZTpjb21wb25lbnQgdGhpcz17c2VydmljZS5jb21wb25lbnR9IHdpZHRoPXs2NH0gLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGV0YWlsc1wiPlxuICAgICAgICAgICAgPGgzPntzZXJ2aWNlLm5hbWV9PC9oMz5cbiAgICAgICAgICAgIDxwPntzZXJ2aWNlLmRlc2NyaXB0aW9ufTwvcD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICB7L2VhY2h9XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiY29kZSByZXN1bHRzXCI+XG4gICAgICB7I2VhY2ggcmVzb3VyY2VzIGFzIHIsIG91dGVyfVxuICAgICAgICB7I2lmIG91dGVyID4gMH0gPGRpdiBjbGFzcz1cImRpdmlkZXJcIiAvPiB7L2lmfVxuICAgICAgICA8ZGl2IGNsYXNzPVwicmVzb3VyY2VcIiBjbGFzczphY3RpdmU9e2FjdGl2ZVNlcnZpY2UgPT0gci5zZXJ2aWNlfT5cbiAgICAgICAgICB7I2VhY2ggci5jb2RlIGFzIGMsIGluZGV4fVxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjbGFzczpjb2RlYmxvY2s9eyEhYy5zZXJ2aWNlfVxuICAgICAgICAgICAgICBiaW5kOnRoaXM9e3Jlc3VsdGJsb2NrRWxzW291dGVyXVtpbmRleF19XG4gICAgICAgICAgICAgIGNsYXNzOmFjdGl2ZT17YWN0aXZlUmVzdWx0YmxvY2tzW291dGVyXS5pbmNsdWRlcyhpbmRleCl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHsjZWFjaCBPYmplY3QuZW50cmllcyhjLmxpbmVzKSBhcyBba2V5LCB2YWx1ZV19XG4gICAgICAgICAgICAgICAgPExpbmUge2tleX0ge3ZhbHVlfSBpbmRlbnQ9e2MuaW5kZW50fSAvPlxuICAgICAgICAgICAgICB7L2VhY2h9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7L2VhY2h9XG4gICAgICAgIDwvZGl2PlxuICAgICAgey9lYWNofVxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPHN2ZyB3aWR0aD17cHJldmlld1dpZHRofSBoZWlnaHQ9e3ByZXZpZXdIZWlnaHR9PlxuICAgIHsjZWFjaCBsaW5lcyBhcyBsaW5lfVxuICAgICAgPGxpbmUgey4uLmxpbmV9IHN0cm9rZT1cIiNmNzcyNDJcIiBzdHJva2Utd2lkdGg9XCIyXCIgLz5cbiAgICB7L2VhY2h9XG4gIDwvc3ZnPlxuPC9kaXY+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuICAud3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcblxuICAgIC0tY29kZWJsb2NrLW91dGxpbmU6ICNmNzcyNDI7XG4gICAgLS1jb2RlYmxvY2stYmctaG92ZXI6IHJnYigyNDMgMjQ0IDI0NiAvIDAuMSk7XG5cbiAgICAtLWtleS1jb2xvcjogIzAwODA4MDtcbiAgICAtLXN0cmluZy1jb2xvcjogIzA0NTFhNTtcbiAgICAtLW51bWJlci1jb2xvcjogIzA5ODY1ODtcbiAgICAtLWJvb2xlYW4tY29sb3I6ICMwMDAwZmY7XG4gIH1cblxuICAud3JhcHBlci5kYXJrIHtcbiAgICAtLWNvZGVibG9jay1vdXRsaW5lOiAjZjc3MjQyO1xuICAgIC0tY29kZWJsb2NrLWJnLWhvdmVyOiByZ2IoMjQzIDI0NCAyNDYgLyAwLjEpO1xuXG4gICAgLS1rZXktY29sb3I6IHJnYmEoMjUxLCAxODAsIDExNSwgMSk7XG4gICAgLS1zdHJpbmctY29sb3I6IHJnYmEoMjIwLCAyMjAsIDExMywgMSk7XG4gICAgLS1udW1iZXItY29sb3I6IHJnYmEoMjU1LCA5MiwgMzgsIDEpO1xuICAgIC0tYm9vbGVhbi1jb2xvcjogcmdiYSg5MiwgMjU1LCAzOCwgMSk7XG4gIH1cblxuICAud3JhcHBlciA+IHN2ZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICB9XG5cbiAgLnByZXZpZXcge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBnYXA6IDIuMnJlbTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuXG4gIC5zZXJ2aWNlcyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogMS4yNXJlbTtcbiAgfVxuXG4gIC5zZXJ2aWNlIC5sb2dvIHtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGJvcmRlcjogMXB4O1xuICAgIGJvcmRlcjogI2ZmZmZmZjtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIH1cblxuICAuc2VydmljZSAuZGV0YWlscyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5jb2RlIHtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgZm9udC1mYW1pbHk6IHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLFxuICAgICAgTGliZXJhdGlvbiBNb25vLCBDb3VyaWVyIE5ldywgbW9ub3NwYWNlO1xuICB9XG5cbiAgLmNvZGVibG9jayB7XG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMzc1cmVtO1xuICAgIG91dGxpbmUtd2lkdGg6IDFweDtcbiAgICBvdXRsaW5lLWNvbG9yOiB2YXIoLS1jb2RlYmxvY2stb3V0bGluZSk7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDE1MG1zO1xuICAgIG91dGxpbmUtb2Zmc2V0OiAxcHg7XG4gIH1cblxuICAuY29kZWJsb2NrLmhvdmVyOmhvdmVyLFxuICAuY29kZWJsb2NrLmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29kZWJsb2NrLWJnLWhvdmVyKTtcbiAgICBvdXRsaW5lLXN0eWxlOiBzb2xpZDtcbiAgfVxuXG4gIC8qIC5yZXNvdXJjZSB7XG5cdFx0QGFwcGx5IG92ZXJmbG93LWhpZGRlbiBtYXgtaC0yNCB0cmFuc2l0aW9uLWFsbCBwLTI7XG5cdH1cblxuXHQucmVzb3VyY2UuYWN0aXZlIHtcblx0XHRAYXBwbHkgbWF4LWgtZml0O1xuXHR9ICovXG5cbiAgLmRpdmlkZXI6OmJlZm9yZSB7XG4gICAgY29udGVudDogXCItLS1cIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAwLjJyZW0gMDtcbiAgfVxuXG4gIGRpYWxvZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgei1pbmRleDogMTA7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xuICB9XG48L3N0eWxlPlxuIl0sIm5hbWVzIjpbIm5vb3AiLCJhc3NpZ24iLCJ0YXIiLCJzcmMiLCJrIiwicnVuIiwiZm4iLCJibGFua19vYmplY3QiLCJydW5fYWxsIiwiZm5zIiwiaXNfZnVuY3Rpb24iLCJ0aGluZyIsInNhZmVfbm90X2VxdWFsIiwiYSIsImIiLCJpc19lbXB0eSIsIm9iaiIsImV4Y2x1ZGVfaW50ZXJuYWxfcHJvcHMiLCJwcm9wcyIsInJlc3VsdCIsImNvbXB1dGVfcmVzdF9wcm9wcyIsImtleXMiLCJyZXN0IiwiYXBwZW5kIiwidGFyZ2V0Iiwibm9kZSIsImFwcGVuZF9zdHlsZXMiLCJzdHlsZV9zaGVldF9pZCIsInN0eWxlcyIsImFwcGVuZF9zdHlsZXNfdG8iLCJnZXRfcm9vdF9mb3Jfc3R5bGUiLCJzdHlsZSIsImVsZW1lbnQiLCJhcHBlbmRfc3R5bGVzaGVldCIsInJvb3QiLCJpbnNlcnQiLCJhbmNob3IiLCJkZXRhY2giLCJkZXN0cm95X2VhY2giLCJpdGVyYXRpb25zIiwiZGV0YWNoaW5nIiwiaSIsIm5hbWUiLCJzdmdfZWxlbWVudCIsInRleHQiLCJkYXRhIiwic3BhY2UiLCJlbXB0eSIsImxpc3RlbiIsImV2ZW50IiwiaGFuZGxlciIsIm9wdGlvbnMiLCJhdHRyIiwiYXR0cmlidXRlIiwidmFsdWUiLCJhbHdheXNfc2V0X3Rocm91Z2hfc2V0X2F0dHJpYnV0ZSIsInNldF9hdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsImRlc2NyaXB0b3JzIiwia2V5Iiwic2V0X3N2Z19hdHRyaWJ1dGVzIiwiY2hpbGRyZW4iLCJzZXRfZGF0YSIsImNyb3Nzb3JpZ2luIiwiaXNfY3Jvc3NvcmlnaW4iLCJhZGRfaWZyYW1lX3Jlc2l6ZV9saXN0ZW5lciIsImlmcmFtZSIsInVuc3Vic2NyaWJlIiwidG9nZ2xlX2NsYXNzIiwidG9nZ2xlIiwiSHRtbFRhZyIsImlzX3N2ZyIsIl9fcHVibGljRmllbGQiLCJodG1sIiwiZ2V0X2N1c3RvbV9lbGVtZW50c19zbG90cyIsImNvbnN0cnVjdF9zdmVsdGVfY29tcG9uZW50IiwiY29tcG9uZW50IiwiY3VycmVudF9jb21wb25lbnQiLCJzZXRfY3VycmVudF9jb21wb25lbnQiLCJkaXJ0eV9jb21wb25lbnRzIiwiYmluZGluZ19jYWxsYmFja3MiLCJyZW5kZXJfY2FsbGJhY2tzIiwiZmx1c2hfY2FsbGJhY2tzIiwicmVzb2x2ZWRfcHJvbWlzZSIsInVwZGF0ZV9zY2hlZHVsZWQiLCJzY2hlZHVsZV91cGRhdGUiLCJmbHVzaCIsImFkZF9yZW5kZXJfY2FsbGJhY2siLCJzZWVuX2NhbGxiYWNrcyIsImZsdXNoaWR4Iiwic2F2ZWRfY29tcG9uZW50IiwidXBkYXRlIiwiY2FsbGJhY2siLCIkJCIsImRpcnR5IiwiZmx1c2hfcmVuZGVyX2NhbGxiYWNrcyIsImZpbHRlcmVkIiwidGFyZ2V0cyIsImMiLCJvdXRyb2luZyIsIm91dHJvcyIsImdyb3VwX291dHJvcyIsImNoZWNrX291dHJvcyIsInRyYW5zaXRpb25faW4iLCJibG9jayIsImxvY2FsIiwidHJhbnNpdGlvbl9vdXQiLCJlbnN1cmVfYXJyYXlfbGlrZSIsImFycmF5X2xpa2Vfb3JfaXRlcmF0b3IiLCJnZXRfc3ByZWFkX3VwZGF0ZSIsImxldmVscyIsInVwZGF0ZXMiLCJ0b19udWxsX291dCIsImFjY291bnRlZF9mb3IiLCJvIiwibiIsImNyZWF0ZV9jb21wb25lbnQiLCJtb3VudF9jb21wb25lbnQiLCJmcmFnbWVudCIsImFmdGVyX3VwZGF0ZSIsIm5ld19vbl9kZXN0cm95IiwiZGVzdHJveV9jb21wb25lbnQiLCJtYWtlX2RpcnR5IiwiaW5pdCIsImluc3RhbmNlIiwiY3JlYXRlX2ZyYWdtZW50Iiwibm90X2VxdWFsIiwicGFyZW50X2NvbXBvbmVudCIsInJlYWR5IiwicmV0Iiwibm9kZXMiLCJTdmVsdGVFbGVtZW50IiwiJCRjb21wb25lbnRDdG9yIiwiJCRzbG90cyIsInVzZV9zaGFkb3dfZG9tIiwidHlwZSIsImxpc3RlbmVyIiwidW5zdWIiLCJjcmVhdGVfc2xvdCIsImV4aXN0aW5nX3Nsb3RzIiwiZ2V0X2N1c3RvbV9lbGVtZW50X3ZhbHVlIiwicmVmbGVjdF9hdHRyaWJ1dGVzIiwiYXR0cmlidXRlX3ZhbHVlIiwiX29sZFZhbHVlIiwibmV3VmFsdWUiLCJfYSIsImF0dHJpYnV0ZV9uYW1lIiwicHJvcCIsInByb3BzX2RlZmluaXRpb24iLCJ0cmFuc2Zvcm0iLCJjcmVhdGVfY3VzdG9tX2VsZW1lbnQiLCJDb21wb25lbnQiLCJzbG90cyIsImFjY2Vzc29ycyIsIkNsYXNzIiwiYWNjZXNzb3IiLCJTdmVsdGVDb21wb25lbnQiLCJjYWxsYmFja3MiLCJpbmRleCIsIlBVQkxJQ19WRVJTSU9OIiwicmF3X3ZhbHVlIiwiY3R4IiwiaHRtbF90YWciLCJzcGFuIiwiZWFjaF9ibG9ja3MiLCJsaW5lX2NoYW5nZXMiLCJpZl9ibG9jazAiLCJjcmVhdGVfaWZfYmxvY2tfNCIsImNyZWF0ZV9pZl9ibG9ja18zIiwiZGl2IiwiJCRwcm9wcyIsImluZGVudCIsInBhcmVudEFycmF5Iiwic3ZnIiwiZGVmcyIsImNsaXBQYXRoMCIsInBhdGgwIiwiY2xpcFBhdGgxIiwicGF0aDEiLCJwYXRoMiIsImcxIiwicGF0aDMiLCJnMCIsInBhdGg0IiwicGF0aDUiLCJwYXRoNiIsInBhdGg3IiwicGF0aDgiLCJwYXRoOSIsInBhdGgxMCIsInBhdGgxMSIsInBhdGgxMiIsInBhdGgxMyIsInBhdGgxNCIsInBhdGgxNSIsInBhdGgxNiIsInBhdGgxNyIsInBhdGgxOCIsInBhdGgxOSIsInBhdGgyMCIsInBhdGgyMSIsInBhdGgyMiIsInBhdGgyMyIsInBhdGgyNCIsInBhdGgyNSIsInBhdGgyNiIsInBhdGgyNyIsInBhdGgyOCIsInBhdGgyOSIsInBhdGgzMCIsInBhdGgzMSIsInBhdGgzMiIsInBhdGgzMyIsInBhdGgzNCIsInBhdGgzNSIsInBhdGgzNiIsInBhdGgzNyIsInBhdGgzOCIsInBhdGgzOSIsInBhdGg0MCIsInBhdGg0MSIsInBhdGg0MiIsInBhdGg0MyIsInBhdGg0NCIsInBhdGg0NSIsInBhdGg0NiIsInBhdGg0NyIsInBhdGg0OCIsInBhdGg0OSIsInBhdGg1MCIsInBhdGg1MSIsInBhdGg1MiIsInBhdGg1MyIsInBhdGg1NCIsImczIiwicGF0aDU1IiwiZzIiLCJwYXRoNTYiLCJwYXRoNTciLCJwYXRoNTgiLCJwYXRoNTkiLCJwYXRoNjAiLCJwYXRoNjEiLCJwYXRoNjIiLCJwYXRoNjMiLCJwYXRoNjQiLCJwYXRoNjUiLCJwYXRoNjYiLCJwYXRoNjciLCJwYXRoNjgiLCJwYXRoNjkiLCJwYXRoNzAiLCJwYXRoNzEiLCJwYXRoNzIiLCJwYXRoNzMiLCJwYXRoNzQiLCJwYXRoNzUiLCJwYXRoNzYiLCJwYXRoNzciLCJwYXRoNzgiLCJwYXRoNzkiLCJwYXRoODAiLCJwYXRoODEiLCJwYXRoODIiLCJwYXRoODMiLCJwYXRoODQiLCJwYXRoODUiLCJwYXRoODYiLCJwYXRoODciLCJwYXRoODgiLCJwYXRoODkiLCJwYXRoOTAiLCJwYXRoOTEiLCJwYXRoOTIiLCJwYXRoOTMiLCJwYXRoOTQiLCJwYXRoOTUiLCJwYXRoOTYiLCJwYXRoOTciLCJwYXRoOTgiLCJwYXRoOTkiLCJwYXRoMTAwIiwicGF0aDEwMSIsInBhdGgxMDIiLCJwYXRoMTAzIiwicGF0aDEwNCIsInBhdGgxMDUiLCJwYXRoMTA2IiwicGF0aDEwNyIsInBhdGgxMDgiLCJwYXRoMTA5IiwicGF0aDExMCIsInBhdGgxMTEiLCJ3aWR0aCIsImhlaWdodCIsImciLCJwYXRoIiwiY29kZSIsInNlcnZpY2VzIiwiTG9nbyIsIkdycGMiLCJXYXNpIiwicmVzb3VyY2VzIiwiZ2V0T2Zmc2V0IiwiZWwiLCJyZWN0IiwiY2FsY3VsYXRlTGluZSIsInByZXZpZXdFbCIsImxlZnRFbCIsInJpZ2h0RWwiLCJpbnZlcnQiLCJvZmZzZXQiLCJvZmYxIiwib2ZmMiIsIngxIiwieTEiLCJ4MiIsInkyIiwiZWFjaF92YWx1ZV82IiwibW91c2VlbnRlcl9oYW5kbGVyIiwic3dpdGNoX3ZhbHVlIiwiaDMwIiwicDAiLCJoMzEiLCJwMSIsImJ1dHRvbiIsImRpYWxvZyIsImRpdjAiLCJkaXYxIiwiZWFjaF92YWx1ZV8zIiwiaWZfYmxvY2siLCJjcmVhdGVfaWZfYmxvY2siLCJlYWNoX3ZhbHVlXzIiLCJsaW5lXzEiLCJkaXY0IiwiZGl2MyIsImRpdjIiLCJlYWNoX2Jsb2Nrc18zIiwiZWFjaF9ibG9ja3NfMiIsImVhY2hfYmxvY2tzXzEiLCJkYXJrIiwic2VydmljZXNFbHMiLCJzZXJ2aWNlRGlhbG9ncyIsImNvZGVibG9ja0VscyIsInJlc3VsdGJsb2NrRWxzIiwiXyIsImFjdGl2ZUNvZGVibG9ja3MiLCJhY3RpdmVSZXN1bHRibG9ja3MiLCJhY3RpdmVTZXJ2aWNlIiwibGluZXMiLCJoaWdobGlnaHQiLCJpZCIsImFjdGl2ZUNCcyIsInN2YyIsInMiLCJzdmNFbCIsIiQkaW52YWxpZGF0ZSIsIm5ld0xpbmVzIiwiY29kZWJsb2NrIiwibGluZSIsImFjdGl2ZVJlc3VsdHMiLCJqIiwicmVzdWx0YmxvY2tzIiwicmVzdWx0YmxvY2siLCJyZXNldCIsImQiLCJzaG93RGlhbG9nIiwiZGlhbG9nT2Zmc2V0IiwieCIsInkiLCJwcmV2aWV3SGVpZ2h0IiwicHJldmlld1dpZHRoIiwiJCR2YWx1ZSIsInNlcnZpY2UiLCJvdXRlciJdLCJtYXBwaW5ncyI6ImszQkFDTyxTQUFTQSxHQUFPLENBQUUsQ0FXbEIsU0FBU0MsR0FBT0MsRUFBS0MsRUFBSyxDQUVoQyxVQUFXQyxLQUFLRCxFQUFLRCxFQUFJRSxDQUFDLEVBQUlELEVBQUlDLENBQUMsRUFDbkMsT0FBNkJGLENBQzlCLENBdUJPLFNBQVNHLEdBQUlDLEVBQUksQ0FDdkIsT0FBT0EsRUFBRSxDQUNWLENBRU8sU0FBU0MsSUFBZSxDQUM5QixPQUFPLE9BQU8sT0FBTyxJQUFJLENBQzFCLENBTU8sU0FBU0MsR0FBUUMsRUFBSyxDQUM1QkEsRUFBSSxRQUFRSixFQUFHLENBQ2hCLENBTU8sU0FBU0ssR0FBWUMsRUFBTyxDQUNsQyxPQUFPLE9BQU9BLEdBQVUsVUFDekIsQ0FHTyxTQUFTQyxHQUFlQyxFQUFHQyxFQUFHLENBQ3BDLE9BQU9ELEdBQUtBLEVBQUlDLEdBQUtBLEVBQUlELElBQU1DLEdBQU1ELEdBQUssT0FBT0EsR0FBTSxVQUFhLE9BQU9BLEdBQU0sVUFDbEYsQ0FzRE8sU0FBU0UsR0FBU0MsRUFBSyxDQUM3QixPQUFPLE9BQU8sS0FBS0EsQ0FBRyxFQUFFLFNBQVcsQ0FDcEMsQ0FnSE8sU0FBU0MsR0FBdUJDLEVBQU8sQ0FDN0MsTUFBTUMsRUFBUyxDQUFBLEVBQ2YsVUFBV2YsS0FBS2MsRUFBV2QsRUFBRSxDQUFDLElBQU0sTUFBS2UsRUFBT2YsQ0FBQyxFQUFJYyxFQUFNZCxDQUFDLEdBQzVELE9B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QUFBUCxFQUFBLENBQUEsQ0FBQSxFQUVBUCxFQUFlLFFBQVN1QixHQUFBLENBQ3RCQSxFQUFFLE1BQUEsS0FJQUMsRUFBY2hOLEdBQUEsQ0FDWixNQUFBd0ssRUFBU2dCLEVBQWV4TCxDQUFLLEVBQ25Dd0ssRUFBTyxLQUFBLEVBRUQsTUFBQWYsRUFBU1IsR0FBVUksQ0FBUyxFQUM1QjRELEVBQWVoRSxHQUFVdUIsQ0FBTSxFQUMvQkQsRUFBU3RCLEdBQVVzQyxFQUFZdkwsQ0FBSyxDQUFBLEVBR3BDa04sRUFBSUQsRUFBYSxNQUFRLEdBQ3pCRSxFQUFJNUMsRUFBTyxJQUFNMEMsRUFBYSxPQUFTLEdBQUt4RCxFQUFPLElBRXpEZSxFQUFPLE1BQU0sUUFBVTBDLENBQUMsS0FDeEIxQyxFQUFPLE1BQU0sT0FBUzJDLENBQUMsTUFHckIsSUFBQUMsRUFDQUMsYUFpQnFDckIsRUFBVTVQLEVBQUUsT0FBTyw4Q0FFekNxUCxFQUFhekwsQ0FBSyxFQUFBc04sdURBb0JWOUIsRUFBZXhMLENBQUssRUFBQXNOLDJCQU5yQ3RCLEVBQVV1QixFQUFRLEVBQUUsRUFDcEJQLEVBQVdoTixDQUFLLCtDQUdQdUwsRUFBWXZMLENBQUssRUFBQXNOLHlEQXdCYjVCLEVBQWU4QixDQUFLLEVBQUV4TixDQUFLLEVBQUFzTixxREF2RHJDakUsRUFBU2lFLHdCQUNERixFQUFhLEtBQUEsYUFDZEMsRUFBWSxLQUFBIiwieF9nb29nbGVfaWdub3JlTGlzdCI6WzAsMSwyLDMsNCw1LDYsNyw4LDldfQ==
